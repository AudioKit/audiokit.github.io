{"Other Typealiases.html#/DeviceID":{"name":"DeviceID"},"Other Typealiases.html#/s:8AudioKit8DeviceIDa":{"name":"DeviceID"},"Other Typealiases.html#/s:8AudioKit10AKCallbacka":{"name":"AKCallback"},"Other Typealiases.html#/s:8AudioKit8MIDIBytea":{"name":"MIDIByte"},"Other Typealiases.html#/s:8AudioKit8MIDIWorda":{"name":"MIDIWord"},"Other Typealiases.html#/s:8AudioKit14MIDINoteNumbera":{"name":"MIDINoteNumber"},"Other Typealiases.html#/s:8AudioKit12MIDIVelocitya":{"name":"MIDIVelocity"},"Other Typealiases.html#/s:8AudioKit11MIDIChannela":{"name":"MIDIChannel"},"Other Typealiases.html#/s:8AudioKit11AKCCallbacka":{"name":"AKCCallback","abstract":"<p>Callback function that can be called from C</p>"},"Other Typealiases.html#/s:8AudioKit3BPMa":{"name":"BPM"},"Other Typealiases.html#/s:8AudioKit19AKThresholdCallbacka":{"name":"AKThresholdCallback"},"Other Typealiases.html#/s:8AudioKit23ClipRecordingCompletiona":{"name":"ClipRecordingCompletion","abstract":"<p>A closure that will be called when the clip is finished recording."},"Structs/ClipRecording.html#/s:8AudioKit13ClipRecordingV3url10Foundation3URLVvp":{"name":"url","parent_name":"ClipRecording"},"Structs/ClipRecording.html#/s:8AudioKit13ClipRecordingV9startTimeSdvp":{"name":"startTime","parent_name":"ClipRecording"},"Structs/ClipRecording.html#/s:8AudioKit13ClipRecordingV8durationSdvp":{"name":"duration","parent_name":"ClipRecording"},"Structs/AKTimeSignature/TimeSignatureBottomValue.html#/s:8AudioKit15AKTimeSignatureV04TimeD11BottomValueO3twoyA2EmF":{"name":"two","parent_name":"TimeSignatureBottomValue"},"Structs/AKTimeSignature/TimeSignatureBottomValue.html#/s:8AudioKit15AKTimeSignatureV04TimeD11BottomValueO4fouryA2EmF":{"name":"four","parent_name":"TimeSignatureBottomValue"},"Structs/AKTimeSignature/TimeSignatureBottomValue.html#/s:8AudioKit15AKTimeSignatureV04TimeD11BottomValueO5eightyA2EmF":{"name":"eight","parent_name":"TimeSignatureBottomValue"},"Structs/AKTimeSignature/TimeSignatureBottomValue.html#/s:8AudioKit15AKTimeSignatureV04TimeD11BottomValueO7sixteenyA2EmF":{"name":"sixteen","parent_name":"TimeSignatureBottomValue"},"Structs/AKTimeSignature/TimeSignatureBottomValue.html":{"name":"TimeSignatureBottomValue","parent_name":"AKTimeSignature"},"Structs/AKTimeSignature.html#/s:8AudioKit15AKTimeSignatureV8topValues5UInt8Vvp":{"name":"topValue","parent_name":"AKTimeSignature"},"Structs/AKTimeSignature.html#/s:8AudioKit15AKTimeSignatureV11bottomValueAC04Timed6BottomF0Ovp":{"name":"bottomValue","parent_name":"AKTimeSignature"},"Structs/AKTimeSignature.html#/s:8AudioKit15AKTimeSignatureV8topValue06bottomF0ACs5UInt8V_AC04Timed6BottomF0Otcfc":{"name":"init(topValue:bottomValue:)","parent_name":"AKTimeSignature"},"Structs/AKTimeSignature.html#/s:8AudioKit15AKTimeSignatureV012readableTimeD0Si_Sitvp":{"name":"readableTimeSignature","parent_name":"AKTimeSignature"},"Structs/AKTimeSignature.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AKTimeSignature"},"Structs/AKMIDINoteData.html#/s:8AudioKit14AKMIDINoteDataV10noteNumbers5UInt8Vvp":{"name":"noteNumber","parent_name":"AKMIDINoteData"},"Structs/AKMIDINoteData.html#/s:8AudioKit14AKMIDINoteDataV8velocitys5UInt8Vvp":{"name":"velocity","parent_name":"AKMIDINoteData"},"Structs/AKMIDINoteData.html#/s:8AudioKit14AKMIDINoteDataV7channels5UInt8Vvp":{"name":"channel","parent_name":"AKMIDINoteData"},"Structs/AKMIDINoteData.html#/s:8AudioKit14AKMIDINoteDataV8durationAA10AKDurationVvp":{"name":"duration","parent_name":"AKMIDINoteData"},"Structs/AKMIDINoteData.html#/s:8AudioKit14AKMIDINoteDataV8positionAA10AKDurationVvp":{"name":"position","parent_name":"AKMIDINoteData"},"Structs/AKMIDINoteData.html#/s:8AudioKit14AKMIDINoteDataV10noteNumber8velocity7channel8duration8positionACs5UInt8V_A2jA10AKDurationVALtcfc":{"name":"init(noteNumber:velocity:channel:duration:position:)","parent_name":"AKMIDINoteData"},"Structs/AKMIDINoteData.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AKMIDINoteData"},"Structs/EndpointInfo.html#/s:8AudioKit12EndpointInfoV4nameSSvp":{"name":"name","abstract":"<p>Unique name</p>","parent_name":"EndpointInfo"},"Structs/EndpointInfo.html#/s:8AudioKit12EndpointInfoV11displayNameSSvp":{"name":"displayName","abstract":"<p>Dispaly name</p>","parent_name":"EndpointInfo"},"Structs/EndpointInfo.html#/s:8AudioKit12EndpointInfoV5modelSSvp":{"name":"model","abstract":"<p>Model information</p>","parent_name":"EndpointInfo"},"Structs/EndpointInfo.html#/s:8AudioKit12EndpointInfoV12manufacturerSSvp":{"name":"manufacturer","abstract":"<p>Manufacturer</p>","parent_name":"EndpointInfo"},"Structs/EndpointInfo.html#/s:8AudioKit12EndpointInfoV5imageSSvp":{"name":"image","abstract":"<p>Image?</p>","parent_name":"EndpointInfo"},"Structs/EndpointInfo.html#/s:8AudioKit12EndpointInfoV11driverOwnerSSvp":{"name":"driverOwner","abstract":"<p>Driver Owner</p>","parent_name":"EndpointInfo"},"Structs/AudioUnitPropertyListener.html#/s:8AudioKit0A20UnitPropertyListenerV0acdE8Callbacka":{"name":"AudioUnitPropertyListenerCallback","parent_name":"AudioUnitPropertyListener"},"Structs/AudioUnitPropertyListener.html#/s:8AudioKit0A20UnitPropertyListenerV8callbackACys13OpaquePointerV_s6UInt32Vtc_tcfc":{"name":"init(callback:)","abstract":"<p>Initialize the listener with a callback</p>","parent_name":"AudioUnitPropertyListener"},"Structs/AudioUnitPropertyListener.html":{"name":"AudioUnitPropertyListener","abstract":"<p>Listener to properties in an audio unit</p>"},"Structs/EndpointInfo.html":{"name":"EndpointInfo","abstract":"<p>MIDI Endpoint Information</p>"},"Structs/AKMIDINoteData.html":{"name":"AKMIDINoteData","abstract":"<p>Struct holding revelant data for AKMusicTrack note events</p>"},"Structs/AKTimeSignature.html":{"name":"AKTimeSignature"},"Structs/ClipRecording.html":{"name":"ClipRecording"},"Protocols/AKAudioUnitManagerDelegate.html#/s:8AudioKit26AKAudioUnitManagerDelegateP06handleaD12Notification4type6objectyAA0cdE0C0H0O_ypSgtF":{"name":"handleAudioUnitNotification(type:object:)","parent_name":"AKAudioUnitManagerDelegate"},"Protocols/AKAudioUnitManagerDelegate.html#/s:8AudioKit26AKAudioUnitManagerDelegateP17handleEffectAdded2atySi_tF":{"name":"handleEffectAdded(at:)","parent_name":"AKAudioUnitManagerDelegate"},"Protocols/AKAudioUnitManagerDelegate.html#/s:8AudioKit26AKAudioUnitManagerDelegateP19handleEffectRemoved2atySi_tF":{"name":"handleEffectRemoved(at:)","abstract":"<p>If your UI needs to handle an effect being removed</p>","parent_name":"AKAudioUnitManagerDelegate"},"Protocols/Occupiable.html#/s:8AudioKit10OccupiableP7isEmptySbvp":{"name":"isEmpty","parent_name":"Occupiable"},"Protocols/Occupiable.html#/s:8AudioKit10OccupiableP10isNotEmptySbvp":{"name":"isNotEmpty","parent_name":"Occupiable"},"Protocols/AUComponent.html#/s:8AudioKit11AUComponentP20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","parent_name":"AUComponent"},"Protocols/Aliased.html#/s:8AudioKit7AliasedP5_SelfQa":{"name":"_Self","parent_name":"Aliased"},"Protocols/Aliased.html":{"name":"Aliased","abstract":"<p>Helpful in reducing repetitive code in AudioKit</p>"},"Protocols/AUComponent.html":{"name":"AUComponent","abstract":"<p>Helpful in reducing repetitive code in AudioKit</p>"},"Protocols/Occupiable.html":{"name":"Occupiable"},"Protocols/AKAudioUnitManagerDelegate.html":{"name":"AKAudioUnitManagerDelegate"},"Other Functions.html#/s:8AudioKit3teeoiySbSd_SdtF":{"name":"~==(_:_:)","abstract":"<p>Approximation Operators - for when Swift gets double / float arithmetic wrong</p>"},"Other Functions.html#/s:8AudioKit3tneoiySbSd_SdtF":{"name":"~!=(_:_:)"},"Other Functions.html#/s:8AudioKit3tleoiySbSd_SdtF":{"name":"~<=(_:_:)"},"Other Functions.html#/s:8AudioKit3tgeoiySbSd_SdtF":{"name":"~>=(_:_:)"},"Other Functions.html#/s:8AudioKit2tloiySbSd_SdtF":{"name":"~<(_:_:)"},"Other Functions.html#/s:8AudioKit2tgoiySbSd_SdtF":{"name":"~>(_:_:)"},"Other Functions.html#/s:8AudioKit6random2inSdSNySdG_tF":{"name":"random(in:)","abstract":"<p>Random double in range</p>"},"Other Functions.html#/s:8AudioKit008deiFBEEeopyS2bF":{"name":"❗️(_:)","abstract":"<p>Negative logic can be confusing, so we draw special attention to those cases</p>"},"Extensions/Float.html#/s:Sf8AudioKitE5valueSdyF":{"name":"value()","abstract":"<p>Get basic value as a double</p>","parent_name":"Float"},"Extensions/OSStatus.html#/s:s5Int32V8AudioKitE5checkyyKF":{"name":"check()","abstract":"<p>Check for and throw an error</p>","parent_name":"OSStatus"},"Extensions/ClosedRange.html#/s:SN8AudioKitE5clampyxxF":{"name":"clamp(_:)","abstract":"<p>Clamp value to the range</p>","parent_name":"ClosedRange"},"Extensions/RangeReplaceableCollection.html#/s:Sm8AudioKits27ExpressibleByIntegerLiteral7ElementRpzrlE5zerosxSi_tcfc":{"name":"init(zeros:)","abstract":"<p>Initialize array with zeros, ~10x faster than append for array of size 4096</p>","parent_name":"RangeReplaceableCollection"},"Extensions/UInt8.html#/s:s5UInt8V8AudioKitE19midiNoteToFrequencyyS2dF":{"name":"midiNoteToFrequency(_:)","abstract":"<p>Calculate frequency from a MIDI Note Number</p>","parent_name":"UInt8"},"Extensions/Int.html#/s:Si8AudioKitE19midiNoteToFrequencyyS2dF":{"name":"midiNoteToFrequency(_:)","abstract":"<p>Calculate frequency from a MIDI Note Number</p>","parent_name":"Int"},"Extensions/Int.html#/s:Si8AudioKitE19frequencyToMIDINoteyS2dF":{"name":"frequencyToMIDINote(_:)","abstract":"<p>Calculate MIDI Note Number from a frequency in Hz</p>","parent_name":"Int"},"Extensions/Int.html#/s:Si8AudioKitE5valueSdyF":{"name":"value()","abstract":"<p>Get basic value as a double</p>","parent_name":"Int"},"Extensions/Double.html#/s:Sd8AudioKitE10normalized4from5taperSdSNySdG_SdtF":{"name":"normalized(from:taper:)","abstract":"<p>Return a value on [minimum, maximum] to a [0, 1] range, according to a taper</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE10normalized7minimum7maximum5taperS2d_S2dtF":{"name":"normalized(minimum:maximum:taper:)","abstract":"<p>Return a value on [minimum, maximum] to a [0, 1] range, according to a taper</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE9normalize7minimum7maximum5taperySd_S2dtF":{"name":"normalize(minimum:maximum:taper:)","abstract":"<p>Convert a value on [minimum, maximum] to a [0, 1] range, according to a taper</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE12denormalized2to5taperSdSNySdG_SdtF":{"name":"denormalized(to:taper:)","abstract":"<p>Return a value on [0, 1] to a [minimum, maximum] range, according to a taper</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE12denormalized7minimum7maximum5taperS2d_S2dtF":{"name":"denormalized(minimum:maximum:taper:)","abstract":"<p>Return a value on [0, 1] to a [minimum, maximum] range, according to a taper</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE11denormalize7minimum7maximum5taperySd_S2dtF":{"name":"denormalize(minimum:maximum:taper:)","abstract":"<p>Convert a value on [0, 1] to a [min, max] range, according to a taper</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE19midiNoteToFrequencyyS2dF":{"name":"midiNoteToFrequency(_:)","abstract":"<p>Calculate frequency from a floating point MIDI Note Number</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE19frequencyToMIDINoteyS2dF":{"name":"frequencyToMIDINote(_:)","abstract":"<p>Calculate MIDI Note Number from a frequency in Hz</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE5valueSdyF":{"name":"value()","abstract":"<p>Get basic value as a double</p>","parent_name":"Double"},"Extensions/Collection.html#/s:Sl8AudioKitE11randomIndex0D0Qzvp":{"name":"randomIndex","abstract":"<p>Return a random element from the collection</p>","parent_name":"Collection"},"Extensions/Collection.html#/s:Sl8AudioKitE13randomElement0D0QzyF":{"name":"randomElement()","abstract":"<p>Retrieve a random element from the collection</p>","parent_name":"Collection"},"Extensions/Notification/Name.html#/s:So18NSNotificationNamea8AudioKitE33AKEngineRestartedAfterRouteChangeABvpZ":{"name":"AKEngineRestartedAfterRouteChange","abstract":"<p>After the audio route is changed, (headphones plugged in, for example) AudioKit restarts,","parent_name":"Name"},"Extensions/Notification/Name.html#/s:So18NSNotificationNamea8AudioKitE41AKEngineRestartedAfterConfigurationChangeABvpZ":{"name":"AKEngineRestartedAfterConfigurationChange","abstract":"<p>After the audio engine configuration is changed, (change in input or output hardware&rsquo;s channel count or","parent_name":"Name"},"Extensions/Notification/Name.html":{"name":"Name","abstract":"<p>Object to handle notifications for events that can affect the audio</p>","parent_name":"Notification"},"Extensions/AUParameterTree.html#/s:So15AUParameterTreeC8AudioKitEySo0A0CSgSScip":{"name":"subscript(_:)","parent_name":"AUParameterTree"},"Extensions/AUParameterTree.html":{"name":"AUParameterTree"},"Extensions/Notification.html":{"name":"Notification"},"Extensions/Collection.html":{"name":"Collection"},"Extensions/Double.html":{"name":"Double","abstract":"<p>Extension to calculate scaling factors, useful for UI controls</p>"},"Extensions/Int.html":{"name":"Int","abstract":"<p>Extension to Int to calculate frequency from a MIDI Note Number</p>"},"Extensions/UInt8.html":{"name":"UInt8","abstract":"<p>Extension to Int to calculate frequency from a MIDI Note Number</p>"},"Extensions/RangeReplaceableCollection.html":{"name":"RangeReplaceableCollection"},"Extensions/ClosedRange.html":{"name":"ClosedRange"},"Extensions/OSStatus.html":{"name":"OSStatus","abstract":"<p>Extension to add a check function</p>"},"Extensions/Float.html":{"name":"Float","abstract":"<p>Numeric extension for floats</p>"},"Enums/SampleTriggerMode.html#/s:8AudioKit17SampleTriggerModeO4HoldyA2CmF":{"name":"Hold","abstract":"<p>Hold - play the sample on note on, and stop the sample on note-off</p>","parent_name":"SampleTriggerMode"},"Enums/SampleTriggerMode.html#/s:8AudioKit17SampleTriggerModeO0D0yA2CmF":{"name":"Trigger","abstract":"<p>Trigger - play the sample on note on, ignore note-off</p>","parent_name":"SampleTriggerMode"},"Enums/SampleTriggerMode.html#/s:8AudioKit17SampleTriggerModeO4LoopyA2CmF":{"name":"Loop","abstract":"<p>Loop - play the sample on note on, loop the sample playback until note-off received</p>","parent_name":"SampleTriggerMode"},"Enums/SampleTriggerMode.html#/s:8AudioKit17SampleTriggerModeO6RepeatyA2CmF":{"name":"Repeat","abstract":"<p>Repeat - useful for &lsquo;note-repeat&rsquo; type applications. Works with a sequencer to repeat note at intervals</p>","parent_name":"SampleTriggerMode"},"Enums/ClipRecordingResult.html#/s:8AudioKit19ClipRecordingResultO4clipyAcA0cD0VcACmF":{"name":"clip(_:)","parent_name":"ClipRecordingResult"},"Enums/ClipRecordingResult.html#/s:8AudioKit19ClipRecordingResultO5erroryACs5Error_pcACmF":{"name":"error(_:)","parent_name":"ClipRecordingResult"},"Enums/ClipMergeError.html#/s:8AudioKit14ClipMergeErrorO11clipInvalidyA2CmF":{"name":"clipInvalid","parent_name":"ClipMergeError"},"Enums/ClipMergeError.html#/s:8AudioKit14ClipMergeErrorO12clipsOverlapyA2CmF":{"name":"clipsOverlap","parent_name":"ClipMergeError"},"Enums/ClipMergeError.html":{"name":"ClipMergeError"},"Enums/ClipRecordingResult.html":{"name":"ClipRecordingResult"},"Enums/SampleTriggerMode.html":{"name":"SampleTriggerMode","abstract":"<p>Type of triggering to use</p>"},"Other Global Variables.html#/s:8AudioKit12callbackUgenAA08AKCustomD0Cvp":{"name":"callbackUgen","abstract":"<p>Metronome Callback Ugen</p>"},"Classes/AKWaveTable.html#/s:8AudioKit11AKWaveTableC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/s:8AudioKit11AKWaveTableC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/c:@M@AudioKit@objc(cs)AKWaveTable(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/c:@M@AudioKit@objc(cs)AKWaveTable(py)startPoint":{"name":"startPoint","abstract":"<p>startPoint in samples - where to start playing the sample from</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/c:@M@AudioKit@objc(cs)AKWaveTable(py)endPoint":{"name":"endPoint","abstract":"<p>endPoint - this is where the sample will play to before stopping.","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/c:@M@AudioKit@objc(cs)AKWaveTable(py)loopStartPoint":{"name":"loopStartPoint","abstract":"<p>loopStartPoint in samples - where to start playing the sample from</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/c:@M@AudioKit@objc(cs)AKWaveTable(py)loopEndPoint":{"name":"loopEndPoint","abstract":"<p>loopEndPoint - this is where the sample will play to before stopping.</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/c:@M@AudioKit@objc(cs)AKWaveTable(py)rate":{"name":"rate","abstract":"<p>playback rate - A value of 1 is normal, 2 is double speed, 0.5 is halfspeed, etc.</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/c:@M@AudioKit@objc(cs)AKWaveTable(py)volume":{"name":"volume","abstract":"<p>Volume - amplitude adjustment</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/c:@M@AudioKit@objc(cs)AKWaveTable(py)loopEnabled":{"name":"loopEnabled","abstract":"<p>Loop Enabled - if enabled, the sample will loop back to the startpoint when the endpoint is reached.","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/s:8AudioKit11AKWaveTableC4sizes6UInt32Vvp":{"name":"size","abstract":"<p>Number of samples in the audio stored in memory</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/s:8AudioKit11AKWaveTableC18originalSampleRateSdSgvp":{"name":"originalSampleRate","abstract":"<p>originalSampleRate</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/s:8AudioKit11AKWaveTableC18normalizedPositionSdvp":{"name":"normalizedPosition","abstract":"<p>Position in the audio file from 0 - 1</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/s:8AudioKit11AKWaveTableC8positionSdvp":{"name":"position","abstract":"<p>Position in the audio in samples, but represented as a double since","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/c:@M@AudioKit@objc(cs)AKWaveTable(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/s:8AudioKit11AKWaveTableC21loadCompletionHandleryycvp":{"name":"loadCompletionHandler","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/s:8AudioKit11AKWaveTableC17completionHandleryycvp":{"name":"completionHandler","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/s:8AudioKit11AKWaveTableC12loopCallbackyycvp":{"name":"loopCallback","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/c:@M@AudioKit@objc(cs)AKWaveTable(im)initWithFile:startPoint:endPoint:rate:volume:maximumSamples:completionHandler:loadCompletionHandler:":{"name":"init(file:startPoint:endPoint:rate:volume:maximumSamples:completionHandler:loadCompletionHandler:)","abstract":"<p>Initialize this SamplePlayer node</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/c:@M@AudioKit@objc(cs)AKWaveTable(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/c:@M@AudioKit@objc(cs)AKWaveTable(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/s:8AudioKit11AKWaveTableC4playyyF":{"name":"play()","abstract":"<p>Play from a certain sample</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/s:8AudioKit11AKWaveTableC4play4fromys6UInt32V_tF":{"name":"play(from:)","abstract":"<p>Play from a certain sample</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/s:8AudioKit11AKWaveTableC4play4from6lengthys6UInt32V_AHtF":{"name":"play(from:length:)","abstract":"<p>Play from a certain sample for a certain number of samples</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/s:8AudioKit11AKWaveTableC4play4from2toys6UInt32V_AHtF":{"name":"play(from:to:)","abstract":"<p>Play from a certain sample to an end sample</p>","parent_name":"AKWaveTable"},"Classes/AKWaveTable.html#/s:8AudioKit11AKWaveTableC4load4fileyAA11AKAudioFileC_tF":{"name":"load(file:)","abstract":"<p>Load a new audio file into memory</p>","parent_name":"AKWaveTable"},"Classes/AKDiskStreamer.html#/s:8AudioKit14AKDiskStreamerC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/s:8AudioKit14AKDiskStreamerC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/c:@M@AudioKit@objc(cs)AKDiskStreamer(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/c:@M@AudioKit@objc(cs)AKDiskStreamer(py)volume":{"name":"volume","abstract":"<p>Volume - amplitude adjustment</p>","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/c:@M@AudioKit@objc(cs)AKDiskStreamer(py)loopEnabled":{"name":"loopEnabled","abstract":"<p>Loop Enabled - if enabled, the sample will loop back to the startpoint when the endpoint is reached.","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/s:8AudioKit14AKDiskStreamerC4sizes6UInt32Vvp":{"name":"size","abstract":"<p>Number of samples in the audio stored in memory</p>","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/s:8AudioKit14AKDiskStreamerC18originalSampleRateSdSgvp":{"name":"originalSampleRate","abstract":"<p>originalSampleRate</p>","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/s:8AudioKit14AKDiskStreamerC18normalizedPositionSdvp":{"name":"normalizedPosition","abstract":"<p>Position in the audio file from 0 - 1</p>","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/s:8AudioKit14AKDiskStreamerC8positionSdvp":{"name":"position","abstract":"<p>Position in the audio in samples, but represented as a double since","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/c:@M@AudioKit@objc(cs)AKDiskStreamer(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/s:8AudioKit14AKDiskStreamerC21loadCompletionHandleryycvp":{"name":"loadCompletionHandler","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/s:8AudioKit14AKDiskStreamerC17completionHandleryycvp":{"name":"completionHandler","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/c:@M@AudioKit@objc(cs)AKDiskStreamer(im)initWithVolume:completionHandler:loadCompletionHandler:":{"name":"init(volume:completionHandler:loadCompletionHandler:)","abstract":"<p>Initialize this SamplePlayer node</p>","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/c:@M@AudioKit@objc(cs)AKDiskStreamer(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/c:@M@AudioKit@objc(cs)AKDiskStreamer(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/s:8AudioKit14AKDiskStreamerC4playyyF":{"name":"play()","abstract":"<p>Play from a certain sample</p>","parent_name":"AKDiskStreamer"},"Classes/AKDiskStreamer.html#/s:8AudioKit14AKDiskStreamerC4load4fileyAA11AKAudioFileC_tF":{"name":"load(file:)","abstract":"<p>Load a new audio file into memory - this must be done after audiokit starts</p>","parent_name":"AKDiskStreamer"},"Classes/AKAUPresetBuilder.html#/s:8AudioKit17AKAUPresetBuilderC14createAUPreset4dict4path14instrumentName6attack7releaseySaySo19NSMutableDictionaryCG_S2SSdSgAMtFZ":{"name":"createAUPreset(dict:path:instrumentName:attack:release:)","abstract":"<p>Create an AUPreset from a collection of dictionaries.","parent_name":"AKAUPresetBuilder"},"Classes/AKAUPresetBuilder.html#/s:8AudioKit17AKAUPresetBuilderC18generateDictionary8rootNote8filename05startH003endH0So09NSMutableF0CSi_SSS2itFZ":{"name":"generateDictionary(rootNote:filename:startNote:endNote:)","abstract":"<p>This functions returns 1 dictionary entry for a particular sample zone. You then add this to an array,","parent_name":"AKAUPresetBuilder"},"Classes/AKAUPresetBuilder.html#/s:8AudioKit17AKAUPresetBuilderC15buildInstrument4name11connections9envelopes6filter4lfos5zones8filerefs6layersS2S_S7StFZ":{"name":"buildInstrument(name:connections:envelopes:filter:lfos:zones:filerefs:layers:)","abstract":"<p>Build the instrument file</p>","parent_name":"AKAUPresetBuilder"},"Classes/AKSamplerAudioUnit.html#/c:@M@AudioKit@objc(cs)AKSamplerAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKSamplerAudioUnit"},"Classes/AKSamplerAudioUnit.html#/c:@M@AudioKit@objc(cs)AKSamplerAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKSamplerAudioUnit"},"Classes/AKSamplerAudioUnit.html#/s:8AudioKit09AKSamplerA4UnitC13stopAllVoicesyyF":{"name":"stopAllVoices()","parent_name":"AKSamplerAudioUnit"},"Classes/AKSamplerAudioUnit.html#/s:8AudioKit09AKSamplerA4UnitC13restartVoicesyyF":{"name":"restartVoices()","parent_name":"AKSamplerAudioUnit"},"Classes/AKSamplerAudioUnit.html#/s:8AudioKit09AKSamplerA4UnitC14loadSampleData4fromySo08AKSampleG10Descriptora_tF":{"name":"loadSampleData(from:)","parent_name":"AKSamplerAudioUnit"},"Classes/AKSamplerAudioUnit.html#/s:8AudioKit09AKSamplerA4UnitC24loadCompressedSampleFile4fromySo08AKSampleH10Descriptora_tF":{"name":"loadCompressedSampleFile(from:)","parent_name":"AKSamplerAudioUnit"},"Classes/AKSamplerAudioUnit.html#/s:8AudioKit09AKSamplerA4UnitC16unloadAllSamplesyyF":{"name":"unloadAllSamples()","parent_name":"AKSamplerAudioUnit"},"Classes/AKSamplerAudioUnit.html#/s:8AudioKit09AKSamplerA4UnitC17buildSimpleKeyMapyyF":{"name":"buildSimpleKeyMap()","parent_name":"AKSamplerAudioUnit"},"Classes/AKSamplerAudioUnit.html#/s:8AudioKit09AKSamplerA4UnitC11buildKeyMapyyF":{"name":"buildKeyMap()","parent_name":"AKSamplerAudioUnit"},"Classes/AKSamplerAudioUnit.html#/s:8AudioKit09AKSamplerA4UnitC7setLoop11thruReleaseySb_tF":{"name":"setLoop(thruRelease:)","parent_name":"AKSamplerAudioUnit"},"Classes/AKSamplerAudioUnit.html#/s:8AudioKit09AKSamplerA4UnitC8playNote10noteNumber8velocity0G9Frequencyys5UInt8V_AISftF":{"name":"playNote(noteNumber:velocity:noteFrequency:)","parent_name":"AKSamplerAudioUnit"},"Classes/AKSamplerAudioUnit.html#/s:8AudioKit09AKSamplerA4UnitC8stopNote10noteNumber9immediateys5UInt8V_SbtF":{"name":"stopNote(noteNumber:immediate:)","parent_name":"AKSamplerAudioUnit"},"Classes/AKSamplerAudioUnit.html#/s:8AudioKit09AKSamplerA4UnitC12sustainPedal4downySb_tF":{"name":"sustainPedal(down:)","parent_name":"AKSamplerAudioUnit"},"Classes/AKDynamicPlayer.html#/s:8AudioKit15AKDynamicPlayerC13timePitchNodeAA06AKTimeF0CSgvp":{"name":"timePitchNode","abstract":"<p>The time pitch node - disabled by default</p>","parent_name":"AKDynamicPlayer"},"Classes/AKDynamicPlayer.html#/s:8AudioKit15AKDynamicPlayerC4rateSdvp":{"name":"rate","abstract":"<p>Rate (rate) ranges from 0.03125 to 32.0 (Default: 1.0 and disabled)</p>","parent_name":"AKDynamicPlayer"},"Classes/AKDynamicPlayer.html#/s:8AudioKit15AKDynamicPlayerC5pitchSdvp":{"name":"pitch","abstract":"<p>Pitch (Cents) ranges from -2400 to 2400 (Default: 0.0 and disabled)</p>","parent_name":"AKDynamicPlayer"},"Classes/AKDynamicPlayer.html#/s:8AudioKit15AKDynamicPlayerC4play4from2to2at8hostTimeySd_SdSo07AVAudioJ0CSgs6UInt64VSgtF":{"name":"play(from:to:at:hostTime:)","parent_name":"AKDynamicPlayer"},"Classes/AKDynamicPlayer.html#/c:@M@AudioKit@objc(cs)AKDynamicPlayer(im)stop":{"name":"stop()","abstract":"<p>Stop playback and cancel any pending scheduled playback or completion events</p>","parent_name":"AKDynamicPlayer"},"Classes/AKDynamicPlayer.html#/s:8AudioKit15AKDynamicPlayerC6detachyyF":{"name":"detach()","parent_name":"AKDynamicPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)audioFileBuffer":{"name":"audioFileBuffer","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)completionHandler":{"name":"completionHandler","abstract":"<p>Will be triggered when AKAudioPlayer has finished to play.","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)looping":{"name":"looping","abstract":"<p>Boolean indicating whether or not to loop the playback (Default false)</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)reversed":{"name":"reversed","abstract":"<p>Boolean indicating to play the buffer in reverse</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)fadeInTime":{"name":"fadeInTime","abstract":"<p>Fade in duration</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)fadeOutTime":{"name":"fadeOutTime","abstract":"<p>Fade out duration</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)audioFile":{"name":"audioFile","abstract":"<p>The current played AKAudioFile</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)path":{"name":"path","abstract":"<p>Path to the currently loaded AKAudioFile</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)duration":{"name":"duration","abstract":"<p>Total duration of one loop through of the file</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)volume":{"name":"volume","abstract":"<p>Output Volume (Default 1)</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)isStarted":{"name":"isStarted","abstract":"<p>Whether or not the audio player is currently started</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)currentTime":{"name":"currentTime","abstract":"<p>Current playback time (in seconds)</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)playhead":{"name":"playhead","abstract":"<p>Time within the audio file at the current time</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)pan":{"name":"pan","abstract":"<p>Pan (Default Center = 0)</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)startTime":{"name":"startTime","abstract":"<p>Seconds into the audio file to start playback at</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)endTime":{"name":"endTime","abstract":"<p>Seconds into the audio file to stop playback</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)scheduledTime":{"name":"scheduledTime","abstract":"<p>Sets the time in the future when playback will commence. Recommend using play(from:to:avTime) instead.","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)scheduledAVTime":{"name":"scheduledAVTime","abstract":"<p>Sheduled time</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)initWithFile:looping:lazyBuffering:error:completionHandler:":{"name":"init(file:looping:lazyBuffering:completionHandler:)","abstract":"<p>Initialize the audio player</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)start":{"name":"start()","abstract":"<p>Start playback</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/s:8AudioKit13AKAudioPlayerC4play2atySo11AVAudioTimeCSg_tF":{"name":"play(at:)","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)stop":{"name":"stop()","abstract":"<p>Stop playback</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/s:8AudioKit13AKAudioPlayerC5pauseyyF":{"name":"pause()","abstract":"<p>Pause playback</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/s:8AudioKit13AKAudioPlayerC6resumeyyF":{"name":"resume()","abstract":"<p>Restart playback from current position</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/s:8AudioKit13AKAudioPlayerC10reloadFileyyKF":{"name":"reloadFile()","abstract":"<p>resets in and out times for playing</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)replaceWithFile:error:":{"name":"replace(file:)","abstract":"<p>Replace player&rsquo;s file with a new AKAudioFile file</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/s:8AudioKit13AKAudioPlayerC4playyyF":{"name":"play()","abstract":"<p>Default play that will use the previously set startTime and endTime properties or the full file if both are 0</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)playFrom:to:":{"name":"play(from:to:)","abstract":"<p>Play from startTime to endTime</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/s:8AudioKit13AKAudioPlayerC4play4from2to4whenySd_S2dtF":{"name":"play(from:to:when:)","abstract":"<p>Play the file back from a certain time, to an end time (if set).","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/s:8AudioKit13AKAudioPlayerC4play4from2to6avTimeySd_SdSo07AVAudioI0CSgtF":{"name":"play(from:to:avTime:)","abstract":"<p>Play the file back from a certain time, to an end time (if set). You can optionally set a scheduled time","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/s:8AudioKit13AKAudioPlayerC8schedule4from2to6avTimeySd_SdSo07AVAudioI0CSgtF":{"name":"schedule(from:to:avTime:)","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/s:8AudioKit13AKAudioPlayerC11getPeakTimeSdyF":{"name":"getPeakTime()","abstract":"<p>return the peak time in the currently loaded buffer</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/s:8AudioKit13AKAudioPlayerC20secondsToAVAudioTime04hostH04timeSo0gH0Cs6UInt64V_SdtFZ":{"name":"secondsToAVAudioTime(hostTime:time:)","abstract":"<p>Convert to AVAudioTime</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)stopAtNextLoopEnd":{"name":"stopAtNextLoopEnd()","abstract":"<p>Stop playback after next loop completes</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)disconnect":{"name":"disconnect()","parent_name":"AKAudioPlayer"},"Classes/AKOfflineRenderNode.html#/s:8AudioKit19AKOfflineRenderNodeC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKOfflineRenderNode"},"Classes/AKOfflineRenderNode.html#/s:8AudioKit19AKOfflineRenderNodeC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","parent_name":"AKOfflineRenderNode"},"Classes/AKOfflineRenderNode.html#/s:8AudioKit19AKOfflineRenderNodeC08internalD7EnabledSbvp":{"name":"internalRenderEnabled","abstract":"<p>Turn on or off internal rendering</p>","parent_name":"AKOfflineRenderNode"},"Classes/AKOfflineRenderNode.html#/c:@M@AudioKit@objc(cs)AKOfflineRenderNode(im)renderToURL:duration:settings:error:":{"name":"renderToURL(_:duration:settings:)","abstract":"<p>Render audio to a file given by a URL</p>","parent_name":"AKOfflineRenderNode"},"Classes/AKOfflineRenderNode.html#/c:@M@AudioKit@objc(cs)AKOfflineRenderNode(im)renderToBufferFor:error:":{"name":"renderToBuffer(for:)","abstract":"<p>Render audio to memory</p>","parent_name":"AKOfflineRenderNode"},"Classes/AKOfflineRenderNode.html#/c:@M@AudioKit@objc(cs)AKOfflineRenderNode(im)init:":{"name":"init(_:)","abstract":"<p>Initialize the offline rendering of a specific node</p>","parent_name":"AKOfflineRenderNode"},"Classes/AKStereoFieldLimiterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKStereoFieldLimiterAudioUnit"},"Classes/AKStereoFieldLimiterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKStereoFieldLimiterAudioUnit"},"Classes/AKStereoFieldLimiterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKStereoFieldLimiterAudioUnit"},"Classes/AKPannerAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPannerAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKPannerAudioUnit"},"Classes/AKPannerAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPannerAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKPannerAudioUnit"},"Classes/AKPannerAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPannerAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKPannerAudioUnit"},"Classes/AKInputConnection.html#/s:8AudioKit17AKInputConnectionC4nodeAA0C0_pvp":{"name":"node","parent_name":"AKInputConnection"},"Classes/AKInputConnection.html#/s:8AudioKit17AKInputConnectionC3busSivp":{"name":"bus","parent_name":"AKInputConnection"},"Classes/AKInputConnection.html#/s:8AudioKit17AKInputConnectionC4node3busAcA0C0_p_Sitcfc":{"name":"init(node:bus:)","parent_name":"AKInputConnection"},"Classes/AKInputConnection.html#/s:8AudioKit17AKInputConnectionC02avD0So07AVAudioD5PointCvp":{"name":"avConnection","parent_name":"AKInputConnection"},"Classes/AKNodeTiming.html#/s:8AudioKit12AKNodeTimingC4nodeAA8AKOutput_pSgXwvp":{"name":"node","abstract":"<p>An output node used for tming info.</p>","parent_name":"AKNodeTiming"},"Classes/AKNodeTiming.html#/s:8AudioKit12AKNodeTimingC11currentTimeSdvp":{"name":"currentTime","abstract":"<p>The current time in the timeline (seconds).</p>","parent_name":"AKNodeTiming"},"Classes/AKNodeTiming.html#/s:8AudioKit12AKNodeTimingC5startyyF":{"name":"start()","abstract":"<p>Start playback immediately.</p>","parent_name":"AKNodeTiming"},"Classes/AKNodeTiming.html#/c:@M@AudioKit@objc(cs)AKNodeTiming(im)stop":{"name":"stop()","abstract":"<p>Stops playback immediately.</p>","parent_name":"AKNodeTiming"},"Classes/AKNodeTiming.html#/s:8AudioKit12AKNodeTimingC4nodeAcA8AKOutput_p_tcfc":{"name":"init(node:)","abstract":"<p>Initialize with a node to be used for timing info.</p>","parent_name":"AKNodeTiming"},"Classes/AKNodeTiming.html#/c:@CM@AudioKit@objc(cs)AKNodeTiming(py)isStarted":{"name":"isStarted","parent_name":"AKNodeTiming"},"Classes/AKNodeTiming.html#/c:@M@AudioKit@objc(pl)AKTiming(im)positionAtAudioTime:":{"name":"position(at:)","parent_name":"AKNodeTiming"},"Classes/AKNodeTiming.html#/c:@M@AudioKit@objc(pl)AKTiming(im)audioTimeAtPosition:":{"name":"audioTime(at:)","parent_name":"AKNodeTiming"},"Classes/AKNodeTiming.html#/c:@M@AudioKit@objc(pl)AKTiming(im)startAt:":{"name":"start(at:)","parent_name":"AKNodeTiming"},"Classes/AKNodeTiming.html#/c:@M@AudioKit@objc(pl)AKTiming(im)setPosition:":{"name":"setPosition(_:)","parent_name":"AKNodeTiming"},"Classes/AKScheduledAction.html#/s:8AudioKit17AKScheduledActionC8interval5blockACSd_yyctcfc":{"name":"init(interval:block:)","parent_name":"AKScheduledAction"},"Classes/AKTuningTableBase.html#/s:8AudioKit17AKTuningTableBaseC9Frequencya":{"name":"Frequency","abstract":"<p>For clarity, typealias Frequency as a Double</p>","parent_name":"AKTuningTableBase"},"Classes/AKTuningTableBase.html#/s:8AudioKit17AKTuningTableBaseC5Centsa":{"name":"Cents","abstract":"<p>For clarify, typealias Cents as a Double.","parent_name":"AKTuningTableBase"},"Classes/AKTuningTableBase.html#/s:8AudioKit17AKTuningTableBaseC7NYQUISTSdvpZ":{"name":"NYQUIST","abstract":"<p>Standard Nyquist frequency</p>","parent_name":"AKTuningTableBase"},"Classes/AKTuningTableBase.html#/c:@M@AudioKit@objc(cs)AKTuningTableBase(cpy)midiNoteCount":{"name":"midiNoteCount","abstract":"<p>Total number of MIDI Notes available to play</p>","parent_name":"AKTuningTableBase"},"Classes/AKTuningTableBase.html#/c:@M@AudioKit@objc(cs)AKTuningTableBase(im)init":{"name":"init()","abstract":"<p>Initialization for standard default 12 tone equal temperament</p>","parent_name":"AKTuningTableBase"},"Classes/AKTuningTableBase.html#/c:@M@AudioKit@objc(cs)AKTuningTableBase(py)npo":{"name":"npo","abstract":"<p>Notes Per Octave: The count of the frequency array","parent_name":"AKTuningTableBase"},"Classes/AKTuningTableBase.html#/c:@M@AudioKit@objc(cs)AKTuningTableBase(im)frequencyForNoteNumber:":{"name":"frequency(forNoteNumber:)","abstract":"<p>Return the Frequency for the given MIDINoteNumber</p>","parent_name":"AKTuningTableBase"},"Classes/AKTuningTableBase.html#/c:@M@AudioKit@objc(cs)AKTuningTableBase(im)setFrequency:at:":{"name":"setFrequency(_:at:)","abstract":"<p>Set frequency of a given note number</p>","parent_name":"AKTuningTableBase"},"Classes/AKTuningTableDelta12ET.html#/c:@M@AudioKit@objc(cs)AKTuningTableDelta12ET(py)nn":{"name":"nn","parent_name":"AKTuningTableDelta12ET"},"Classes/AKTuningTableDelta12ET.html#/c:@M@AudioKit@objc(cs)AKTuningTableDelta12ET(py)cents":{"name":"cents","parent_name":"AKTuningTableDelta12ET"},"Classes/AKTuningTableDelta12ET.html#/c:@M@AudioKit@objc(cs)AKTuningTableDelta12ET(im)init::":{"name":"init(_:_:)","parent_name":"AKTuningTableDelta12ET"},"Classes/AKTuningTableETNN.html#/c:@M@AudioKit@objc(cs)AKTuningTableETNN(py)nn":{"name":"nn","parent_name":"AKTuningTableETNN"},"Classes/AKTuningTableETNN.html#/c:@M@AudioKit@objc(cs)AKTuningTableETNN(py)pitchBend":{"name":"pitchBend","parent_name":"AKTuningTableETNN"},"Classes/AKTuningTableETNN.html#/c:@M@AudioKit@objc(cs)AKTuningTableETNN(im)init::":{"name":"init(_:_:)","parent_name":"AKTuningTableETNN"},"Classes/AKAudioUnitManager/Notification.html#/s:8AudioKit18AKAudioUnitManagerC12NotificationO16effectsAvailableyA2EmF":{"name":"effectsAvailable","parent_name":"Notification"},"Classes/AKAudioUnitManager/Notification.html#/s:8AudioKit18AKAudioUnitManagerC12NotificationO20instrumentsAvailableyA2EmF":{"name":"instrumentsAvailable","parent_name":"Notification"},"Classes/AKAudioUnitManager/Notification.html#/s:8AudioKit18AKAudioUnitManagerC12NotificationO7changedyA2EmF":{"name":"changed","parent_name":"Notification"},"Classes/AKAudioUnitManager/Notification.html#/s:8AudioKit18AKAudioUnitManagerC12NotificationO7crashedyA2EmF":{"name":"crashed","parent_name":"Notification"},"Classes/AKAudioUnitManager/Notification.html#/s:8AudioKit18AKAudioUnitManagerC12NotificationO5addedyA2EmF":{"name":"added","parent_name":"Notification"},"Classes/AKAudioUnitManager/Notification.html":{"name":"Notification","abstract":"<p>The notifications this class may generate</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC23AKComponentListCallbacka":{"name":"AKComponentListCallback","abstract":"<p>Callback definitions</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC16AKEffectCallbacka":{"name":"AKEffectCallback","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC20AKInstrumentCallbacka":{"name":"AKInstrumentCallback","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC8delegateAA0cdE8Delegate_pSgXwvp":{"name":"delegate","abstract":"<p>Delegate that will be sent notifications</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC5inputAA6AKNodeCSgvp":{"name":"input","abstract":"<p>first node in chain, generally a player or instrument</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC6outputAA6AKNodeCSgvp":{"name":"output","abstract":"<p>last node in chain, generally a mixer or some kind of output</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC12effectsChainSaySo07AVAudioD0CSgGvp":{"name":"effectsChain","abstract":"<p>Effects Chain</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC12effectsCountSivp":{"name":"effectsCount","abstract":"<p>How many effects are active</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC16availableEffectsSaySo07AVAudioD9ComponentCGvp":{"name":"availableEffects","abstract":"<p><code>availableEffects</code> is accessed from multiple thread contexts. Use a dispatch queue for synchronization.</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC20availableInstrumentsSaySo07AVAudioD9ComponentCGvp":{"name":"availableInstruments","abstract":"<p><code>availableInstruments</code> is accessed from multiple thread contexts. Use a dispatch queue for synchronization.</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC7insertsACSi_tcfc":{"name":"init(inserts:)","abstract":"<p>Initialize the manager with arbritary amount of inserts</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(im)init":{"name":"init()","abstract":"<p>Initialize the manager</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC14requestEffects17completionHandleryySaySo07AVAudioD9ComponentCGcSg_tF":{"name":"requestEffects(completionHandler:)","abstract":"<p>requests a list of Effects, and caches the results</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC18requestInstruments17completionHandleryySaySo07AVAudioD9ComponentCGcSg_tF":{"name":"requestInstruments(completionHandler:)","abstract":"<p>request a list of Instruments and caches the results</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC16createInstrument4name17completionHandlerySS_ySo07AVAudioD14MIDIInstrumentCSgctF":{"name":"createInstrument(name:completionHandler:)","abstract":"<p>Create an instrument by name. The Audio Unit will be returned in the callback.</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC12createEffect4name17completionHandlerySS_ySo07AVAudioD0CSgctF":{"name":"createEffect(name:completionHandler:)","abstract":"<p>Create an effect by name. The Audio Unit will be returned in the callback.</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC12removeEffect2at14reconnectChainySi_SbtF":{"name":"removeEffect(at:reconnectChain:)","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC06insertaD04name2atySS_SitF":{"name":"insertAudioUnit(name:at:)","abstract":"<p>Create the Audio Unit at the specified index of the chain</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC13removeEffectsyyF":{"name":"removeEffects()","abstract":"<p>Removes all effects from the effectsChain</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC14connectEffects9firstNode04lastI0yAA6AKNodeCSg_AItF":{"name":"connectEffects(firstNode:lastNode:)","abstract":"<p>called from client to hook the chain together","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC5resetyyF":{"name":"reset()","abstract":"<p>Clear all linked units previous processing state. IE, Panic button.</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC7disposeyyF":{"name":"dispose()","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC08internalA5UnitsSaySSGvpZ":{"name":"internalAudioUnits","abstract":"<p>Internal audio units not including the Apple ones, only the custom ones</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC16effectComponents17completionHandleryySaySo07AVAudioD9ComponentCGcSg_tFZ":{"name":"effectComponents(completionHandler:)","abstract":"<p>request a list of all installed Effect AudioUnits, will be returned async</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC20instrumentComponents17completionHandleryySaySo07AVAudioD9ComponentCGcSg_tFZ":{"name":"instrumentComponents(completionHandler:)","abstract":"<p>request a list of Instruments, will be returned async</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC012createEffectaD0_17completionHandlerySo0A20ComponentDescriptionV_ySo07AVAudioD0CSgctFZ":{"name":"createEffectAudioUnit(_:completionHandler:)","abstract":"<p>Asynchronously create the AU, then call the","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC016createInstrumentaD0_17completionHandlerySo0A20ComponentDescriptionV_ySo07AVAudioD14MIDIInstrumentCSgctFZ":{"name":"createInstrumentAudioUnit(_:completionHandler:)","abstract":"<p>Asynchronously create the AU, then call the","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC16canLoadInProcess20componentDescriptionSbSo0a9ComponentK0V_tFZ":{"name":"canLoadInProcess(componentDescription:)","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC20createInternalEffect4nameSo07AVAudioD0CSgSS_tFZ":{"name":"createInternalEffect(name:)","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitInstrument.html#/s:8AudioKit21AKAudioUnitInstrumentC05audioD0ACSgSo07AVAudioD14MIDIInstrumentC_tcfc":{"name":"init(audioUnit:)","abstract":"<p>Initialize the audio unit instrument</p>","parent_name":"AKAudioUnitInstrument"},"Classes/AKAudioUnitInstrument.html#/s:8AudioKit21AKAudioUnitInstrumentC4play10noteNumber8velocity7channelys5UInt8V_A2ItF":{"name":"play(noteNumber:velocity:channel:)","abstract":"<p>Send MIDI Note On information to the audio unit</p>","parent_name":"AKAudioUnitInstrument"},"Classes/AKAudioUnitInstrument.html#/c:@M@AudioKit@objc(cs)AKAudioUnitInstrument(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Send MIDI Note Off information to the audio unit</p>","parent_name":"AKAudioUnitInstrument"},"Classes/AKAudioUnitInstrument.html#/c:@M@AudioKit@objc(cs)AKAudioUnitInstrument(im)stopWithNoteNumber:channel:":{"name":"stop(noteNumber:channel:)","parent_name":"AKAudioUnitInstrument"},"Classes/AKConverter/Options.html#/s:8AudioKit11AKConverterC7OptionsVAEycfc":{"name":"init()","parent_name":"Options"},"Classes/AKConverter/Options.html#/s:8AudioKit11AKConverterC7OptionsV6formatSSSgvp":{"name":"format","parent_name":"Options"},"Classes/AKConverter/Options.html#/s:8AudioKit11AKConverterC7OptionsV10sampleRateSdSgvp":{"name":"sampleRate","parent_name":"Options"},"Classes/AKConverter/Options.html#/s:8AudioKit11AKConverterC7OptionsV8bitDepths6UInt32VSgvp":{"name":"bitDepth","abstract":"<p>used only with PCM data</p>","parent_name":"Options"},"Classes/AKConverter/Options.html#/s:8AudioKit11AKConverterC7OptionsV7bitRates6UInt32Vvp":{"name":"bitRate","abstract":"<p>used only when outputting compressed from PCM</p>","parent_name":"Options"},"Classes/AKConverter/Options.html#/s:8AudioKit11AKConverterC7OptionsV8channelss6UInt32VSgvp":{"name":"channels","parent_name":"Options"},"Classes/AKConverter/Options.html#/s:8AudioKit11AKConverterC7OptionsV13isInterleavedSbSgvp":{"name":"isInterleaved","parent_name":"Options"},"Classes/AKConverter/Options.html#/s:8AudioKit11AKConverterC7OptionsV9eraseFileSbvp":{"name":"eraseFile","abstract":"<p>overwrite existing files, set false if you want to handle this before you call start()</p>","parent_name":"Options"},"Classes/AKConverter.html#/s:8AudioKit11AKConverterC0C8Callbacka":{"name":"AKConverterCallback","abstract":"<p>AKConverterCallback is the callback format for start()","parent_name":"AKConverter"},"Classes/AKConverter.html#/s:8AudioKit11AKConverterC13outputFormatsSaySSGvpZ":{"name":"outputFormats","abstract":"<p>Formats that this class can write</p>","parent_name":"AKConverter"},"Classes/AKConverter.html#/s:8AudioKit11AKConverterC12inputFormatsSaySSGvpZ":{"name":"inputFormats","abstract":"<p>Formats that this class can read</p>","parent_name":"AKConverter"},"Classes/AKConverter/Options.html":{"name":"Options","abstract":"<p>The conversion options, leave nil to adopt the value of the input file</p>","parent_name":"AKConverter"},"Classes/AKConverter.html#/s:8AudioKit11AKConverterC8inputURL10Foundation0E0VSgvp":{"name":"inputURL","parent_name":"AKConverter"},"Classes/AKConverter.html#/s:8AudioKit11AKConverterC9outputURL10Foundation0E0VSgvp":{"name":"outputURL","parent_name":"AKConverter"},"Classes/AKConverter.html#/s:8AudioKit11AKConverterC7optionsAC7OptionsVSgvp":{"name":"options","parent_name":"AKConverter"},"Classes/AKConverter.html#/s:8AudioKit11AKConverterC8inputURL06outputE07optionsAC10Foundation0E0V_AiC7OptionsVSgtcfc":{"name":"init(inputURL:outputURL:options:)","abstract":"<p>init with input, output and options - then start()</p>","parent_name":"AKConverter"},"Classes/AKConverter.html#/s:8AudioKit11AKConverterC5start17completionHandleryys5Error_pSgcSg_tF":{"name":"start(completionHandler:)","abstract":"<p>The entry point for file conversion</p>","parent_name":"AKConverter"},"Classes/AKConverter.html":{"name":"AKConverter","abstract":"<p>AKConverter wraps the more complex AVFoundation and CoreAudio audio conversions in an easy to use format.</p>"},"Classes/AKAudioUnitInstrument.html":{"name":"AKAudioUnitInstrument","abstract":"<p>Wrapper for audio units that accept MIDI (ie. instruments)</p>"},"Classes/AKAudioUnitManager.html":{"name":"AKAudioUnitManager","abstract":"<p>Audio Unit Manager</p>"},"Classes/AKTuningTableETNN.html":{"name":"AKTuningTableETNN","abstract":"<p>helper object to simulate a Swift tuple for ObjC interoperability</p>"},"Classes/AKTuningTableDelta12ET.html":{"name":"AKTuningTableDelta12ET","abstract":"<p>helper object to simulate a Swift tuple for ObjC interoperability</p>"},"Classes/AKTuningTableBase.html":{"name":"AKTuningTableBase","abstract":"<p>AKTuningTableBase provides low-level methods for creating arbitrary mappings of midi note numbers to musical frequencies"},"Classes/AKScheduledAction.html":{"name":"AKScheduledAction"},"Classes/AKNodeTiming.html":{"name":"AKNodeTiming","abstract":"<p>An AKTiming implementation that uses a node for it&rsquo;s render time info.</p>"},"Classes/AKInputConnection.html":{"name":"AKInputConnection","abstract":"<p>A transitory used to pass connection information.</p>"},"Classes/AKPannerAudioUnit.html":{"name":"AKPannerAudioUnit"},"Classes/AKStereoFieldLimiterAudioUnit.html":{"name":"AKStereoFieldLimiterAudioUnit"},"Classes/AKOfflineRenderNode.html":{"name":"AKOfflineRenderNode","abstract":"<p>Node to render audio quickly into a buffer of memory or into a file</p>"},"Classes/AKAudioPlayer.html":{"name":"AKAudioPlayer","abstract":"<p>Not so simple audio playback class</p>"},"Classes/AKDynamicPlayer.html":{"name":"AKDynamicPlayer"},"Classes/AKSamplerAudioUnit.html":{"name":"AKSamplerAudioUnit"},"Classes/AKAUPresetBuilder.html":{"name":"AKAUPresetBuilder","abstract":"<p>Builds presets for Apple sampler to read from</p>"},"Classes/AKDiskStreamer.html":{"name":"AKDiskStreamer","abstract":"<p>Audio player that loads a sample into memory</p>"},"Classes/AKWaveTable.html":{"name":"AKWaveTable","abstract":"<p>Audio player that loads a sample into memory</p>"},"Extensions/AudioUnit.html#/s:s13OpaquePointerV8AudioKitE8getValue11forPropertyxs6UInt32V_tKlF":{"name":"getValue(forProperty:)","abstract":"<p>Get value for a property</p>","parent_name":"AudioUnit"},"Extensions/AudioUnit.html#/s:s13OpaquePointerV8AudioKitE8setValue5value11forPropertyyx_s6UInt32VtKlF":{"name":"setValue(value:forProperty:)","abstract":"<p>Set value for a property</p>","parent_name":"AudioUnit"},"Extensions/AudioUnit.html#/s:s13OpaquePointerV8AudioKitE3add8listener10toPropertyyAC0c4UnitH8ListenerV_s6UInt32VtKF":{"name":"add(listener:toProperty:)","abstract":"<p>Add a listener to a property</p>","parent_name":"AudioUnit"},"Extensions/AudioUnit.html#/s:s13OpaquePointerV8AudioKitE6remove8listener12fromPropertyyAC0c4UnitH8ListenerV_s6UInt32VtF":{"name":"remove(listener:fromProperty:)","abstract":"<p>Remove a listener from a property</p>","parent_name":"AudioUnit"},"Extensions/AudioUnit.html#/s:s13OpaquePointerV8AudioKitE15getPropertyInfo10propertyIDs6UInt32V8dataSize_Sb8writabletAG_tKF":{"name":"getPropertyInfo(propertyID:)","abstract":"<p>Get property information</p>","parent_name":"AudioUnit"},"Extensions/AudioUnit.html#/s:s13OpaquePointerV8AudioKitE11getProperty10propertyID8dataSizexs6UInt32V_AHtKlF":{"name":"getProperty(propertyID:dataSize:)","abstract":"<p>Get property</p>","parent_name":"AudioUnit"},"Extensions/AudioUnit.html#/s:s13OpaquePointerV8AudioKitE11setProperty10propertyID8dataSize0I0ys6UInt32V_AIxtKlF":{"name":"setProperty(propertyID:dataSize:data:)","abstract":"<p>Set a property</p>","parent_name":"AudioUnit"},"Extensions/AudioComponentDescription.html#/s:So25AudioComponentDescriptionV0A3KitE4type7subTypeABs6UInt32V_AGtcfc":{"name":"init(type:subType:)","abstract":"<p>Initialize with type and sub-type</p>","parent_name":"AudioComponentDescription"},"Extensions/AudioComponentDescription.html#/s:So25AudioComponentDescriptionV0A3KitE11appleEffectABs6UInt32V_tcfc":{"name":"init(appleEffect:)","abstract":"<p>Initialize with an Apple effect</p>","parent_name":"AudioComponentDescription"},"Extensions/AudioComponentDescription.html#/s:So25AudioComponentDescriptionV0A3KitE6effectABs6UInt32V_tcfc":{"name":"init(effect:)","abstract":"<p>Initialize as an effect with sub-type</p>","parent_name":"AudioComponentDescription"},"Extensions/AudioComponentDescription.html#/s:So25AudioComponentDescriptionV0A3KitE6effectABSS_tcfc":{"name":"init(effect:)","abstract":"<p>Initialize as an effect with sub-type string</p>","parent_name":"AudioComponentDescription"},"Extensions/AudioComponentDescription.html#/s:So25AudioComponentDescriptionV0A3KitE5mixerABSS_tcfc":{"name":"init(mixer:)","abstract":"<p>Initialize as a mixer with a sub-type string</p>","parent_name":"AudioComponentDescription"},"Extensions/AudioComponentDescription.html#/s:So25AudioComponentDescriptionV0A3KitE9generatorABSS_tcfc":{"name":"init(generator:)","abstract":"<p>Initialize as a generator with a sub-type string</p>","parent_name":"AudioComponentDescription"},"Extensions/AudioComponentDescription.html#/s:So25AudioComponentDescriptionV0A3KitE10instrumentABSS_tcfc":{"name":"init(instrument:)","abstract":"<p>Initialize as an instrument with a sub-type string</p>","parent_name":"AudioComponentDescription"},"Extensions/AVAudioUnit.html#/s:So11AVAudioUnitC8AudioKitE12_instantiate4with8callbackySo0C20ComponentDescriptionV_yABctFZ":{"name":"_instantiate(with:callback:)","parent_name":"AVAudioUnit"},"Extensions/AVAudioTime.html#/s:So11AVAudioTimeC8AudioKitE011extrapolateB7Shimmed10fromAnchorA2B_tF":{"name":"extrapolateTimeShimmed(fromAnchor:)","abstract":"<p>AVAudioTime.extrapolateTime fails for host time valid times, use","parent_name":"AVAudioTime"},"Extensions/AVAudioTime.html#/s:So11AVAudioTimeC8AudioKitE3nowAByFZ":{"name":"now()","abstract":"<p>An AVAudioTime with a valid hostTime representing now.</p>","parent_name":"AVAudioTime"},"Extensions/AVAudioTime.html#/s:So11AVAudioTimeC8AudioKitE6offset7secondsABSd_tF":{"name":"offset(seconds:)","abstract":"<p>Returns an AVAudioTime offset by seconds.</p>","parent_name":"AVAudioTime"},"Extensions/AVAudioTime.html#/s:So11AVAudioTimeC8AudioKitE17timeIntervalSince05otherB0SdSgAB_tF":{"name":"timeIntervalSince(otherTime:)","abstract":"<p>The time in seconds between receiver and otherTime.</p>","parent_name":"AVAudioTime"},"Extensions/AVAudioTime.html#/s:So11AVAudioTimeC8AudioKitE9toSeconds04hostB0Sds6UInt64V_tF":{"name":"toSeconds(hostTime:)","abstract":"<p>Convert an AVAudioTime object to seconds with a hostTime reference</p>","parent_name":"AVAudioTime"},"Extensions/AVAudioTime.html#/s:So11AVAudioTimeC8AudioKitE09secondsTocB004hostB04timeABs6UInt64V_SdtFZ":{"name":"secondsToAudioTime(hostTime:time:)","abstract":"<p>Convert seconds to AVAudioTime with a hostTime reference &ndash; time must be &gt; 0</p>","parent_name":"AVAudioTime"},"Extensions/AVAudioPCMBuffer/Peak.html#/s:So16AVAudioPCMBufferC8AudioKitE4PeakVAEycfc":{"name":"init()","parent_name":"Peak"},"Extensions/AVAudioPCMBuffer/Peak.html#/s:So16AVAudioPCMBufferC8AudioKitE4PeakV3minSfvpZ":{"name":"min","parent_name":"Peak"},"Extensions/AVAudioPCMBuffer/Peak.html#/s:So16AVAudioPCMBufferC8AudioKitE4PeakV4timeSdvp":{"name":"time","parent_name":"Peak"},"Extensions/AVAudioPCMBuffer/Peak.html#/s:So16AVAudioPCMBufferC8AudioKitE4PeakV13framePositionSivp":{"name":"framePosition","parent_name":"Peak"},"Extensions/AVAudioPCMBuffer/Peak.html#/s:So16AVAudioPCMBufferC8AudioKitE4PeakV9amplitudeSfvp":{"name":"amplitude","parent_name":"Peak"},"Extensions/AVAudioPCMBuffer/Peak.html":{"name":"Peak","parent_name":"AVAudioPCMBuffer"},"Extensions/AVAudioPCMBuffer.html#/s:So16AVAudioPCMBufferC8AudioKitE4copy4from10readOffset6framess6UInt32VAB_A2ItF":{"name":"copy(from:readOffset:frames:)","abstract":"<p>Copies data from another PCM buffer.  Will copy to the end of the buffer (frameLength), and","parent_name":"AVAudioPCMBuffer"},"Extensions/AVAudioPCMBuffer.html#/s:So16AVAudioPCMBufferC8AudioKitE8copyFrom11startSampleABSgs6UInt32V_tF":{"name":"copyFrom(startSample:)","abstract":"<p>Returns an AVAudioPCMBuffer copied from a sample offset to the end of the buffer.</p>","parent_name":"AVAudioPCMBuffer"},"Extensions/AVAudioPCMBuffer.html#/s:So16AVAudioPCMBufferC8AudioKitE6copyTo5countABSgs6UInt32V_tF":{"name":"copyTo(count:)","abstract":"<p>Returns an AVAudioPCMBuffer copied from the start of the buffer to the specified endSample.</p>","parent_name":"AVAudioPCMBuffer"},"Extensions/AVAudioPCMBuffer.html#/s:So16AVAudioPCMBufferC8AudioKitE8peakTimeSdyF":{"name":"peakTime()","parent_name":"AVAudioPCMBuffer"},"Extensions/AVAudioPCMBuffer.html#/s:So16AVAudioPCMBufferC8AudioKitE4peakAbCE4PeakVSgyF":{"name":"peak()","parent_name":"AVAudioPCMBuffer"},"Extensions/AVAudioPCMBuffer.html#/s:So16AVAudioPCMBufferC8AudioKitE9normalizeABSgyF":{"name":"normalize()","abstract":"<p>Returns a normalized buffer</p>","parent_name":"AVAudioPCMBuffer"},"Extensions/AVAudioPCMBuffer.html#/s:So16AVAudioPCMBufferC8AudioKitE7reverseABSgyF":{"name":"reverse()","abstract":"<p>Returns a reversed buffer</p>","parent_name":"AVAudioPCMBuffer"},"Extensions/AVAudioPCMBuffer.html#/s:So16AVAudioPCMBufferC8AudioKitE4fade6inTime03outG00F8RampType0hiJ0ABSgSd_SdAC10AKSettingsC0iJ0OAMtF":{"name":"fade(inTime:outTime:inRampType:outRampType:)","abstract":"<p>Creates a new buffer from this one that has fades applied to it. Pass 0 for either parameter","parent_name":"AVAudioPCMBuffer"},"Extensions/AVAudioNode.html#/c:@M@AudioKit@objc(pl)AKOutput(py)outputNode":{"name":"outputNode","parent_name":"AVAudioNode"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)samplesCount":{"name":"samplesCount","abstract":"<p>The number of samples can be accessed by .length property,","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)sampleRate":{"name":"sampleRate","abstract":"<p>strange that sampleRate is a Double and not an Integer</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)channelCount":{"name":"channelCount","abstract":"<p>Number of channels, 1 for mono, 2 for stereo</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)duration":{"name":"duration","abstract":"<p>Duration in seconds</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)interleaved":{"name":"interleaved","abstract":"<p>true if Audio Samples are interleaved</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)standard":{"name":"standard","abstract":"<p>true only if file format is <q>deinterleaved native-endian float (AVAudioPCMFormatFloat32)</q></p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)commonFormatString":{"name":"commonFormatString","abstract":"<p>Human-readable version of common format</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)directoryPath":{"name":"directoryPath","abstract":"<p>the directory path as a URL object</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)fileNamePlusExtension":{"name":"fileNamePlusExtension","abstract":"<p>the file name with extension as a String</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)fileName":{"name":"fileName","abstract":"<p>the file name without extension as a String</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)fileExt":{"name":"fileExt","abstract":"<p>the file extension as a String (without <q>.</q>)</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)description":{"name":"description","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)mimeType":{"name":"mimeType","abstract":"<p>returns file Mime Type if exists","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(cm)cleanTempDirectory":{"name":"cleanTempDirectory()","abstract":"<p>Static function to delete all audiofiles from Temp directory</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioEngine.html#/s:So13AVAudioEngineC8AudioKitE7connect_2toySo0A4NodeC_AGtF":{"name":"connect(_:to:)","abstract":"<p>Adding connection between nodes with default format</p>","parent_name":"AVAudioEngine"},"Extensions/AVAudioEngine.html#/s:So13AVAudioEngineC8AudioKitE12renderToFile_8duration9prerenderySo0aG0C_SdyycSgtKF":{"name":"renderToFile(_:duration:prerender:)","abstract":"<p>Render output to an AVAudioFile for a duration.","parent_name":"AVAudioEngine"},"Extensions/AVAudioCommonFormat.html#/s:So19AVAudioCommonFormatV8AudioKitE11descriptionSSvp":{"name":"description","abstract":"<p>Text version of the format</p>","parent_name":"AVAudioCommonFormat"},"Extensions/AVAudioCommonFormat.html":{"name":"AVAudioCommonFormat","abstract":"<p>Adding description property</p>"},"Extensions/AVAudioEngine.html":{"name":"AVAudioEngine"},"Extensions/AVAudioFile.html":{"name":"AVAudioFile","abstract":"<p>Helpful additions for using AVAudioFiles within AudioKit</p>"},"Extensions/AVAudioNode.html":{"name":"AVAudioNode"},"Extensions/AVAudioPCMBuffer.html":{"name":"AVAudioPCMBuffer"},"Extensions/AVAudioTime.html":{"name":"AVAudioTime"},"Extensions/AVAudioUnit.html":{"name":"AVAudioUnit","abstract":"<p>Adding instantiation with component and callback</p>"},"Extensions/AudioComponentDescription.html":{"name":"AudioComponentDescription","abstract":"<p>Adding convenience initializers</p>"},"Extensions/AudioUnit.html":{"name":"AudioUnit","abstract":"<p>Get, set, and listen to properties</p>"},"Classes/AKFFTTap.html#/s:8AudioKit8AKFFTTapC7fftDataSaySdGvp":{"name":"fftData","abstract":"<p>Array of FFT data</p>","parent_name":"AKFFTTap"},"Classes/AKFFTTap.html#/c:@M@AudioKit@objc(cs)AKFFTTap(im)init:":{"name":"init(_:)","abstract":"<p>Initialze the FFT calculation on a given node</p>","parent_name":"AKFFTTap"},"Classes/AKFFTTap.html#/c:@M@AudioKit@objc(cs)AKFFTTap(im)fft:updatedWithFFTData:bufferSize:":{"name":"fft(_:updatedWithFFTData:bufferSize:)","abstract":"<p>Callback function for FFT computation</p>","parent_name":"AKFFTTap"},"Classes/AKAmplitudeTap.html#/s:8AudioKit14AKAmplitudeTapCyAcA6AKNodeCSgcfc":{"name":"init(_:)","abstract":"<p>Intialize the ampltiude tap</p>","parent_name":"AKAmplitudeTap"},"Classes/AKAmplitudeTap.html":{"name":"AKAmplitudeTap","abstract":"<p>Tap to do basic amplitude analysis on any node</p>"},"Classes/AKFFTTap.html":{"name":"AKFFTTap","abstract":"<p>FFT Calculation for any node</p>"},"Random Number Generators.html#/s:8AudioKit6randomyS2d_SdtF":{"name":"random(_:_:)","abstract":"<p>Random double between bounds</p>"},"Math.html#/s:8AudioKit3absyAA11AKOperationCADF":{"name":"abs(_:)","abstract":"<p>Performs absolute value on the operation</p>"},"Math.html#/s:8AudioKit4ceilyAA10AKDurationVADF":{"name":"ceil(_:)","abstract":"<p>Upper bound of a duration, in beats</p>"},"Math.html#/s:8AudioKit5flooryAA11AKOperationCADF":{"name":"floor(_:)","abstract":"<p>Performs floor calculation on the operation</p>"},"Math.html#/s:8AudioKit5fractyAA11AKOperationCADF":{"name":"fract(_:)","abstract":"<p>Returns the fractional part of the operation (as opposed to the integer part)</p>"},"Math.html#/s:8AudioKit3logyAA11AKOperationCADF":{"name":"log(_:)","abstract":"<p>Performs natural logarithm on the operation</p>"},"Math.html#/s:8AudioKit5log10yAA11AKOperationCADF":{"name":"log10(_:)","abstract":"<p>Performs Base 10 logarithm on the operation</p>"},"Math.html#/s:8AudioKit3maxyAA11AKOperationCAA19AKComputedParameter_p_AaE_ptF":{"name":"max(_:_:)","abstract":"<p>Maximum of two operations</p>"},"Math.html#/s:8AudioKit3maxyAA11AKOperationCAA19AKComputedParameter_p_AA11AKParameter_ptF":{"name":"max(_:_:)","abstract":"<p>Maximum of an operation and a parameter</p>"},"Math.html#/s:8AudioKit3maxyAA11AKOperationCAA11AKParameter_p_AA19AKComputedParameter_ptF":{"name":"max(_:_:)","abstract":"<p>Maximum of an operation and a parameter</p>"},"Math.html#/s:8AudioKit3minyAA11AKOperationCAA19AKComputedParameter_p_AaE_ptF":{"name":"min(_:_:)","abstract":"<p>Minimum of two operations</p>"},"Math.html#/s:8AudioKit3minyAA11AKOperationCAA19AKComputedParameter_p_AA11AKParameter_ptF":{"name":"min(_:_:)","abstract":"<p>Minimum of an operation and a parameter</p>"},"Math.html#/s:8AudioKit3minyAA11AKOperationCAA11AKParameter_p_AA19AKComputedParameter_ptF":{"name":"min(_:_:)","abstract":"<p>Minimum of an operation and a parameter</p>"},"Math.html#/s:8AudioKit5mixer__7balanceAA11AKOperationCAA11AKParameter_p_AaF_pAaF_ptF":{"name":"mixer(_:_:balance:)","abstract":"<p>Mix together two parameters</p>"},"Math.html#/s:8AudioKit5roundyAA11AKOperationCADF":{"name":"round(_:)","abstract":"<p>Rounds the operation to the nearest integer</p>"},"Math.html#/s:8AudioKit1moiyAA11AKOperationCAA11AKParameter_p_AaE_ptF":{"name":"*(_:_:)","abstract":"<p>Helper function for Multiplication</p>"},"Math.html#/s:8AudioKit1moiyAA17AKStereoOperationCAD_AA11AKParameter_ptF":{"name":"*(_:_:)","abstract":"<p>Helper function for Multiplication</p>"},"Math.html#/s:8AudioKit1moiyAA17AKStereoOperationCAA11AKParameter_p_ADtF":{"name":"*(_:_:)","abstract":"<p>Helper function for Multiplication</p>"},"Math.html#/s:8AudioKit1moiySdAA7Numeric_p_AaC_ptF":{"name":"*(_:_:)","abstract":"<p>Multiplication</p>"},"Math.html#/s:8AudioKit1poiySo11AVAudioTimeCAD_SdtF":{"name":"+(_:_:)"},"Math.html#/s:8AudioKit1poiySo11AVAudioTimeCAD_SitF":{"name":"+(_:_:)"},"Math.html#/s:8AudioKit1poiyAA11AKOperationCAA11AKParameter_p_AaE_ptF":{"name":"+(_:_:)","abstract":"<p>Helper function for addition</p>"},"Math.html#/s:8AudioKit1poiySdAA7Numeric_p_AaC_ptF":{"name":"+(_:_:)","abstract":"<p>Addition</p>"},"Math.html#/s:8AudioKit1soiySo11AVAudioTimeCAD_SdtF":{"name":"-(_:_:)"},"Math.html#/s:8AudioKit1soiySo11AVAudioTimeCAD_SitF":{"name":"-(_:_:)"},"Math.html#/s:8AudioKit1soiyAA11AKOperationCAA11AKParameter_p_AaE_ptF":{"name":"-(_:_:)","abstract":"<p>Helper function for Subtraction</p>"},"Math.html#/s:8AudioKit1soiyAA17AKStereoOperationCAD_ADtF":{"name":"-(_:_:)","abstract":"<p>Helper function for subtraction</p>"},"Math.html#/s:8AudioKit1soiySdAA7Numeric_p_AaC_ptF":{"name":"-(_:_:)","abstract":"<p>Subtraction</p>"},"Math.html#/s:8AudioKit1sopyAA11AKOperationCAA11AKParameter_pF":{"name":"-(_:)","abstract":"<p>Negation</p>"},"Math.html#/s:8AudioKit1sopyAA17AKStereoOperationCADF":{"name":"-(_:)","abstract":"<p>Negation</p>"},"Math.html#/s:8AudioKit1doiyAA11AKOperationCAA11AKParameter_p_AaE_ptF":{"name":"/(_:_:)","abstract":"<p>Helper function for Division</p>"},"Math.html#/s:8AudioKit1doiyAA17AKStereoOperationCAD_AA11AKParameter_ptF":{"name":"/(_:_:)","abstract":"<p>Helper function for Division</p>"},"Math.html#/s:8AudioKit1doiySdAA7Numeric_p_AaC_ptF":{"name":"/(_:_:)","abstract":"<p>Division</p>"},"Protocols/Numeric.html#/s:8AudioKit7NumericP5valueSdyF":{"name":"value()","abstract":"<p>Raw value of the numeric parameter</p>","parent_name":"Numeric"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationC11descriptionSSvp":{"name":"description","abstract":"<p>Redefining description to return the operation string</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationC6toMonoAA11AKOperationCyF":{"name":"toMono()","abstract":"<p>Create a mono signal by dropping the right channel</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationC4leftAA11AKOperationCyF":{"name":"left()","abstract":"<p>Create a mono signal by dropping the right channel</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationC5rightAA11AKOperationCyF":{"name":"right()","abstract":"<p>Create a mono signal by dropping the left channel</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationC8toStereoACyF":{"name":"toStereo()","abstract":"<p>An operation is requiring a parameter to be stereo, which in this case, it is, so just return self</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationC5inputACvpZ":{"name":"input","abstract":"<p>Default stereo input to any operation stack</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationCyACSScfc":{"name":"init(_:)","abstract":"<p>Initialize the stereo operation with a Sporth string</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationC6module5setup6inputsACSS_SSAA11AKParameter_pdtcfc":{"name":"init(module:setup:inputs:)","abstract":"<p>Initialize the stereo operation</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationC1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Helper function for addition</p>","parent_name":"AKStereoOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC11descriptionSSvp":{"name":"description","abstract":"<p>Redefining description to return the operation string</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC9leftInputACvpZ":{"name":"leftInput","abstract":"<p>Left input to any stereo operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC10rightInputACvpZ":{"name":"rightInput","abstract":"<p>Right input to any stereo operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC7triggerACvpZ":{"name":"trigger","abstract":"<p>Dummy trigger</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC10parametersSayACGvpZ":{"name":"parameters","abstract":"<p>An= array of 14 parameters which may be sent to operations</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC6toMonoACyF":{"name":"toMono()","abstract":"<p>Convert the operation to a mono operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC3absACyF":{"name":"abs()","abstract":"<p>Performs absolute value on the operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5floorACyF":{"name":"floor()","abstract":"<p>Performs floor calculation on the operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5fractACyF":{"name":"fract()","abstract":"<p>Returns the fractional part of the operation (as opposed to the integer part)</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC3logACyF":{"name":"log()","abstract":"<p>Performs natural logarithm on the operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5log10ACyF":{"name":"log10()","abstract":"<p>Performs Base 10 logarithm on the operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5roundACyF":{"name":"round()","abstract":"<p>Rounds the operation to the nearest integer</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC19midiNoteToFrequencyACyF":{"name":"midiNoteToFrequency()","abstract":"<p>Returns a frequency for a given MIDI note number</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationCyACSdcfc":{"name":"init(_:)","abstract":"<p>Initialize the operation as a constant value</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationCyACSScfc":{"name":"init(_:)","abstract":"<p>Initialize the operation with a Sporth string</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC6module5setup6inputsACSS_SSAA11AKParameter_pdtcfc":{"name":"init(module:setup:inputs:)","abstract":"<p>Initialize the operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC13brownianNoise9amplitudeAcA11AKParameter_p_tFZ":{"name":"brownianNoise(amplitude:)","abstract":"<p>Brownian noise generator</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC9pinkNoise9amplitudeAcA11AKParameter_p_tFZ":{"name":"pinkNoise(amplitude:)","abstract":"<p>Faust-based pink noise generator</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC10whiteNoise9amplitudeAcA11AKParameter_p_tFZ":{"name":"whiteNoise(amplitude:)","abstract":"<p>White noise generator</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC12fmOscillator13baseFrequency17carrierMultiplier010modulatingI015modulationIndex9amplitudeAcA11AKParameter_p_AaJ_pAaJ_pAaJ_pAaJ_ptFZ":{"name":"fmOscillator(baseFrequency:carrierMultiplier:modulatingMultiplier:modulationIndex:amplitude:)","abstract":"<p>Classic FM Synthesis audio generation.</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC18morphingOscillator9frequency9amplitude5indexAcA11AKParameter_p_AaH_pAaH_ptFZ":{"name":"morphingOscillator(frequency:amplitude:index:)","abstract":"<p>Morphing Oscillator</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC6phasor9frequency5phaseAcA11AKParameter_p_SdtFZ":{"name":"phasor(frequency:phase:)","abstract":"<p>Produces a normalized sawtooth wave between the values of 0 and 1. Phasors","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC8sawtooth9frequency9amplitude5phaseAcA11AKParameter_p_AaH_pAaH_ptFZ":{"name":"sawtooth(frequency:amplitude:phase:)","abstract":"<p>Simple sawtooth oscillator, not-band limited, can be used for LFO or wave,","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC15reverseSawtooth9frequency9amplitude5phaseAcA11AKParameter_p_AaH_pAaH_ptFZ":{"name":"reverseSawtooth(frequency:amplitude:phase:)","abstract":"<p>Simple reverse sawtooth oscillator, not-band limited, can be used for LFO or wave.</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC12sawtoothWave9frequency9amplitudeAcA11AKParameter_p_AaG_ptFZ":{"name":"sawtoothWave(frequency:amplitude:)","abstract":"<p>Bandlimited sawtooth oscillator This is a bandlimited sawtooth oscillator","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC8sineWave9frequency9amplitudeAcA11AKParameter_p_AaG_ptFZ":{"name":"sineWave(frequency:amplitude:)","abstract":"<p>Standard Sine Wave</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC6square9frequency9amplitude5phaseAcA11AKParameter_p_AaH_pAaH_ptFZ":{"name":"square(frequency:amplitude:phase:)","abstract":"<p>Simple square oscillator, not-band limited, can be used for LFO or wave,","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC10squareWave9frequency9amplitude10pulseWidthAcA11AKParameter_p_AaH_pAaH_ptFZ":{"name":"squareWave(frequency:amplitude:pulseWidth:)","abstract":"<p>This is a bandlimited square oscillator ported from the <q>square</q> function","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC8triangle9frequency9amplitude5phaseAcA11AKParameter_p_AaH_pAaH_ptFZ":{"name":"triangle(frequency:amplitude:phase:)","abstract":"<p>Simple triangle oscillator, not-band limited, can be used for LFO or wave,","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC12triangleWave9frequency9amplitudeAcA11AKParameter_p_AaG_ptFZ":{"name":"triangleWave(frequency:amplitude:)","abstract":"<p>This is a bandlimited triangle oscillator","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC13pluckedString7trigger9frequency9amplitude15lowestFrequencyA2C_AA11AKParameter_pAaI_pSdtFZ":{"name":"pluckedString(trigger:frequency:amplitude:lowestFrequency:)","abstract":"<p>Karplus-Strong plucked string instrument.</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC10vocalTract9frequency14tonguePosition0G8Diameter9tenseness8nasalityAcA11AKParameter_p_AaJ_pAaJ_pAaJ_pAaJ_ptFZ":{"name":"vocalTract(frequency:tonguePosition:tongueDiameter:tenseness:nasality:)","abstract":"<p>Karplus-Strong plucked string instrument.</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC6jitter9amplitude16minimumFrequency07maximumG0AcA11AKParameter_p_AaH_pAaH_ptFZ":{"name":"jitter(amplitude:minimumFrequency:maximumFrequency:)","abstract":"<p>A signal with random fluctuations","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC17randomNumberPulse7minimum7maximum15updateFrequencyAcA11AKParameter_p_AaH_pAaH_ptFZ":{"name":"randomNumberPulse(minimum:maximum:updateFrequency:)","abstract":"<p>Loosely based off of the Csound opcode randomh. The design is equivalent to","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC17randomVertexPulse7minimum7maximum15updateFrequencyAcA11AKParameter_p_AaH_pAaH_ptFZ":{"name":"randomVertexPulse(minimum:maximum:updateFrequency:)","abstract":"<p>Line segments with vertices at random points</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC4plusyAcA11AKParameter_pF":{"name":"plus(_:)","abstract":"<p>Addition/Summation of operations</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC8offsetByyAcA11AKParameter_pF":{"name":"offsetBy(_:)","abstract":"<p>Offsetting by way of addition</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5count7maximum7loopingAcA11AKParameter_p_SbtF":{"name":"count(maximum:looping:)","abstract":"<p>Keep track of the number of times a trigger has fired</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC9dividedByyAcA11AKParameter_pF":{"name":"dividedBy(_:)","abstract":"<p>Division of parameters</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC9increment2on2by7minimum7maximumAcA11AKParameter_p_AaI_pAaI_pAaI_ptF":{"name":"increment(on:by:minimum:maximum:)","abstract":"<p>Increment a signal by a default value of 1</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5timesyAcA11AKParameter_pF":{"name":"times(_:)","abstract":"<p>Multiplication of parameters</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC8scaledByyAcA11AKParameter_pF":{"name":"scaledBy(_:)","abstract":"<p>Offsetting by way of multiplication</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC4save14parameterIndexACSi_tF":{"name":"save(parameterIndex:)","abstract":"<p>Save a value into the parameters array for using outside of the operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5scale7minimum7maximumAcA11AKParameter_p_AaG_ptF":{"name":"scale(minimum:maximum:)","abstract":"<p>This scales from -1 to 1 to a range defined by a minimum and maximum point in the input and output domain.</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC11lineSegment7trigger5start3end8durationA2C_AA11AKParameter_pAaI_pAaI_ptFZ":{"name":"lineSegment(trigger:start:end:duration:)","abstract":"<p>Line Segment to change values over time</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC18exponentialSegment7trigger5start3end8durationA2C_AA11AKParameter_pAaI_pAaI_ptFZ":{"name":"exponentialSegment(trigger:start:end:duration:)","abstract":"<p>Exponential Segment to change values over time</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5minusyAcA11AKParameter_pF":{"name":"minus(_:)","abstract":"<p>Subtraction of parameters</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC17gatedADSREnvelope4gate6attack5decay7sustain7releaseAcA11AKParameter_p_AaJ_pAaJ_pAaJ_pAaJ_ptF":{"name":"gatedADSREnvelope(gate:attack:decay:sustain:release:)","abstract":"<p>Gate based linear AHD envelope generator</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC9metronome9frequencyAcA11AKParameter_p_tFZ":{"name":"metronome(frequency:)","abstract":"<p>Metro produces a series of 1-sample ticks at a regular rate. Typically, this","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC15periodicTrigger6periodAcA11AKParameter_p_tFZ":{"name":"periodicTrigger(period:)","abstract":"<p>Produce a set of triggers spaced apart by time.</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC10portamento12halfDurationAcA11AKParameter_p_tF":{"name":"portamento(halfDuration:)","abstract":"<p>Portamento-style control signal smoothing","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC21triggeredWithEnvelope7trigger6attack4hold7releaseAcA11AKParameter_p_AaI_pAaI_pAaI_ptF":{"name":"triggeredWithEnvelope(trigger:attack:hold:release:)","abstract":"<p>Trigger based linear AHD envelope generator</p>","parent_name":"AKOperation"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE5delay4time8feedbackAA11AKOperationCSd_AA11AKParameter_ptF":{"name":"delay(time:feedback:)","abstract":"<p>Add a delay to an incoming signal with optional feedback.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE11smoothDelay4time8feedback7samples07maximumF4TimeAA11AKOperationCAA11AKParameter_p_AaK_pSiSdtF":{"name":"smoothDelay(time:feedback:samples:maximumDelayTime:)","abstract":"<p>Smooth variable delay line without varispeed pitch.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE13variableDelay4time8feedback07maximumF4TimeAA11AKOperationCAA11AKParameter_p_AaJ_pSdtF":{"name":"variableDelay(time:feedback:maximumDelayTime:)","abstract":"<p>A delay line with cubic interpolation.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE8bitCrush0E5Depth10sampleRateAA11AKOperationCAA11AKParameter_p_AaI_ptF":{"name":"bitCrush(bitDepth:sampleRate:)","abstract":"<p>This will digitally degrade a signal.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE4clipyAA11AKOperationCAA11AKParameter_pF":{"name":"clip(_:)","abstract":"<p>Clips a signal to a predefined limit, in a <q>soft</q> manner.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE7distort7pregain8postgain013positiveShapeD008negativeiD0AA11AKOperationCAA11AKParameter_p_AaK_pAaK_pAaK_ptF":{"name":"distort(pregain:postgain:positiveShapeParameter:negativeShapeParameter:)","abstract":"<p>Distortion using a modified hyperbolic tangent function.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE7autoWah3wah9amplitudeAA11AKOperationCAA11AKParameter_p_AaI_ptF":{"name":"autoWah(wah:amplitude:)","abstract":"<p>An automatic wah effect, ported from Guitarix via Faust.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE7dcBlockAA11AKOperationCyF":{"name":"dcBlock()","abstract":"<p>Implements the DC blocking filter Y[i] = X[i] - X[i-1] + (igain * Y[i-1])","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE25highPassButterworthFilter15cutoffFrequencyAaB_pAA11AKParameter_p_tF":{"name":"highPassButterworthFilter(cutoffFrequency:)","abstract":"<p>These filters are Butterworth second-order IIR filters. They offer an almost","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE14highPassFilter14halfPowerPointAA11AKOperationCAA11AKParameter_p_tF":{"name":"highPassFilter(halfPowerPoint:)","abstract":"<p>A complement to the AKLowPassFilter.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE17korgLowPassFilter15cutoffFrequency9resonance10saturationAA11AKOperationCAA11AKParameter_p_AaJ_pAaJ_ptF":{"name":"korgLowPassFilter(cutoffFrequency:resonance:saturation:)","abstract":"<p>Analogue model of the Korg 35 Lowpass Filter</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE24lowPassButterworthFilter15cutoffFrequencyAA11AKOperationCAA11AKParameter_p_tF":{"name":"lowPassButterworthFilter(cutoffFrequency:)","abstract":"<p>These filters are Butterworth second-order IIR filters. They offer an almost","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE13lowPassFilter14halfPowerPointAA11AKOperationCAA11AKParameter_p_tF":{"name":"lowPassFilter(halfPowerPoint:)","abstract":"<p>A first-order recursive low-pass filter with variable frequency response.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE20modalResonanceFilter9frequency13qualityFactorAA11AKOperationCAA11AKParameter_p_AaI_ptF":{"name":"modalResonanceFilter(frequency:qualityFactor:)","abstract":"<p>A modal resonance filter used for modal synthesis. Plucked and bell sounds","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE16moogLadderFilter15cutoffFrequency9resonanceAA11AKOperationCAA11AKParameter_p_AaI_ptF":{"name":"moogLadderFilter(cutoffFrequency:resonance:)","abstract":"<p>Moog Ladder is an new digital implementation of the Moog ladder filter based","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE14resonantFilter9frequency9bandwidthAA11AKOperationCAA11AKParameter_p_AaI_ptF":{"name":"resonantFilter(frequency:bandwidth:)","abstract":"<p>A second-order resonant filter.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE15stringResonator9frequency8feedbackAA11AKOperationCAA11AKParameter_p_AaI_ptF":{"name":"stringResonator(frequency:feedback:)","abstract":"<p>A modal resonance filter used for modal synthesis. Plucked and bell sounds","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE22threePoleLowPassFilter10distortion15cutoffFrequency9resonanceAA11AKOperationCAA11AKParameter_p_AaJ_pAaJ_ptF":{"name":"threePoleLowPassFilter(distortion:cutoffFrequency:resonance:)","abstract":"<p>3-pole (18 db/oct slope) Low-Pass filter with resonance and tanh distortion.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE23reverberateWithChowningAA11AKOperationCyF":{"name":"reverberateWithChowning()","abstract":"<p>This is was built using the JC reverb implentation found in FAUST. According","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE25reverberateWithCombFilter14reverbDuration04loopJ0AA11AKOperationCAA11AKParameter_p_AaI_ptF":{"name":"reverberateWithCombFilter(reverbDuration:loopDuration:)","abstract":"<p>This filter reiterates input with an echo density determined by","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE23reverberateWithCostello8feedback15cutoffFrequencyAA17AKStereoOperationCAA11AKParameter_p_AaI_ptF":{"name":"reverberateWithCostello(feedback:cutoffFrequency:)","abstract":"<p>8 delay line stereo FDN reverb, with feedback matrix based upon physical","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE36reverberateWithFlatFrequencyResponse14reverbDuration04loopK0AA11AKOperationCAA11AKParameter_p_SdtF":{"name":"reverberateWithFlatFrequencyResponse(reverbDuration:loopDuration:)","abstract":"<p>This filter reiterates the input with an echo density determined by loop","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE10pitchShift9semitonesAA11AKOperationCAA11AKParameter_p_tF":{"name":"pitchShift(semitones:)","abstract":"<p>This will digitally degrade a signal.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE16trackedAmplitudeyAA11AKOperationCAA11AKParameter_pF":{"name":"trackedAmplitude(_:)","abstract":"<p>Panner</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE3panyAA17AKStereoOperationCAA11AKParameter_pF":{"name":"pan(_:)","abstract":"<p>Panner</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE9stereoPanyAA17AKStereoOperationCAA11AKParameter_pF":{"name":"stereoPan(_:)","abstract":"<p>Stereo Panner</p>","parent_name":"AKComputedParameter"},"Protocols/AKParameter.html#/s:8AudioKit11AKParameterP6toMonoAA11AKOperationCyF":{"name":"toMono()","abstract":"<p>Require a function to produce a mono operation regarless of the mono/stereo nature of the parameter</p>","parent_name":"AKParameter"},"Protocols/AKParameter.html#/s:8AudioKit11AKParameterP8toStereoAA17AKStereoOperationCyF":{"name":"toStereo()","abstract":"<p>Require a function to produce a stereo operation regardless of the mono/stereo nature of the parameter</p>","parent_name":"AKParameter"},"Protocols/AKParameter.html":{"name":"AKParameter","abstract":"<p>AKParameters are simply arguments that can be passed into AKComputedParameters"},"Protocols/AKComputedParameter.html":{"name":"AKComputedParameter","abstract":"<p>A computed parameter differs from a regular parameter in that it only exists within an operation"},"Classes/AKOperation.html":{"name":"AKOperation","abstract":"<p>An AKOperation is a computed parameter that can be passed to other operations in the same operation node</p>"},"Classes/AKStereoOperation.html":{"name":"AKStereoOperation","abstract":"<p>Stereo version of AKComputedParameter</p>"},"Protocols/Numeric.html":{"name":"Numeric","abstract":"<p>Very simple protoocol for anything with an instrinsic floating point value."},"Protocols/FileClip.html#/c:@M@AudioKit@objc(pl)FileClip(py)audioFile":{"name":"audioFile","parent_name":"FileClip"},"Enums/ClipRecordingError.html#/s:8AudioKit18ClipRecordingErrorO06timingE0yA2CmF":{"name":"timingError","parent_name":"ClipRecordingError"},"Enums/ClipRecordingError.html#/s:8AudioKit18ClipRecordingErrorO17invalidParametersyA2CmF":{"name":"invalidParameters","parent_name":"ClipRecordingError"},"Enums/ClipRecordingError.html#/s:8AudioKit18ClipRecordingErrorO11clipIsEmptyyA2CmF":{"name":"clipIsEmpty","parent_name":"ClipRecordingError"},"Enums/ClipRecordingError.html#/s:8AudioKit18ClipRecordingErrorO06formatE0yA2CmF":{"name":"formatError","parent_name":"ClipRecordingError"},"Enums/ClipRecordingError.html#/s:10Foundation14LocalizedErrorP16errorDescriptionSSSgvp":{"name":"errorDescription","parent_name":"ClipRecordingError"},"Protocols/ClipMergeDelegate.html#/c:@M@AudioKit@objc(pl)ClipMergeDelegate(im)newClipFrom:time:offset:duration:":{"name":"newClip(from:time:offset:duration:)","abstract":"<p>A new clip, derived from an existing clip, with specified values.</p>","parent_name":"ClipMergeDelegate"},"Protocols/ClipMergeDelegate.html#/c:@M@AudioKit@objc(pl)ClipMergeDelegate(im)clipWillBeRemoved:":{"name":"clipWillBeRemoved(_:)","abstract":"<p>Called when an existing clip will be removed as a result of merging in a new clip.</p>","parent_name":"ClipMergeDelegate"},"Classes/AKVariSpeed.html#/c:@M@AudioKit@objc(cs)AKVariSpeed(py)rate":{"name":"rate","abstract":"<p>Rate (rate) ranges form 0.25 to 4.0 (Default: 1.0)</p>","parent_name":"AKVariSpeed"},"Classes/AKVariSpeed.html#/c:@M@AudioKit@objc(cs)AKVariSpeed(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKVariSpeed"},"Classes/AKVariSpeed.html#/c:@M@AudioKit@objc(cs)AKVariSpeed(im)init:rate:":{"name":"init(_:rate:)","abstract":"<p>Initialize the varispeed node</p>","parent_name":"AKVariSpeed"},"Classes/AKVariSpeed.html#/c:@M@AudioKit@objc(cs)AKVariSpeed(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKVariSpeed"},"Classes/AKVariSpeed.html#/c:@M@AudioKit@objc(cs)AKVariSpeed(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKVariSpeed"},"Classes/AKTimePitch.html#/c:@M@AudioKit@objc(cs)AKTimePitch(py)rate":{"name":"rate","abstract":"<p>Rate (rate) ranges from 0.03125 to 32.0 (Default: 1.0)</p>","parent_name":"AKTimePitch"},"Classes/AKTimePitch.html#/c:@M@AudioKit@objc(cs)AKTimePitch(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKTimePitch"},"Classes/AKTimePitch.html#/c:@M@AudioKit@objc(cs)AKTimePitch(py)pitch":{"name":"pitch","abstract":"<p>Pitch (Cents) ranges from -2400 to 2400 (Default: 0.0)</p>","parent_name":"AKTimePitch"},"Classes/AKTimePitch.html#/c:@M@AudioKit@objc(cs)AKTimePitch(py)overlap":{"name":"overlap","abstract":"<p>Overlap (generic) ranges from 3.0 to 32.0 (Default: 8.0)</p>","parent_name":"AKTimePitch"},"Classes/AKTimePitch.html#/c:@M@AudioKit@objc(cs)AKTimePitch(im)init:rate:pitch:overlap:":{"name":"init(_:rate:pitch:overlap:)","abstract":"<p>Initialize the time pitch node</p>","parent_name":"AKTimePitch"},"Classes/AKTimePitch.html#/c:@M@AudioKit@objc(cs)AKTimePitch(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKTimePitch"},"Classes/AKTimePitch.html#/c:@M@AudioKit@objc(cs)AKTimePitch(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKTimePitch"},"Classes/AKSamplePlayer.html#/s:8AudioKit14AKSamplePlayerC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/s:8AudioKit14AKSamplePlayerC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)startPoint":{"name":"startPoint","abstract":"<p>startPoint in samples - where to start playing the sample from</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)endPoint":{"name":"endPoint","abstract":"<p>endPoint - this is where the sample will play to before stopping.","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)loopStartPoint":{"name":"loopStartPoint","abstract":"<p>loopStartPoint in samples - where to start playing the sample from</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)loopEndPoint":{"name":"loopEndPoint","abstract":"<p>loopEndPoint - this is where the sample will play to before stopping.</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)rate":{"name":"rate","abstract":"<p>playback rate - A value of 1 is normal, 2 is double speed, 0.5 is halfspeed, etc.</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)volume":{"name":"volume","abstract":"<p>Volume - amplitude adjustment</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)loopEnabled":{"name":"loopEnabled","abstract":"<p>Loop Enabled - if enabled, the sample will loop back to the startpoint when the endpoint is reached.","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/s:8AudioKit14AKSamplePlayerC4sizes6UInt32Vvp":{"name":"size","abstract":"<p>Number of samples in the audio stored in memory</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/s:8AudioKit14AKSamplePlayerC18originalSampleRateSdSgvp":{"name":"originalSampleRate","abstract":"<p>originalSampleRate</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/s:8AudioKit14AKSamplePlayerC18normalizedPositionSdvp":{"name":"normalizedPosition","abstract":"<p>Position in the audio file from 0 - 1</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/s:8AudioKit14AKSamplePlayerC8positionSdvp":{"name":"position","abstract":"<p>Position in the audio in samples, but represented as a double since","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/s:8AudioKit14AKSamplePlayerC21loadCompletionHandleryycvp":{"name":"loadCompletionHandler","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/s:8AudioKit14AKSamplePlayerC17completionHandleryycvp":{"name":"completionHandler","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(im)initWithFile:startPoint:endPoint:rate:volume:maximumSamples:completionHandler:loadCompletionHandler:":{"name":"init(file:startPoint:endPoint:rate:volume:maximumSamples:completionHandler:loadCompletionHandler:)","abstract":"<p>Initialize this SamplePlayer node</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/s:8AudioKit14AKSamplePlayerC4playyyF":{"name":"play()","abstract":"<p>Play from a certain sample</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/s:8AudioKit14AKSamplePlayerC4play4fromys6UInt32V_tF":{"name":"play(from:)","abstract":"<p>Play from a certain sample</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/s:8AudioKit14AKSamplePlayerC4play4from6lengthys6UInt32V_AHtF":{"name":"play(from:length:)","abstract":"<p>Play from a certain sample for a certain number of samples</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/s:8AudioKit14AKSamplePlayerC4play4from2toys6UInt32V_AHtF":{"name":"play(from:to:)","abstract":"<p>Play from a certain sample to an end sample</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/s:8AudioKit14AKSamplePlayerC4load4fileyAA11AKAudioFileC_tF":{"name":"load(file:)","abstract":"<p>Load a new audio file into memory</p>","parent_name":"AKSamplePlayer"},"Classes/AKSampler.html#/s:8AudioKit9AKSamplerC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKSampler"},"Classes/AKSampler.html#/s:8AudioKit9AKSamplerC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)masterVolume":{"name":"masterVolume","abstract":"<p>Master volume (fraction)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)pitchBend":{"name":"pitchBend","abstract":"<p>Pitch offset (semitones)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)vibratoDepth":{"name":"vibratoDepth","abstract":"<p>Vibrato amount (semitones)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)filterCutoff":{"name":"filterCutoff","abstract":"<p>Filter cutoff (harmonic ratio)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)filterEgStrength":{"name":"filterEgStrength","abstract":"<p>Filter EG strength (harmonic ratio)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)filterResonance":{"name":"filterResonance","abstract":"<p>Filter resonance (dB)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)glideRate":{"name":"glideRate","abstract":"<p>Glide rate (seconds per octave)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)attackDuration":{"name":"attackDuration","abstract":"<p>Amplitude attack duration (seconds)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)decayDuration":{"name":"decayDuration","abstract":"<p>Amplitude Decay duration (seconds)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)sustainLevel":{"name":"sustainLevel","abstract":"<p>Amplitude sustain level (fraction)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Amplitude Release duration (seconds)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)filterAttackDuration":{"name":"filterAttackDuration","abstract":"<p>Filter attack duration (seconds)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)filterDecayDuration":{"name":"filterDecayDuration","abstract":"<p>Filter Decay duration (seconds)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)filterSustainLevel":{"name":"filterSustainLevel","abstract":"<p>Filter sustain level (fraction)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)filterReleaseDuration":{"name":"filterReleaseDuration","abstract":"<p>Filter Release duration (seconds)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)filterEnable":{"name":"filterEnable","abstract":"<p>Filter Enable (boolean, 0.0 for false or 1.0 for true)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)loopThruRelease":{"name":"loopThruRelease","abstract":"<p>Loop Thru Release (boolean, 0.0 for false or 1.0 for true)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)isMonophonic":{"name":"isMonophonic","abstract":"<p>isMonophonic (boolean, 0.0 for false or 1.0 for true)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)isLegato":{"name":"isLegato","abstract":"<p>isLegato (boolean, 0.0 for false or 1.0 for true)</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(im)init:masterVolume:pitchBend:vibratoDepth:filterCutoff:filterEgStrength:filterResonance:attackDuration:decayDuration:sustainLevel:releaseDuration:filterEnable:filterAttackDuration:filterDecayDuration:filterSustainLevel:filterReleaseDuration:glideRate:loopThruRelease:isMonophonic:isLegato:":{"name":"init(_:masterVolume:pitchBend:vibratoDepth:filterCutoff:filterEgStrength:filterResonance:attackDuration:decayDuration:sustainLevel:releaseDuration:filterEnable:filterAttackDuration:filterDecayDuration:filterSustainLevel:filterReleaseDuration:glideRate:loopThruRelease:isMonophonic:isLegato:)","abstract":"<p>Initialize this sampler node</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/s:8AudioKit9AKSamplerC15loadAKAudioFile4from4fileySo18AKSampleDescriptora_AA0eF0CtF":{"name":"loadAKAudioFile(from:file:)","parent_name":"AKSampler"},"Classes/AKSampler.html#/s:8AudioKit9AKSamplerC13stopAllVoicesyyF":{"name":"stopAllVoices()","parent_name":"AKSampler"},"Classes/AKSampler.html#/s:8AudioKit9AKSamplerC13restartVoicesyyF":{"name":"restartVoices()","parent_name":"AKSampler"},"Classes/AKSampler.html#/s:8AudioKit9AKSamplerC17loadRawSampleData4fromySo08AKSampleG10Descriptora_tF":{"name":"loadRawSampleData(from:)","parent_name":"AKSampler"},"Classes/AKSampler.html#/s:8AudioKit9AKSamplerC24loadCompressedSampleFile4fromySo08AKSampleG10Descriptora_tF":{"name":"loadCompressedSampleFile(from:)","parent_name":"AKSampler"},"Classes/AKSampler.html#/s:8AudioKit9AKSamplerC16unloadAllSamplesyyF":{"name":"unloadAllSamples()","parent_name":"AKSampler"},"Classes/AKSampler.html#/s:8AudioKit9AKSamplerC17buildSimpleKeyMapyyF":{"name":"buildSimpleKeyMap()","parent_name":"AKSampler"},"Classes/AKSampler.html#/s:8AudioKit9AKSamplerC11buildKeyMapyyF":{"name":"buildKeyMap()","parent_name":"AKSampler"},"Classes/AKSampler.html#/s:8AudioKit9AKSamplerC7setLoop11thruReleaseySb_tF":{"name":"setLoop(thruRelease:)","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(im)playWithNoteNumber:velocity:frequency:":{"name":"play(noteNumber:velocity:frequency:)","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","parent_name":"AKSampler"},"Classes/AKSampler.html#/s:8AudioKit9AKSamplerC7silence10noteNumberys5UInt8V_tF":{"name":"silence(noteNumber:)","parent_name":"AKSampler"},"Classes/AKSampler.html#/s:8AudioKit9AKSamplerC12sustainPedal9pedalDownySb_tF":{"name":"sustainPedal(pedalDown:)","parent_name":"AKSampler"},"Classes/AKSampler.html#/s:8AudioKit9AKSamplerC7loadSFZ4path8fileNameySS_SStF":{"name":"loadSFZ(path:fileName:)","abstract":"<p>Load an SFZ at the given location</p>","parent_name":"AKSampler"},"Classes/AKPlayer/Fade.html#/s:8AudioKit8AKPlayerC4FadeVAEycfc":{"name":"init()","parent_name":"Fade"},"Classes/AKPlayer/Fade.html#/s:8AudioKit8AKPlayerC4FadeV11minimumGainSdvpZ":{"name":"minimumGain","abstract":"<p>a constant</p>","parent_name":"Fade"},"Classes/AKPlayer/Fade.html#/s:8AudioKit8AKPlayerC4FadeV11maximumGainSdvp":{"name":"maximumGain","abstract":"<p>the value that the booster should fade to, settable</p>","parent_name":"Fade"},"Classes/AKPlayer/Fade.html#/s:8AudioKit8AKPlayerC4FadeV6inTimeSdvp":{"name":"inTime","parent_name":"Fade"},"Classes/AKPlayer/Fade.html#/s:8AudioKit8AKPlayerC4FadeV10inRampTypeAA10AKSettingsC0fG0Ovp":{"name":"inRampType","parent_name":"Fade"},"Classes/AKPlayer/Fade.html#/s:8AudioKit8AKPlayerC4FadeV11outRampTypeAA10AKSettingsC0fG0Ovp":{"name":"outRampType","parent_name":"Fade"},"Classes/AKPlayer/Fade.html#/s:8AudioKit8AKPlayerC4FadeV12inTimeOffsetSdvp":{"name":"inTimeOffset","parent_name":"Fade"},"Classes/AKPlayer/Fade.html#/s:8AudioKit8AKPlayerC4FadeV11inStartGainSdvp":{"name":"inStartGain","parent_name":"Fade"},"Classes/AKPlayer/Fade.html#/s:8AudioKit8AKPlayerC4FadeV7outTimeSdvp":{"name":"outTime","parent_name":"Fade"},"Classes/AKPlayer/Fade.html#/s:8AudioKit8AKPlayerC4FadeV13outTimeOffsetSdvp":{"name":"outTimeOffset","parent_name":"Fade"},"Classes/AKPlayer/Fade.html#/s:8AudioKit8AKPlayerC4FadeV12outStartGainSdvp":{"name":"outStartGain","parent_name":"Fade"},"Classes/AKPlayer/Fade.html#/s:8AudioKit8AKPlayerC4FadeV4typeAA10AKSettingsC8RampTypeOvp":{"name":"type","parent_name":"Fade"},"Classes/AKPlayer/Loop.html#/s:8AudioKit8AKPlayerC4LoopV5startSdvp":{"name":"start","parent_name":"Loop"},"Classes/AKPlayer/Loop.html#/s:8AudioKit8AKPlayerC4LoopV3endSdvp":{"name":"end","parent_name":"Loop"},"Classes/AKPlayer/BufferingType.html#/s:8AudioKit8AKPlayerC13BufferingTypeO7dynamicyA2EmF":{"name":"dynamic","parent_name":"BufferingType"},"Classes/AKPlayer/BufferingType.html#/s:8AudioKit8AKPlayerC13BufferingTypeO6alwaysyA2EmF":{"name":"always","parent_name":"BufferingType"},"Classes/AKPlayer/BufferingType.html":{"name":"BufferingType","abstract":"<p>How the player should handle audio. If buffering, it will load the audio data into","parent_name":"AKPlayer"},"Classes/AKPlayer/Loop.html":{"name":"Loop","parent_name":"AKPlayer"},"Classes/AKPlayer/Fade.html":{"name":"Fade","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC4fadeAC4FadeVvp":{"name":"fade","abstract":"<p>Holds characteristics about the fade options.</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC10playerNodeSo013AVAudioPlayerE0Cvp":{"name":"playerNode","abstract":"<p>The underlying player node</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC5mixerSo16AVAudioMixerNodeCvp":{"name":"mixer","abstract":"<p>The main output</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC9faderNodeAA9AKBoosterCSgvp":{"name":"faderNode","abstract":"<p>The underlying gain booster which controls fades as well. Created on demand.</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC4rateSdvp":{"name":"rate","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC17completionHandleryycSgvp":{"name":"completionHandler","abstract":"<p>Completion handler to be called when Audio is done playing. The handler won&rsquo;t be called if","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC6bufferSo16AVAudioPCMBufferCSgvp":{"name":"buffer","abstract":"<p>Used with buffering players</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC9bufferingAC13BufferingTypeOvp":{"name":"buffering","abstract":"<p>Sets if the player should buffer dynamically (as needed) or always.","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC9audioFileSo07AVAudioE0CSgvp":{"name":"audioFile","abstract":"<p>The internal audio file</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC8durationSdvp":{"name":"duration","abstract":"<p>The duration of the loaded audio file</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC4loopAC4LoopVvp":{"name":"loop","abstract":"<p>Looping Parameters</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC6volumeSdvp":{"name":"volume","abstract":"<p>Volume 0.0 -&gt; 1.0, default 1.0</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC4gainSdvp":{"name":"gain","abstract":"<p>Amplification Factor, in the range of 0.0002 to ~</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC3panSdvp":{"name":"pan","abstract":"<p>Left/Right balance -1.0 -&gt; 1.0, default 0.0</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC8rampTypeAA10AKSettingsC04RampE0Ovp":{"name":"rampType","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC9startTimeSdvp":{"name":"startTime","abstract":"<p>Get or set the start time of the player.</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC7endTimeSdvp":{"name":"endTime","abstract":"<p>Get or set the end time of the player.</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC10frameCounts6UInt32Vvp":{"name":"frameCount","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC12currentFrames5Int64Vvp":{"name":"currentFrame","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC11currentTimeSdvp":{"name":"currentTime","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC9pauseTimeSdSgvp":{"name":"pauseTime","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC16processingFormatSo07AVAudioE0CSgvp":{"name":"processingFormat","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC10isBufferedSbvp":{"name":"isBuffered","abstract":"<p>true if the player is buffering audio rather than playing from disk</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC12isNormalizedSbvp":{"name":"isNormalized","abstract":"<p>Will automatically normalize on buffer updates if enabled</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC9isLoopingSbvp":{"name":"isLooping","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC8isPausedSbvp":{"name":"isPaused","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC10isReversedSbvp":{"name":"isReversed","abstract":"<p>Reversing the audio will set the player to buffering</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC9isPlayingSbvp":{"name":"isPlaying","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC7isFadedSbvp":{"name":"isFaded","abstract":"<p>true if any fades have been set</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@M@AudioKit@objc(cs)AKPlayer(im)init":{"name":"init()","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC3urlACSg10Foundation3URLV_tcfc":{"name":"init(url:)","abstract":"<p>Create a player from a URL</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC9audioFileACSo07AVAudioE0C_tcfc":{"name":"init(audioFile:)","abstract":"<p>Create a player from an AVAudioFile (or AKAudioFile)</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@M@AudioKit@objc(cs)AKPlayer(im)loadWithUrl:error:":{"name":"load(url:)","abstract":"<p>Replace the contents of the player with this url</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@M@AudioKit@objc(cs)AKPlayer(im)loadWithAudioFile:":{"name":"load(audioFile:)","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@M@AudioKit@objc(cs)AKPlayer(im)prerollFrom:to:":{"name":"preroll(from:to:)","abstract":"<p>Mostly applicable to buffered players, this loads the buffer and gets it ready to play.","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC4play4from2to2at8hostTimeySd_SdSo07AVAudioI0CSgs6UInt64VSgtF":{"name":"play(from:to:at:hostTime:)","abstract":"<p>Play using full options. Last in the convenience play chain, all play() commands will end up here","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC6detachyyF":{"name":"detach()","abstract":"<p>Disconnect the node and release resources</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@CM@AudioKit@objc(cs)AKPlayer(im)play":{"name":"play()","abstract":"<p>Play entire file right now</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@CM@AudioKit@objc(cs)AKPlayer(im)playFrom:to:":{"name":"play(from:to:)","abstract":"<p>Play segments of a file</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@CM@AudioKit@objc(cs)AKPlayer(im)playAt:":{"name":"play(at:)","abstract":"<p>Play file using previously set startTime and endTime at some point in the future</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC4play2at8hostTimeySo07AVAudioG0CSg_s6UInt64VSgtF":{"name":"play(at:hostTime:)","abstract":"<p>Play file using previously set startTime and endTime at some point in the future with a hostTime reference</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC4play4when8hostTimeySd_s6UInt64VSgtF":{"name":"play(when:hostTime:)","abstract":"<p>Play file using previously set startTime and endTime at some point in the future specified in seconds","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/s:8AudioKit8AKPlayerC4play4from2to4when8hostTimeySd_S2ds6UInt64VSgtF":{"name":"play(from:to:when:hostTime:)","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@CM@AudioKit@objc(cs)AKPlayer(im)pause":{"name":"pause()","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@CM@AudioKit@objc(cs)AKPlayer(im)resume":{"name":"resume()","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@CM@AudioKit@objc(cs)AKPlayer(im)stop":{"name":"stop()","abstract":"<p>Stop playback and cancel any pending scheduled playback or completion events</p>","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@M@AudioKit@objc(pl)AKTiming(im)startAt:":{"name":"start(at:)","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@CM@AudioKit@objc(cs)AKPlayer(py)isStarted":{"name":"isStarted","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@M@AudioKit@objc(pl)AKTiming(im)setPosition:":{"name":"setPosition(_:)","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@M@AudioKit@objc(pl)AKTiming(im)positionAtAudioTime:":{"name":"position(at:)","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@M@AudioKit@objc(pl)AKTiming(im)audioTimeAtPosition:":{"name":"audioTime(at:)","parent_name":"AKPlayer"},"Classes/AKPlayer.html#/c:@M@AudioKit@objc(pl)AKTiming(im)prepare":{"name":"prepare()","parent_name":"AKPlayer"},"Classes/AKPhaseLockedVocoder.html#/s:8AudioKit20AKPhaseLockedVocoderC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/s:8AudioKit20AKPhaseLockedVocoderC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(py)position":{"name":"position","abstract":"<p>Position in time. When non-changing it will do a spectral freeze of a the current point in time.</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude.</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(py)pitchRatio":{"name":"pitchRatio","abstract":"<p>Pitch ratio. A value of 1 is normal, 2 is double speed, 0.5 is halfspeed, etc.</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(im)initWithFile:position:amplitude:pitchRatio:":{"name":"init(file:position:amplitude:pitchRatio:)","abstract":"<p>Initialize this Phase-Locked Vocoder node</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKMetronome.html#/s:8AudioKit11AKMetronomeC5tempoSdvp":{"name":"tempo","abstract":"<p>BPM</p>","parent_name":"AKMetronome"},"Classes/AKMetronome.html#/s:8AudioKit11AKMetronomeC11subdivisionSivp":{"name":"subdivision","abstract":"<p>Number of clicks in one measure</p>","parent_name":"AKMetronome"},"Classes/AKMetronome.html#/s:8AudioKit11AKMetronomeC10frequency1Sdvp":{"name":"frequency1","abstract":"<p>First click sound frequency</p>","parent_name":"AKMetronome"},"Classes/AKMetronome.html#/s:8AudioKit11AKMetronomeC10frequency2Sdvp":{"name":"frequency2","abstract":"<p>Non-first click sound frequency</p>","parent_name":"AKMetronome"},"Classes/AKMetronome.html#/s:8AudioKit11AKMetronomeC11currentBeatSivp":{"name":"currentBeat","abstract":"<p>The value of the current beat</p>","parent_name":"AKMetronome"},"Classes/AKMetronome.html#/s:8AudioKit11AKMetronomeC8callbackyycvp":{"name":"callback","abstract":"<p>Function to perform on every tick</p>","parent_name":"AKMetronome"},"Classes/AKMetronome.html#/c:@M@AudioKit@objc(cs)AKMetronome(im)init":{"name":"init()","abstract":"<p>Initialize the metronome</p>","parent_name":"AKMetronome"},"Classes/AKMetronome.html#/s:8AudioKit11AKMetronomeC5resetyyF":{"name":"reset()","abstract":"<p>Reset the metronome</p>","parent_name":"AKMetronome"},"Classes/AKFileClipSequence.html#/c:@M@AudioKit@objc(cs)AKFileClipSequence(im)newClipFrom:time:offset:duration:":{"name":"newClip(from:time:offset:duration:)","abstract":"<p>Clip merger delegate function</p>","parent_name":"AKFileClipSequence"},"Classes/AKFileClipSequence.html#/c:@M@AudioKit@objc(cs)AKFileClipSequence(py)clips":{"name":"clips","abstract":"<p>A validated array of file clips.  Fails if setting an invalid array of clips.</p>","parent_name":"AKFileClipSequence"},"Classes/AKFileClipSequence.html#/c:@M@AudioKit@objc(cs)AKFileClipSequence(im)addWithClip:":{"name":"add(clip:)","abstract":"<p>Merges a clip into existing clips.  Fails if clip is invalid.</p>","parent_name":"AKFileClipSequence"},"Classes/AKFileClipSequence.html#/c:@M@AudioKit@objc(cs)AKFileClipSequence(im)initWithClips:":{"name":"init(clips:)","abstract":"<p>Initialize a clip sequence with an array of clips.</p>","parent_name":"AKFileClipSequence"},"Classes/AKFileClip.html#/c:@M@AudioKit@objc(cs)AKFileClip(py)audioFile":{"name":"audioFile","abstract":"<p>The audio file that will be read.</p>","parent_name":"AKFileClip"},"Classes/AKFileClip.html#/c:@M@AudioKit@objc(cs)AKFileClip(py)time":{"name":"time","abstract":"<p>The time in the timeline that the clip should begin playing.</p>","parent_name":"AKFileClip"},"Classes/AKFileClip.html#/c:@M@AudioKit@objc(cs)AKFileClip(py)offset":{"name":"offset","abstract":"<p>The offset into the clip&rsquo;s audio (where to start playing from within the clip).</p>","parent_name":"AKFileClip"},"Classes/AKFileClip.html#/c:@M@AudioKit@objc(cs)AKFileClip(py)duration":{"name":"duration","abstract":"<p>The duration of playback.</p>","parent_name":"AKFileClip"},"Classes/AKFileClip.html#/c:@M@AudioKit@objc(cs)AKFileClip(im)initWithAudioFile:time:offset:duration:":{"name":"init(audioFile:time:offset:duration:)","abstract":"<p>Create a new file clip.</p>","parent_name":"AKFileClip"},"Classes/AKFileClip.html#/s:8AudioKit10AKFileClipC3urlACSg10Foundation3URLV_tcfc":{"name":"init(url:)","abstract":"<p>Init a file clip from a url with time and offset at zero, and duration set to file duration.</p>","parent_name":"AKFileClip"},"Classes/AKClipRecorder.html#/s:8AudioKit14AKClipRecorderC4nodeAA8AKOutput_pvp":{"name":"node","parent_name":"AKClipRecorder"},"Classes/AKClipRecorder.html#/s:8AudioKit14AKClipRecorderC4nodeAcA8AKOutput_p_tcfc":{"name":"init(node:)","abstract":"<p>Initialize a recorder with a node.</p>","parent_name":"AKClipRecorder"},"Classes/AKClipRecorder.html#/s:8AudioKit14AKClipRecorderC5startyyF":{"name":"start()","abstract":"<p>Starts the internal timeline.</p>","parent_name":"AKClipRecorder"},"Classes/AKClipRecorder.html#/s:8AudioKit14AKClipRecorderC5start2atySo11AVAudioTimeCSg_tF":{"name":"start(at:)","abstract":"<p>Starts the internal timeline from audioTime.</p>","parent_name":"AKClipRecorder"},"Classes/AKClipRecorder.html#/s:8AudioKit14AKClipRecorderC11currentTimeSdvp":{"name":"currentTime","abstract":"<p>The current time of the internal timeline.  Setting will call stop().</p>","parent_name":"AKClipRecorder"},"Classes/AKClipRecorder.html#/s:8AudioKit14AKClipRecorderC4stopyyyycSgF":{"name":"stop(_:)","abstract":"<p>Stops internal timeline and finalizes any clips that are recording.</p>","parent_name":"AKClipRecorder"},"Classes/AKClipRecorder.html#/s:8AudioKit14AKClipRecorderC13stopRecording7endTime_ySdSg_yycSgtF":{"name":"stopRecording(endTime:_:)","abstract":"<p>Sets recording end time for any recording clips.</p>","parent_name":"AKClipRecorder"},"Classes/AKClipRecorder.html#/s:8AudioKit14AKClipRecorderC11isRecordingSbvp":{"name":"isRecording","abstract":"<p>True if there are any clips recording.</p>","parent_name":"AKClipRecorder"},"Classes/AKClipRecorder.html#/s:8AudioKit14AKClipRecorderC10recordClip4time8duration3tap10completionySd_SdySo16AVAudioPCMBufferC_So0K4TimeCtcSgyAA0F15RecordingResultOctKF":{"name":"recordClip(time:duration:tap:completion:)","abstract":"<p>Schedule an audio clip to record.</p>","parent_name":"AKClipRecorder"},"Classes/AKClipRecorder.html#/s:8AudioKit14AKClipRecorderC9isStartedSbvp":{"name":"isStarted","parent_name":"AKClipRecorder"},"Classes/AKClipRecorder.html#/c:@M@AudioKit@objc(pl)AKTiming(im)stop":{"name":"stop()","parent_name":"AKClipRecorder"},"Classes/AKClipRecorder.html#/c:@M@AudioKit@objc(pl)AKTiming(im)setPosition:":{"name":"setPosition(_:)","parent_name":"AKClipRecorder"},"Classes/AKClipRecorder.html#/c:@M@AudioKit@objc(pl)AKTiming(im)positionAtAudioTime:":{"name":"position(at:)","parent_name":"AKClipRecorder"},"Classes/AKClipRecorder.html#/c:@M@AudioKit@objc(pl)AKTiming(im)audioTimeAtPosition:":{"name":"audioTime(at:)","parent_name":"AKClipRecorder"},"Classes/AKClipPlayer.html#/s:8AudioKit12AKClipPlayerC10playerNodeSo07AVAudiodF0Cvp":{"name":"playerNode","abstract":"<p>The underlying player node</p>","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/s:8AudioKit12AKClipPlayerC11currentTimeSdvp":{"name":"currentTime","abstract":"<p>Current time of the player in seconds.</p>","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/s:8AudioKit12AKClipPlayerC9isPlayingSbvp":{"name":"isPlaying","abstract":"<p>True is play, false if not.</p>","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/s:8AudioKit12AKClipPlayerC8setClips5clipsySayAA8FileClip_pG_tKF":{"name":"setClips(clips:)","abstract":"<p>Sets the clips sequence, throws if clips are invalid.</p>","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/s:8AudioKit12AKClipPlayerC5clipsSayAA8FileClip_pGvp":{"name":"clips","abstract":"<p>A valid clip sequence.</p>","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/s:8AudioKit12AKClipPlayerC5clipsACSgSayAA8FileClip_pG_tcfc":{"name":"init(clips:)","abstract":"<p>Initializes a clipPlayer with clips.</p>","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/c:@M@AudioKit@objc(cs)AKClipPlayer(im)init":{"name":"init()","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/s:8AudioKit12AKClipPlayerC7prepare14withFrameCountys6UInt32V_tF":{"name":"prepare(withFrameCount:)","abstract":"<p>Prepares previously scheduled file regions or buffers for playback.</p>","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/s:8AudioKit12AKClipPlayerC4playyyF":{"name":"play()","abstract":"<p>Starts playback at next render cycle, AVAudioEngine must be running.</p>","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/s:8AudioKit12AKClipPlayerC4play2atySo11AVAudioTimeCSg_tF":{"name":"play(at:)","abstract":"<p>Starts playback at time</p>","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/c:@M@AudioKit@objc(cs)AKClipPlayer(im)stop":{"name":"stop()","abstract":"<p>Stops playback.</p>","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/s:8AudioKit12AKClipPlayerC6volumeSfvp":{"name":"volume","abstract":"<p>Volume 0.0 -&gt; 1.0, default 1.0</p>","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/s:8AudioKit12AKClipPlayerC3panSfvp":{"name":"pan","abstract":"<p>Left/Right balance -1.0 -&gt; 1.0, default 0.0</p>","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/c:@CM@AudioKit@objc(cs)AKClipPlayer(py)isStarted":{"name":"isStarted","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/c:@M@AudioKit@objc(pl)AKTiming(im)startAt:":{"name":"start(at:)","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/c:@M@AudioKit@objc(pl)AKTiming(im)setPosition:":{"name":"setPosition(_:)","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/c:@M@AudioKit@objc(pl)AKTiming(im)positionAtAudioTime:":{"name":"position(at:)","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/c:@M@AudioKit@objc(pl)AKTiming(im)audioTimeAtPosition:":{"name":"audioTime(at:)","parent_name":"AKClipPlayer"},"Classes/AKClipPlayer.html#/c:@M@AudioKit@objc(pl)AKTiming(im)prepare":{"name":"prepare()","parent_name":"AKClipPlayer"},"Classes/AKClipMerger.html#/s:8AudioKit12AKClipMergerC13mergeDelegateAA09ClipMergeF0_pSgXwvp":{"name":"mergeDelegate","abstract":"<p>The delegate used for clip editing and creation.</p>","parent_name":"AKClipMerger"},"Classes/AKClipMerger.html#/c:@M@AudioKit@objc(cs)AKClipMerger(im)mergeWithClip:clips:":{"name":"merge(clip:clips:)","abstract":"<p>Creates a validated array of clips with the new clip merged into an array of validated clips.</p>","parent_name":"AKClipMerger"},"Classes/AKClipMerger.html#/s:8AudioKit12AKClipMergerC13validateClipsySayAA0C0_pGAFKFZ":{"name":"validateClips(_:)","abstract":"<p>Validate an array of clips</p>","parent_name":"AKClipMerger"},"Protocols/AKClip.html#/c:@M@AudioKit@objc(pl)AKClip(py)time":{"name":"time","abstract":"<p>The time in the timeline that the clip should begin playing.</p>","parent_name":"AKClip"},"Protocols/AKClip.html#/c:@M@AudioKit@objc(pl)AKClip(py)offset":{"name":"offset","abstract":"<p>The offset into the clip&rsquo;s audio (where to start playing from within the clip).</p>","parent_name":"AKClip"},"Protocols/AKClip.html#/c:@M@AudioKit@objc(pl)AKClip(py)duration":{"name":"duration","abstract":"<p>The duration of playback.</p>","parent_name":"AKClip"},"Protocols/AKClip.html#/s:8AudioKit6AKClipPAAE8overlapsySbAaB_pF":{"name":"overlaps(_:)","abstract":"<p>Returns true is overlaps other clip.</p>","parent_name":"AKClip"},"Protocols/AKClip.html#/s:8AudioKit6AKClipPAAE7isValidSbvp":{"name":"isValid","abstract":"<p>Default implementation is very basic.  Implementers of AKClip should implement this","parent_name":"AKClip"},"Protocols/AKClip.html#/s:8AudioKit6AKClipPAAE7endTimeSdvp":{"name":"endTime","abstract":"<p>Convenience to get clip end time.</p>","parent_name":"AKClip"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(py)samplerUnit":{"name":"samplerUnit","abstract":"<p>Sampler AV Audio Unit</p>","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(py)tuning":{"name":"tuning","abstract":"<p>Tuning amount in semitones, from -24.0 to 24.0, Default: 0.0","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(im)init":{"name":"init()","abstract":"<p>Initialize the sampler node</p>","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(im)loadWav:error:":{"name":"loadWav(_:)","abstract":"<p>Load a wav file</p>","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(im)loadEXS24:error:":{"name":"loadEXS24(_:)","abstract":"<p>Load an EXS24 sample data file</p>","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(im)loadAudioFile:error:":{"name":"loadAudioFile(_:)","abstract":"<p>Load an AKAudioFile</p>","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(im)loadAudioFiles:error:":{"name":"loadAudioFiles(_:)","abstract":"<p>Load an array of AKAudioFiles</p>","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(im)loadPath:error:":{"name":"loadPath(_:)","abstract":"<p>Load a file path. The sampler can be configured by loading","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(py)amplitude":{"name":"amplitude","abstract":"<p>Output Amplitude. Range: -90.0 -&gt; +12 db, Default: 0 db</p>","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(py)volume":{"name":"volume","abstract":"<p>Normalized Output Volume. Range: 0 -&gt; 1, Default: 1</p>","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(py)pan":{"name":"pan","abstract":"<p>Pan. Range: -1 -&gt; 1, Default: 0</p>","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(im)playWithNoteNumber:velocity:channel:error:":{"name":"play(noteNumber:velocity:channel:)","abstract":"<p>Play a MIDI Note or trigger a sample</p>","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(im)stopWithNoteNumber:channel:error:":{"name":"stop(noteNumber:channel:)","abstract":"<p>Stop a MIDI Note</p>","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(im)loadSoundFont:preset:bank:error:":{"name":"loadSoundFont(_:preset:bank:)","abstract":"<p>Load a Bank from a SoundFont SF2 sample data file</p>","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(im)loadMelodicSoundFont:preset:error:":{"name":"loadMelodicSoundFont(_:preset:)","abstract":"<p>Load a Melodic SoundFont SF2 sample data file</p>","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html#/c:@M@AudioKit@objc(cs)AKAppleSampler(im)loadPercussiveSoundFont:preset:error:":{"name":"loadPercussiveSoundFont(_:preset:)","abstract":"<p>Load a Percussive SoundFont SF2 sample data file</p>","parent_name":"AKAppleSampler"},"Classes/AKAppleSampler.html":{"name":"AKAppleSampler","abstract":"<p>Sampler audio generation.</p>"},"Protocols/AKClip.html":{"name":"AKClip","abstract":"<p>A protocol containing timing information for scheduling audio clips in a timeline.  All"},"Classes/AKClipMerger.html":{"name":"AKClipMerger","abstract":"<p>AKClipMerger merges new clips into an existing array of validated clips and returns a"},"Classes/AKClipPlayer.html":{"name":"AKClipPlayer","abstract":"<p>Schedules multiple audio files to be played in a sequence.</p>"},"Classes/AKClipRecorder.html":{"name":"AKClipRecorder"},"Classes/AKFileClip.html":{"name":"AKFileClip","abstract":"<p>A FileClip implementation, used by AKClipPlayer.</p>"},"Classes/AKFileClipSequence.html":{"name":"AKFileClipSequence","abstract":"<p>A class that manages the merging of AKFileClips.</p>"},"Classes/AKMetronome.html":{"name":"AKMetronome","abstract":"<p>Useful metronome class that you can utilize for your own projects</p>"},"Classes/AKPhaseLockedVocoder.html":{"name":"AKPhaseLockedVocoder","abstract":"<p>This is a phase locked vocoder. It has the ability to play back an audio"},"Classes/AKPlayer.html":{"name":"AKPlayer","abstract":"<p>AKPlayer is meant to be a simple yet powerful audio player that just works. It supports"},"Classes/AKSampler.html":{"name":"AKSampler","abstract":"<p>Stereo Chorus</p>"},"Classes/AKSamplePlayer.html":{"name":"AKSamplePlayer","abstract":"<p>Audio player that loads a sample into memory</p>"},"Classes/AKTimePitch.html":{"name":"AKTimePitch","abstract":"<p>AudioKit version of Apple&rsquo;s TimePitch Audio Unit</p>"},"Classes/AKVariSpeed.html":{"name":"AKVariSpeed","abstract":"<p>AudioKit version of Apple&rsquo;s VariSpeed Audio Unit</p>"},"Protocols/ClipMergeDelegate.html":{"name":"ClipMergeDelegate","abstract":"<p>The protocol for the AKClipMerger&rsquo;s delegate"},"Enums/ClipRecordingError.html":{"name":"ClipRecordingError"},"Protocols/FileClip.html":{"name":"FileClip","abstract":"<p>A file based AKClip</p>"},"Playback Nodes.html#/s:8AudioKit6Samplea":{"name":"Sample","abstract":"<p>A Sample type, just a UInt32</p>"},"Classes/AKStereoFieldLimiter.html#/s:8AudioKit20AKStereoFieldLimiterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKStereoFieldLimiter"},"Classes/AKStereoFieldLimiter.html#/s:8AudioKit20AKStereoFieldLimiterC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKStereoFieldLimiter"},"Classes/AKStereoFieldLimiter.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKStereoFieldLimiter"},"Classes/AKStereoFieldLimiter.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiter(py)amount":{"name":"amount","abstract":"<p>Limiting Factor</p>","parent_name":"AKStereoFieldLimiter"},"Classes/AKStereoFieldLimiter.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKStereoFieldLimiter"},"Classes/AKStereoFieldLimiter.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiter(im)init:amount:":{"name":"init(_:amount:)","abstract":"<p>Initialize this booster node</p>","parent_name":"AKStereoFieldLimiter"},"Classes/AKStereoFieldLimiter.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKStereoFieldLimiter"},"Classes/AKStereoFieldLimiter.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKStereoFieldLimiter"},"Classes/AKPanner.html#/s:8AudioKit8AKPannerC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKPanner"},"Classes/AKPanner.html#/s:8AudioKit8AKPannerC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPanner"},"Classes/AKPanner.html#/c:@M@AudioKit@objc(cs)AKPanner(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKPanner"},"Classes/AKPanner.html#/c:@M@AudioKit@objc(cs)AKPanner(py)pan":{"name":"pan","abstract":"<p>Panning. A value of -1 is hard left, and a value of 1 is hard right, and 0 is center.</p>","parent_name":"AKPanner"},"Classes/AKPanner.html#/c:@M@AudioKit@objc(cs)AKPanner(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPanner"},"Classes/AKPanner.html#/c:@M@AudioKit@objc(cs)AKPanner(im)init:pan:":{"name":"init(_:pan:)","abstract":"<p>Initialize this panner node</p>","parent_name":"AKPanner"},"Classes/AKPanner.html#/c:@M@AudioKit@objc(cs)AKPanner(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPanner"},"Classes/AKPanner.html#/c:@M@AudioKit@objc(cs)AKPanner(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPanner"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(py)volume":{"name":"volume","abstract":"<p>Output Volume (Default 1)</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(py)isStarted":{"name":"isStarted","abstract":"<p>Determine if the mixer is serving any output or if it is stopped.</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(im)init":{"name":"init()","abstract":"<p>Initialize the mixer node with no inputs, to be connected later</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/s:8AudioKit7AKMixerCyAcA6AKNodeCSgd_tcfc":{"name":"init(_:)","abstract":"<p>Initialize the mixer node with multiple inputs</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(im)init:":{"name":"init(_:)","abstract":"<p>Initialize the mixer node with multiple inputs</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(im)detach":{"name":"detach()","abstract":"<p>Detach</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/s:8AudioKit7AKMixerC7connect_3busyAA6AKNodeCSg_SiSgtF":{"name":"connect(_:bus:)","abstract":"<p>Connnect another input after initialization // Deprecated</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(im)connectWithInput:bus:":{"name":"connect(input:bus:)","abstract":"<p>Connect for Objectivec access, with bus definition</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(im)connectWithInput:":{"name":"connect(input:)","abstract":"<p>Connect for Objectivec access</p>","parent_name":"AKMixer"},"Classes/AKDryWetMixer.html#/c:@M@AudioKit@objc(cs)AKDryWetMixer(py)balance":{"name":"balance","abstract":"<p>Balance (Default 0.5)</p>","parent_name":"AKDryWetMixer"},"Classes/AKDryWetMixer.html#/c:@M@AudioKit@objc(cs)AKDryWetMixer(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDryWetMixer"},"Classes/AKDryWetMixer.html#/c:@M@AudioKit@objc(cs)AKDryWetMixer(im)init::balance:":{"name":"init(_:_:balance:)","abstract":"<p>Initialize this dry wet mixer node</p>","parent_name":"AKDryWetMixer"},"Classes/AKDryWetMixer.html#/s:8AudioKit7AKInputP9inputNodeSo07AVAudioE0Cvp":{"name":"inputNode","parent_name":"AKDryWetMixer"},"Classes/AKDryWetMixer.html#/s:8AudioKit13AKDryWetMixerC8dryInputSo22AVAudioConnectionPointCvp":{"name":"dryInput","parent_name":"AKDryWetMixer"},"Classes/AKDryWetMixer.html#/s:8AudioKit13AKDryWetMixerC8wetInputSo22AVAudioConnectionPointCvp":{"name":"wetInput","parent_name":"AKDryWetMixer"},"Classes/AKDryWetMixer.html#/c:@M@AudioKit@objc(cs)AKDryWetMixer(im)disconnect":{"name":"disconnect()","parent_name":"AKDryWetMixer"},"Classes/AKBoosterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBoosterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKBoosterAudioUnit"},"Classes/AKBoosterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBoosterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKBoosterAudioUnit"},"Classes/AKBoosterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBoosterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKBoosterAudioUnit"},"Classes/AKBooster.html#/s:8AudioKit9AKBoosterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKBooster"},"Classes/AKBooster.html#/s:8AudioKit9AKBoosterC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(py)rampType":{"name":"rampType","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(py)gain":{"name":"gain","abstract":"<p>Amplification Factor</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(py)leftGain":{"name":"leftGain","abstract":"<p>Left Channel Amplification Factor</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(py)rightGain":{"name":"rightGain","abstract":"<p>Right Channel Amplification Factor</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(py)dB":{"name":"dB","abstract":"<p>Amplification Factor in db</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(im)init:gain:":{"name":"init(_:gain:)","abstract":"<p>Initialize this booster node</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKBooster"},"Classes/AKBalancer.html#/s:8AudioKit10AKBalancerC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKBalancer"},"Classes/AKBalancer.html#/s:8AudioKit10AKBalancerC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKBalancer"},"Classes/AKBalancer.html#/c:@M@AudioKit@objc(cs)AKBalancer(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKBalancer"},"Classes/AKBalancer.html#/c:@M@AudioKit@objc(cs)AKBalancer(im)init:comparator:":{"name":"init(_:comparator:)","abstract":"<p>Initialize this balance node</p>","parent_name":"AKBalancer"},"Classes/AKBalancer.html#/c:@M@AudioKit@objc(cs)AKBalancer(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKBalancer"},"Classes/AKBalancer.html#/c:@M@AudioKit@objc(cs)AKBalancer(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKBalancer"},"Classes/AK3DPanner.html#/c:@M@AudioKit@objc(cs)AK3DPanner(py)x":{"name":"x","abstract":"<p>Position of sound source along x-axis</p>","parent_name":"AK3DPanner"},"Classes/AK3DPanner.html#/c:@M@AudioKit@objc(cs)AK3DPanner(py)y":{"name":"y","abstract":"<p>Position of sound source along y-axis</p>","parent_name":"AK3DPanner"},"Classes/AK3DPanner.html#/c:@M@AudioKit@objc(cs)AK3DPanner(py)z":{"name":"z","abstract":"<p>Position of sound source along z-axis</p>","parent_name":"AK3DPanner"},"Classes/AK3DPanner.html#/c:@M@AudioKit@objc(cs)AK3DPanner(im)init:x:y:z:":{"name":"init(_:x:y:z:)","abstract":"<p>Initialize the panner node</p>","parent_name":"AK3DPanner"},"Classes/AK3DPanner.html#/s:8AudioKit7AKInputP9inputNodeSo07AVAudioE0Cvp":{"name":"inputNode","parent_name":"AK3DPanner"},"Classes/AK3DPanner.html#/s:8AudioKit10AK3DPannerC6detachyyF":{"name":"detach()","parent_name":"AK3DPanner"},"Classes/AK3DPanner.html":{"name":"AK3DPanner","abstract":"<p>3-D Spatialization of the input</p>"},"Classes/AKBalancer.html":{"name":"AKBalancer","abstract":"<p>This node outputs a version of the audio source, amplitude-modified so"},"Classes/AKBooster.html":{"name":"AKBooster","abstract":"<p>Stereo Booster</p>"},"Classes/AKBoosterAudioUnit.html":{"name":"AKBoosterAudioUnit"},"Classes/AKDryWetMixer.html":{"name":"AKDryWetMixer","abstract":"<p>Balanceable Mix between two signals, usually used for a dry signal and wet signal</p>"},"Classes/AKMixer.html":{"name":"AKMixer","abstract":"<p>AudioKit version of Apple&rsquo;s Mixer Node. Mixes a varaiadic list of AKNodes.</p>"},"Classes/AKPanner.html":{"name":"AKPanner","abstract":"<p>Stereo Panner</p>"},"Classes/AKStereoFieldLimiter.html":{"name":"AKStereoFieldLimiter","abstract":"<p>Stereo StereoFieldLimiter</p>"},"Classes/AKStereoInput.html#/c:@M@AudioKit@objc(cs)AKStereoInput(py)volume":{"name":"volume","abstract":"<p>Output Volume (Default 1)</p>","parent_name":"AKStereoInput"},"Classes/AKStereoInput.html#/c:@M@AudioKit@objc(cs)AKStereoInput(py)isStarted":{"name":"isStarted","abstract":"<p>Determine if the microphone is currently on.</p>","parent_name":"AKStereoInput"},"Classes/AKStereoInput.html#/c:@M@AudioKit@objc(cs)AKStereoInput(im)init":{"name":"init()","abstract":"<p>Initialize the microphone</p>","parent_name":"AKStereoInput"},"Classes/AKStereoInput.html#/c:@M@AudioKit@objc(cs)AKStereoInput(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKStereoInput"},"Classes/AKStereoInput.html#/c:@M@AudioKit@objc(cs)AKStereoInput(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKStereoInput"},"Classes/AKMicrophone.html#/c:@M@AudioKit@objc(cs)AKMicrophone(py)volume":{"name":"volume","abstract":"<p>Output Volume (Default 1)</p>","parent_name":"AKMicrophone"},"Classes/AKMicrophone.html#/s:8AudioKit12AKMicrophoneC9setDeviceyyAA8AKDeviceCKF":{"name":"setDevice(_:)","abstract":"<p>Set the actual microphone device</p>","parent_name":"AKMicrophone"},"Classes/AKMicrophone.html#/c:@M@AudioKit@objc(cs)AKMicrophone(py)isStarted":{"name":"isStarted","abstract":"<p>Determine if the microphone is currently on.</p>","parent_name":"AKMicrophone"},"Classes/AKMicrophone.html#/c:@M@AudioKit@objc(cs)AKMicrophone(im)init":{"name":"init()","abstract":"<p>Initialize the microphone</p>","parent_name":"AKMicrophone"},"Classes/AKMicrophone.html#/c:@M@AudioKit@objc(cs)AKMicrophone(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKMicrophone"},"Classes/AKMicrophone.html#/c:@M@AudioKit@objc(cs)AKMicrophone(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKMicrophone"},"Classes/AKMicrophone.html":{"name":"AKMicrophone","abstract":"<p>Audio from the standard input</p>"},"Classes/AKStereoInput.html":{"name":"AKStereoInput","abstract":"<p>Audio from a standard stereo input (very useful for making filters that use Audiobus or IAA as their input source)</p>"},"Classes/AKVocalTractAudioUnit.html#/c:@M@AudioKit@objc(cs)AKVocalTractAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKVocalTractAudioUnit"},"Classes/AKVocalTractAudioUnit.html#/c:@M@AudioKit@objc(cs)AKVocalTractAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKVocalTractAudioUnit"},"Classes/AKVocalTractAudioUnit.html#/c:@M@AudioKit@objc(cs)AKVocalTractAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKVocalTractAudioUnit"},"Classes/AKVocalTract.html#/s:8AudioKit12AKVocalTractC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/s:8AudioKit12AKVocalTractC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(py)frequency":{"name":"frequency","abstract":"<p>Glottal frequency.</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(py)tonguePosition":{"name":"tonguePosition","abstract":"<p>Tongue position (0-1)</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(py)tongueDiameter":{"name":"tongueDiameter","abstract":"<p>Tongue diameter (0-1)</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(py)tenseness":{"name":"tenseness","abstract":"<p>Vocal tenseness. 0 = all breath. 1=fully saturated.</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(py)nasality":{"name":"nasality","abstract":"<p>Sets the velum size. Larger values of this creates more nasally sounds.</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(im)initWithFrequency:tonguePosition:tongueDiameter:tenseness:nasality:":{"name":"init(frequency:tonguePosition:tongueDiameter:tenseness:nasality:)","abstract":"<p>Initialize this vocal tract node</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKVocalTract"},"Classes/AKTubularBells.html#/s:8AudioKit14AKTubularBellsC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/s:8AudioKit14AKTubularBellsC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(py)frequency":{"name":"frequency","abstract":"<p>Variable frequency. Values less than the initial frequency will be doubled until it is greater than that.</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(im)initWithFrequency:amplitude:":{"name":"init(frequency:amplitude:)","abstract":"<p>Initialize the STK TubularBells model</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/s:8AudioKit14AKTubularBellsC7trigger9frequency9amplitudeySd_SdtF":{"name":"trigger(frequency:amplitude:)","abstract":"<p>Trigger the sound with an optional set of parameters</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKTubularBells"},"Classes/AKSynthSnare.html#/c:@M@AudioKit@objc(cs)AKSynthSnare(im)initWithDuration:resonance:":{"name":"init(duration:resonance:)","abstract":"<p>Create the synth snare voice</p>","parent_name":"AKSynthSnare"},"Classes/AKSynthSnare.html#/c:@M@AudioKit@objc(cs)AKSynthSnare(im)playWithNoteNumber:velocity:":{"name":"play(noteNumber:velocity:)","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKSynthSnare"},"Classes/AKSynthSnare.html#/c:@M@AudioKit@objc(cs)AKSynthSnare(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Unneeded stop function since the sounds all decay quickly</p>","parent_name":"AKSynthSnare"},"Classes/AKSynthKick.html#/c:@M@AudioKit@objc(cs)AKSynthKick(im)initWithMidiInputName:":{"name":"init(midiInputName:)","abstract":"<p>Create the synth kick voice</p>","parent_name":"AKSynthKick"},"Classes/AKSynthKick.html#/c:@M@AudioKit@objc(cs)AKSynthKick(im)playWithNoteNumber:velocity:":{"name":"play(noteNumber:velocity:)","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKSynthKick"},"Classes/AKSynthKick.html#/c:@M@AudioKit@objc(cs)AKSynthKick(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Unneeded stop function since the sounds all decay quickly</p>","parent_name":"AKSynthKick"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO6maracayA2CmF":{"name":"maraca","abstract":"<p>Maraca</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO6cabasayA2CmF":{"name":"cabasa","abstract":"<p>Cabasa</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO6sekereyA2CmF":{"name":"sekere","abstract":"<p>Sekere</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO10tambourineyA2CmF":{"name":"tambourine","abstract":"<p>Tambourine</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO11sleighBellsyA2CmF":{"name":"sleighBells","abstract":"<p>Sleigh Bells</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO12bambooChimesyA2CmF":{"name":"bambooChimes","abstract":"<p>Bamboo Chimes</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO9sandPaperyA2CmF":{"name":"sandPaper","abstract":"<p>Using sand paper</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO7sodaCanyA2CmF":{"name":"sodaCan","abstract":"<p>Soda Can</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO6sticksyA2CmF":{"name":"sticks","abstract":"<p>Sticks falling</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO6crunchyA2CmF":{"name":"crunch","abstract":"<p>Crunching sound</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO8bigRocksyA2CmF":{"name":"bigRocks","abstract":"<p>Big rocks hitting each other</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO11littleRocksyA2CmF":{"name":"littleRocks","abstract":"<p>Little rocks hitting each other</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO7nextMugyA2CmF":{"name":"nextMug","abstract":"<p>NeXT Mug</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO10pennyInMugyA2CmF":{"name":"pennyInMug","abstract":"<p>A penny rattling around a mug</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO11nickleInMugyA2CmF":{"name":"nickleInMug","abstract":"<p>A nickle rattling around a mug</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO9dimeInMugyA2CmF":{"name":"dimeInMug","abstract":"<p>A dime rattling around a mug</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO12quarterInMugyA2CmF":{"name":"quarterInMug","abstract":"<p>A quarter rattling around a mug</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO10francInMugyA2CmF":{"name":"francInMug","abstract":"<p>A Franc rattling around a mug</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO9pesoInMugyA2CmF":{"name":"pesoInMug","abstract":"<p>A Peso rattling around a mug</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO5guiroyA2CmF":{"name":"guiro","abstract":"<p>Guiro</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO6wrenchyA2CmF":{"name":"wrench","abstract":"<p>Wrench</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO10waterDropsyA2CmF":{"name":"waterDrops","abstract":"<p>Water Droplets</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO17tunedBambooChimesyA2CmF":{"name":"tunedBambooChimes","abstract":"<p>Tuned Bamboo Chimes</p>","parent_name":"AKShakerType"},"Classes/AKShaker.html#/s:8AudioKit8AKShakerC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/s:8AudioKit8AKShakerC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKShaker"},"Classes/AKShaker.html#/c:@M@AudioKit@objc(cs)AKShaker(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/s:8AudioKit8AKShakerC4typeAA0C4TypeOvp":{"name":"type","abstract":"<p>Type of shaker to use</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/c:@M@AudioKit@objc(cs)AKShaker(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/c:@M@AudioKit@objc(cs)AKShaker(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/s:8AudioKit8AKShakerC4type9amplitudeAcA0C4TypeO_Sdtcfc":{"name":"init(type:amplitude:)","abstract":"<p>Initialize the STK Shaker model</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/s:8AudioKit8AKShakerC7trigger9amplitudeySd_tF":{"name":"trigger(amplitude:)","abstract":"<p>Trigger the sound with an optional set of parameters</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/c:@M@AudioKit@objc(cs)AKShaker(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/c:@M@AudioKit@objc(cs)AKShaker(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKShaker"},"Classes/AKRhodesPiano.html#/s:8AudioKit13AKRhodesPianoC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/s:8AudioKit13AKRhodesPianoC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(py)frequency":{"name":"frequency","abstract":"<p>Variable frequency. Values less than the initial frequency will be doubled until it is greater than that.</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(im)initWithFrequency:amplitude:":{"name":"init(frequency:amplitude:)","abstract":"<p>Initialize the STK RhodesPiano model</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/s:8AudioKit13AKRhodesPianoC7trigger9frequency9amplitudeySd_SdtF":{"name":"trigger(frequency:amplitude:)","abstract":"<p>Trigger the sound with an optional set of parameters</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKRhodesPiano"},"Classes/AKPluckedStringAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPluckedStringAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKPluckedStringAudioUnit"},"Classes/AKPluckedStringAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPluckedStringAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKPluckedStringAudioUnit"},"Classes/AKPluckedStringAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPluckedStringAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKPluckedStringAudioUnit"},"Classes/AKPluckedString.html#/s:8AudioKit15AKPluckedStringC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/s:8AudioKit15AKPluckedStringC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(py)frequency":{"name":"frequency","abstract":"<p>Variable frequency. Values less than the initial frequency will be doubled until it is greater than that.</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(im)initWithFrequency:amplitude:":{"name":"init(frequency:amplitude:)","abstract":"<p>Initialize this pluck node</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/s:8AudioKit15AKPluckedStringC7triggeryyF":{"name":"trigger()","abstract":"<p>Trigger the sound with current parameters</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/s:8AudioKit15AKPluckedStringC7trigger9frequency9amplitudeySd_SdtF":{"name":"trigger(frequency:amplitude:)","abstract":"<p>Trigger the sound with a set of parameters</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPluckedString"},"Classes/AKMetalBarAudioUnit.html#/c:@M@AudioKit@objc(cs)AKMetalBarAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKMetalBarAudioUnit"},"Classes/AKMetalBarAudioUnit.html#/c:@M@AudioKit@objc(cs)AKMetalBarAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKMetalBarAudioUnit"},"Classes/AKMetalBarAudioUnit.html#/c:@M@AudioKit@objc(cs)AKMetalBarAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKMetalBarAudioUnit"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC26leftBoundaryConditionRangeSNySdGvpZ":{"name":"leftBoundaryConditionRange","abstract":"<p>Lower and upper bounds for Left Boundary Condition</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC27rightBoundaryConditionRangeSNySdGvpZ":{"name":"rightBoundaryConditionRange","abstract":"<p>Lower and upper bounds for Right Boundary Condition</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC18decayDurationRangeSNySdGvpZ":{"name":"decayDurationRange","abstract":"<p>Lower and upper bounds for Decay Duration</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC14scanSpeedRangeSNySdGvpZ":{"name":"scanSpeedRange","abstract":"<p>Lower and upper bounds for Scan Speed</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC13positionRangeSNySdGvpZ":{"name":"positionRange","abstract":"<p>Lower and upper bounds for Position</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC19strikeVelocityRangeSNySdGvpZ":{"name":"strikeVelocityRange","abstract":"<p>Lower and upper bounds for Strike Velocity</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC16strikeWidthRangeSNySdGvpZ":{"name":"strikeWidthRange","abstract":"<p>Lower and upper bounds for Strike Width</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC28defaultLeftBoundaryConditionSdvpZ":{"name":"defaultLeftBoundaryCondition","abstract":"<p>Initial value for Left Boundary Condition</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC29defaultRightBoundaryConditionSdvpZ":{"name":"defaultRightBoundaryCondition","abstract":"<p>Initial value for Right Boundary Condition</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC20defaultDecayDurationSdvpZ":{"name":"defaultDecayDuration","abstract":"<p>Initial value for Decay Duration</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC16defaultScanSpeedSdvpZ":{"name":"defaultScanSpeed","abstract":"<p>Initial value for Scan Speed</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC15defaultPositionSdvpZ":{"name":"defaultPosition","abstract":"<p>Initial value for Position</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC21defaultStrikeVelocitySdvpZ":{"name":"defaultStrikeVelocity","abstract":"<p>Initial value for Strike Velocity</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC18defaultStrikeWidthSdvpZ":{"name":"defaultStrikeWidth","abstract":"<p>Initial value for Strike Width</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC16defaultStiffnessSdvpZ":{"name":"defaultStiffness","abstract":"<p>Initial value for Stiffness</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC27defaultHighFrequencyDampingSdvpZ":{"name":"defaultHighFrequencyDamping","abstract":"<p>Initial value for High Frequency Damping</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)leftBoundaryCondition":{"name":"leftBoundaryCondition","abstract":"<p>Boundary condition at left end of bar. 1 = clamped, 2 = pivoting, 3 = free</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)rightBoundaryCondition":{"name":"rightBoundaryCondition","abstract":"<p>Boundary condition at right end of bar. 1 = clamped, 2 = pivoting, 3 = free</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)decayDuration":{"name":"decayDuration","abstract":"<p>30db decay time (in seconds).</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)scanSpeed":{"name":"scanSpeed","abstract":"<p>Speed of scanning the output location.</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)position":{"name":"position","abstract":"<p>Position along bar that strike occurs.</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)strikeVelocity":{"name":"strikeVelocity","abstract":"<p>Normalized strike velocity</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)strikeWidth":{"name":"strikeWidth","abstract":"<p>Spatial width of strike.</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(im)initWithLeftBoundaryCondition:rightBoundaryCondition:decayDuration:scanSpeed:position:strikeVelocity:strikeWidth:stiffness:highFrequencyDamping:":{"name":"init(leftBoundaryCondition:rightBoundaryCondition:decayDuration:scanSpeed:position:strikeVelocity:strikeWidth:stiffness:highFrequencyDamping:)","abstract":"<p>Initialize this Bar node</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/s:8AudioKit10AKMetalBarC7triggeryyF":{"name":"trigger()","abstract":"<p>Trigger the sound with an optional set of parameters</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKMetalBar"},"Classes/AKMandolin.html#/s:8AudioKit10AKMandolinC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/s:8AudioKit10AKMandolinC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@M@AudioKit@objc(cs)AKMandolin(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@M@AudioKit@objc(cs)AKMandolin(py)detune":{"name":"detune","abstract":"<p>Detuning of second string in the course (1=Unison (deault), 2=Octave)</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@M@AudioKit@objc(cs)AKMandolin(py)bodySize":{"name":"bodySize","abstract":"<p>Relative size of the mandoline (Default: 1, ranges ~ 0.5 - 2)</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@M@AudioKit@objc(cs)AKMandolin(im)initWithDetune:bodySize:":{"name":"init(detune:bodySize:)","abstract":"<p>Initialize the 4 course (string-pair) Mandolin</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/s:8AudioKit10AKMandolinC12prepareChordyys5UInt8V_A3FtF":{"name":"prepareChord(_:_:_:_:)","abstract":"<p>Virutally pressing fingers on all the strings of the mandolin</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/s:8AudioKit10AKMandolinC4fret10noteNumber6courseys5UInt8V_SitF":{"name":"fret(noteNumber:course:)","abstract":"<p>Pressing a finger on a course of the mandolin</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/s:8AudioKit10AKMandolinC5pluck6course8position8velocityySi_Sds5UInt8VtF":{"name":"pluck(course:position:velocity:)","abstract":"<p>Pluck an individual course</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@M@AudioKit@objc(cs)AKMandolin(im)strum:velocity:":{"name":"strum(_:velocity:)","abstract":"<p>Strum all strings of the mandolin</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/s:8AudioKit10AKMandolinC27presetLargeResonantMandolinyyF":{"name":"presetLargeResonantMandolin()","abstract":"<p>Large Resonant Mandolin</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/s:8AudioKit10AKMandolinC22presetOctaveUpMandolinyyF":{"name":"presetOctaveUpMandolin()","abstract":"<p>Preset with Strings pairs separated by an octave</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/s:8AudioKit10AKMandolinC28presetElectricGuitarMandolinyyF":{"name":"presetElectricGuitarMandolin()","abstract":"<p>A mandolin that sounds a bit like an electric guitar</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/s:8AudioKit10AKMandolinC34presetSmallBodiedDistortedMandolinyyF":{"name":"presetSmallBodiedDistortedMandolin()","abstract":"<p>Small, distorted mandolin</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/s:8AudioKit10AKMandolinC18presetAcidMandolinyyF":{"name":"presetAcidMandolin()","abstract":"<p>A strangly tuned, psychedelic mandolin</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/s:8AudioKit10AKMandolinC26printCurrentValuesAsPresetyyF":{"name":"printCurrentValuesAsPreset()","abstract":"<p>Print out current values in case you want to save it as a preset</p>","parent_name":"AKMandolin"},"Classes/AKFluteAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFluteAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKFluteAudioUnit"},"Classes/AKFluteAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFluteAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKFluteAudioUnit"},"Classes/AKFluteAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFluteAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKFluteAudioUnit"},"Classes/AKFlute.html#/s:8AudioKit7AKFluteC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKFlute"},"Classes/AKFlute.html#/s:8AudioKit7AKFluteC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(py)frequency":{"name":"frequency","abstract":"<p>Variable frequency. Values less than the initial frequency will be doubled until it is greater than that.</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(im)initWithFrequency:amplitude:":{"name":"init(frequency:amplitude:)","abstract":"<p>Initialize the STK Flute model</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/s:8AudioKit7AKFluteC7triggeryyF":{"name":"trigger()","abstract":"<p>Trigger the sound with current parameters</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/s:8AudioKit7AKFluteC7trigger9frequency9amplitudeySd_SdtF":{"name":"trigger(frequency:amplitude:)","abstract":"<p>Trigger the sound with a set of parameters</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKFlute"},"Classes/AKDripAudioUnit.html#/c:@M@AudioKit@objc(cs)AKDripAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKDripAudioUnit"},"Classes/AKDripAudioUnit.html#/c:@M@AudioKit@objc(cs)AKDripAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKDripAudioUnit"},"Classes/AKDripAudioUnit.html#/c:@M@AudioKit@objc(cs)AKDripAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKDripAudioUnit"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC14intensityRangeSNySdGvpZ":{"name":"intensityRange","abstract":"<p>Lower and upper bounds for Intensity</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC18dampingFactorRangeSNySdGvpZ":{"name":"dampingFactorRange","abstract":"<p>Lower and upper bounds for Damping Factor</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC17energyReturnRangeSNySdGvpZ":{"name":"energyReturnRange","abstract":"<p>Lower and upper bounds for Energy Return</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC26mainResonantFrequencyRangeSNySdGvpZ":{"name":"mainResonantFrequencyRange","abstract":"<p>Lower and upper bounds for Main Resonant Frequency</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC27firstResonantFrequencyRangeSNySdGvpZ":{"name":"firstResonantFrequencyRange","abstract":"<p>Lower and upper bounds for First Resonant Frequency</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC28secondResonantFrequencyRangeSNySdGvpZ":{"name":"secondResonantFrequencyRange","abstract":"<p>Lower and upper bounds for Second Resonant Frequency</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC14amplitudeRangeSNySdGvpZ":{"name":"amplitudeRange","abstract":"<p>Lower and upper bounds for Amplitude</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC16defaultIntensitySdvpZ":{"name":"defaultIntensity","abstract":"<p>Initial value for Intensity</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC20defaultDampingFactorSdvpZ":{"name":"defaultDampingFactor","abstract":"<p>Initial value for Damping Factor</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC19defaultEnergyReturnSdvpZ":{"name":"defaultEnergyReturn","abstract":"<p>Initial value for Energy Return</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC28defaultMainResonantFrequencySdvpZ":{"name":"defaultMainResonantFrequency","abstract":"<p>Initial value for Main Resonant Frequency</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC29defaultFirstResonantFrequencySdvpZ":{"name":"defaultFirstResonantFrequency","abstract":"<p>Initial value for First Resonant Frequency</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC30defaultSecondResonantFrequencySdvpZ":{"name":"defaultSecondResonantFrequency","abstract":"<p>Initial value for Second Resonant Frequency</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC16defaultAmplitudeSdvpZ":{"name":"defaultAmplitude","abstract":"<p>Initial value for Amplitude</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)intensity":{"name":"intensity","abstract":"<p>The intensity of the dripping sound.</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)dampingFactor":{"name":"dampingFactor","abstract":"<p>The damping factor. Maximum value is 2.0.</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)energyReturn":{"name":"energyReturn","abstract":"<p>The amount of energy to add back into the system.</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)mainResonantFrequency":{"name":"mainResonantFrequency","abstract":"<p>Main resonant frequency.</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)firstResonantFrequency":{"name":"firstResonantFrequency","abstract":"<p>The first resonant frequency.</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)secondResonantFrequency":{"name":"secondResonantFrequency","abstract":"<p>The second resonant frequency.</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude.</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(im)init":{"name":"init()","abstract":"<p>Initialize the drip with defaults</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(im)initWithIntensity:dampingFactor:energyReturn:mainResonantFrequency:firstResonantFrequency:secondResonantFrequency:amplitude:":{"name":"init(intensity:dampingFactor:energyReturn:mainResonantFrequency:firstResonantFrequency:secondResonantFrequency:amplitude:)","abstract":"<p>Initialize this drip node</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/s:8AudioKit6AKDripC7triggeryyF":{"name":"trigger()","abstract":"<p>Trigger the sound with an optional set of parameters</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDrip"},"Classes/AKClarinetAudioUnit.html#/c:@M@AudioKit@objc(cs)AKClarinetAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKClarinetAudioUnit"},"Classes/AKClarinetAudioUnit.html#/c:@M@AudioKit@objc(cs)AKClarinetAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKClarinetAudioUnit"},"Classes/AKClarinetAudioUnit.html#/c:@M@AudioKit@objc(cs)AKClarinetAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKClarinetAudioUnit"},"Classes/AKClarinet.html#/s:8AudioKit10AKClarinetC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/s:8AudioKit10AKClarinetC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(py)frequency":{"name":"frequency","abstract":"<p>Variable frequency. Values less than the initial frequency will be doubled until it is greater than that.</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(im)initWithFrequency:amplitude:":{"name":"init(frequency:amplitude:)","abstract":"<p>Initialize the STK Clarinet model</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/s:8AudioKit10AKClarinetC7triggeryyF":{"name":"trigger()","abstract":"<p>Trigger the sound with current parameters</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/s:8AudioKit10AKClarinetC7trigger9frequency9amplitudeySd_SdtF":{"name":"trigger(frequency:amplitude:)","abstract":"<p>Trigger the sound with a set of parameters</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html":{"name":"AKClarinet","abstract":"<p>STK Clarinet</p>"},"Classes/AKClarinetAudioUnit.html":{"name":"AKClarinetAudioUnit"},"Classes/AKDrip.html":{"name":"AKDrip","abstract":"<p>Physical model of the sound of dripping water. When triggered, it will"},"Classes/AKDripAudioUnit.html":{"name":"AKDripAudioUnit"},"Classes/AKFlute.html":{"name":"AKFlute","abstract":"<p>STK Flute</p>"},"Classes/AKFluteAudioUnit.html":{"name":"AKFluteAudioUnit"},"Classes/AKMandolin.html":{"name":"AKMandolin","abstract":"<p>Physical model of a 4 course mandolin</p>"},"Classes/AKMetalBar.html":{"name":"AKMetalBar"},"Classes/AKMetalBarAudioUnit.html":{"name":"AKMetalBarAudioUnit"},"Classes/AKPluckedString.html":{"name":"AKPluckedString","abstract":"<p>Karplus-Strong plucked string instrument.</p>"},"Classes/AKPluckedStringAudioUnit.html":{"name":"AKPluckedStringAudioUnit"},"Classes/AKRhodesPiano.html":{"name":"AKRhodesPiano","abstract":"<p>STK RhodesPiano</p>"},"Classes/AKShaker.html":{"name":"AKShaker","abstract":"<p>STK Shaker</p>"},"Enums/AKShakerType.html":{"name":"AKShakerType","abstract":"<p>Type of shaker to use</p>"},"Classes/AKSynthKick.html":{"name":"AKSynthKick","abstract":"<p>Kick Drum Synthesizer Instrument</p>"},"Classes/AKSynthSnare.html":{"name":"AKSynthSnare","abstract":"<p>Snare Drum Synthesizer Instrument</p>"},"Classes/AKTubularBells.html":{"name":"AKTubularBells","abstract":"<p>STK TubularBells</p>"},"Classes/AKVocalTract.html":{"name":"AKVocalTract","abstract":"<p>Based on the Pink Trombone algorithm by Neil Thapen, this implements a"},"Classes/AKVocalTractAudioUnit.html":{"name":"AKVocalTractAudioUnit"},"Classes/AKPWMOscillatorBank.html#/s:8AudioKit19AKPWMOscillatorBankC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/s:8AudioKit19AKPWMOscillatorBankC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)pulseWidth":{"name":"pulseWidth","abstract":"<p>Duty cycle width (range 0-1).</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack duration in seconds</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)decayDuration":{"name":"decayDuration","abstract":"<p>Decay duration in seconds</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)sustainLevel":{"name":"sustainLevel","abstract":"<p>Sustain Level</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release duration in seconds</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)pitchBend":{"name":"pitchBend","abstract":"<p>Pitch Bend as number of semitones</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)vibratoDepth":{"name":"vibratoDepth","abstract":"<p>Vibrato Depth in semitones</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)vibratoRate":{"name":"vibratoRate","abstract":"<p>Vibrato Rate in Hz</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(im)initWithPulseWidth:attackDuration:decayDuration:sustainLevel:releaseDuration:pitchBend:vibratoDepth:vibratoRate:":{"name":"init(pulseWidth:attackDuration:decayDuration:sustainLevel:releaseDuration:pitchBend:vibratoDepth:vibratoRate:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(im)playWithNoteNumber:velocity:frequency:":{"name":"play(noteNumber:velocity:frequency:)","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKPWMOscillatorAudioUnit"},"Classes/AKPWMOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKPWMOscillatorAudioUnit"},"Classes/AKPWMOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKPWMOscillatorAudioUnit"},"Classes/AKPWMOscillator.html#/s:8AudioKit15AKPWMOscillatorC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/s:8AudioKit15AKPWMOscillatorC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(py)frequency":{"name":"frequency","abstract":"<p>Frequency in cycles per second</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(py)amplitude":{"name":"amplitude","abstract":"<p>Output Amplitude.</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(py)pulseWidth":{"name":"pulseWidth","abstract":"<p>Duty Cycle Width 0 - 1</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(py)detuningOffset":{"name":"detuningOffset","abstract":"<p>Frequency offset in Hz.</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(py)detuningMultiplier":{"name":"detuningMultiplier","abstract":"<p>Frequency detuning multiplier</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(im)initWithFrequency:amplitude:pulseWidth:detuningOffset:detuningMultiplier:":{"name":"init(frequency:amplitude:pulseWidth:detuningOffset:detuningMultiplier:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPWMOscillator"},"Classes/AKPhaseDistortionOscillatorBank.html#/s:8AudioKit31AKPhaseDistortionOscillatorBankC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/s:8AudioKit31AKPhaseDistortionOscillatorBankC20ComponentDescriptionSo0agH0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)phaseDistortion":{"name":"phaseDistortion","abstract":"<p>Duty cycle width (range -1 - 1).</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack duration in seconds</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)decayDuration":{"name":"decayDuration","abstract":"<p>Decay duration in seconds</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)sustainLevel":{"name":"sustainLevel","abstract":"<p>Sustain Level</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release duration in seconds</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)pitchBend":{"name":"pitchBend","abstract":"<p>Pitch Bend as number of semitones</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)vibratoDepth":{"name":"vibratoDepth","abstract":"<p>Vibrato Depth in semitones</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)vibratoRate":{"name":"vibratoRate","abstract":"<p>Vibrato Rate in Hz</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(im)initWithWaveform:phaseDistortion:attackDuration:decayDuration:sustainLevel:releaseDuration:pitchBend:vibratoDepth:vibratoRate:":{"name":"init(waveform:phaseDistortion:attackDuration:decayDuration:sustainLevel:releaseDuration:pitchBend:vibratoDepth:vibratoRate:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(im)playWithNoteNumber:velocity:frequency:":{"name":"play(noteNumber:velocity:frequency:)","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKPhaseDistortionOscillatorAudioUnit"},"Classes/AKPhaseDistortionOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKPhaseDistortionOscillatorAudioUnit"},"Classes/AKPhaseDistortionOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKPhaseDistortionOscillatorAudioUnit"},"Classes/AKPhaseDistortionOscillator.html#/s:8AudioKit27AKPhaseDistortionOscillatorC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/s:8AudioKit27AKPhaseDistortionOscillatorC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(py)frequency":{"name":"frequency","abstract":"<p>Frequency in cycles per second</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(py)amplitude":{"name":"amplitude","abstract":"<p>Output Amplitude.</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(py)phaseDistortion":{"name":"phaseDistortion","abstract":"<p>Amount of distortion, within the range [-1, 1]. 0 is no distortion.</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(py)detuningOffset":{"name":"detuningOffset","abstract":"<p>Frequency offset in Hz.</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(py)detuningMultiplier":{"name":"detuningMultiplier","abstract":"<p>Frequency detuning multiplier</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(im)initWithWaveform:frequency:amplitude:phaseDistortion:detuningOffset:detuningMultiplier:":{"name":"init(waveform:frequency:amplitude:phaseDistortion:detuningOffset:detuningMultiplier:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKOscillatorBank.html#/s:8AudioKit16AKOscillatorBankC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/s:8AudioKit16AKOscillatorBankC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/s:8AudioKit16AKOscillatorBankC8waveformAA7AKTableCSgvp":{"name":"waveform","abstract":"<p>Waveform of the oscillator</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack duration in seconds</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)decayDuration":{"name":"decayDuration","abstract":"<p>Decay duration in seconds</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)sustainLevel":{"name":"sustainLevel","abstract":"<p>Sustain Level</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release duration in seconds</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)pitchBend":{"name":"pitchBend","abstract":"<p>Pitch Bend as number of semitones</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)vibratoDepth":{"name":"vibratoDepth","abstract":"<p>Vibrato Depth in semitones</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)vibratoRate":{"name":"vibratoRate","abstract":"<p>Vibrato Rate in Hz</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(im)initWithWaveform:attackDuration:decayDuration:sustainLevel:releaseDuration:pitchBend:vibratoDepth:vibratoRate:":{"name":"init(waveform:attackDuration:decayDuration:sustainLevel:releaseDuration:pitchBend:vibratoDepth:vibratoRate:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/s:8AudioKit16AKOscillatorBankC5resetyyF":{"name":"reset()","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(im)playWithNoteNumber:velocity:frequency:":{"name":"play(noteNumber:velocity:frequency:)","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKOscillatorAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKOscillatorAudioUnit"},"Classes/AKOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKOscillatorAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKOscillatorAudioUnit"},"Classes/AKOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKOscillatorAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKOscillatorAudioUnit"},"Classes/AKOscillator.html#/s:8AudioKit12AKOscillatorC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/s:8AudioKit12AKOscillatorC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/s:8AudioKit12AKOscillatorC14frequencyRangeSNySdGvpZ":{"name":"frequencyRange","abstract":"<p>Lower and upper bounds for Frequency</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/s:8AudioKit12AKOscillatorC14amplitudeRangeSNySdGvpZ":{"name":"amplitudeRange","abstract":"<p>Lower and upper bounds for Amplitude</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/s:8AudioKit12AKOscillatorC19detuningOffsetRangeSNySdGvpZ":{"name":"detuningOffsetRange","abstract":"<p>Lower and upper bounds for Detuning Offset</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/s:8AudioKit12AKOscillatorC23detuningMultiplierRangeSNySdGvpZ":{"name":"detuningMultiplierRange","abstract":"<p>Lower and upper bounds for Detuning Multiplier</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/s:8AudioKit12AKOscillatorC16defaultFrequencySdvpZ":{"name":"defaultFrequency","abstract":"<p>Initial value for Frequency</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/s:8AudioKit12AKOscillatorC16defaultAmplitudeSdvpZ":{"name":"defaultAmplitude","abstract":"<p>Initial value for Amplitude</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/s:8AudioKit12AKOscillatorC21defaultDetuningOffsetSdvpZ":{"name":"defaultDetuningOffset","abstract":"<p>Initial value for Detuning Offset</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/s:8AudioKit12AKOscillatorC25defaultDetuningMultiplierSdvpZ":{"name":"defaultDetuningMultiplier","abstract":"<p>Initial value for Detuning Multiplier</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(py)frequency":{"name":"frequency","abstract":"<p>Frequency in cycles per second</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(py)amplitude":{"name":"amplitude","abstract":"<p>Output Amplitude.</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(py)detuningOffset":{"name":"detuningOffset","abstract":"<p>Frequency offset in Hz.</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(py)detuningMultiplier":{"name":"detuningMultiplier","abstract":"<p>Frequency detuning multiplier</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(im)initWithWaveform:frequency:amplitude:detuningOffset:detuningMultiplier:":{"name":"init(waveform:frequency:amplitude:detuningOffset:detuningMultiplier:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKOscillator"},"Classes/AKMorphingOscillatorBank.html#/s:8AudioKit24AKMorphingOscillatorBankC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/s:8AudioKit24AKMorphingOscillatorBankC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/s:8AudioKit24AKMorphingOscillatorBankC13waveformArraySayAA7AKTableCGvp":{"name":"waveformArray","abstract":"<p>An array of tables to morph between</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack duration in seconds</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)decayDuration":{"name":"decayDuration","abstract":"<p>Decay duration in seconds</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)sustainLevel":{"name":"sustainLevel","abstract":"<p>Sustain Level</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release duration in seconds</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)pitchBend":{"name":"pitchBend","abstract":"<p>Pitch Bend as number of semitones</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)vibratoDepth":{"name":"vibratoDepth","abstract":"<p>Vibrato Depth in semitones</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)vibratoRate":{"name":"vibratoRate","abstract":"<p>Vibrato Rate in Hz</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(im)initWithWaveformArray:index:attackDuration:decayDuration:sustainLevel:releaseDuration:pitchBend:vibratoDepth:vibratoRate:":{"name":"init(waveformArray:index:attackDuration:decayDuration:sustainLevel:releaseDuration:pitchBend:vibratoDepth:vibratoRate:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/s:8AudioKit24AKMorphingOscillatorBankC5resetyyF":{"name":"reset()","abstract":"<p>stops all notes</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(im)playWithNoteNumber:velocity:frequency:":{"name":"play(noteNumber:velocity:frequency:)","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKMorphingOscillatorAudioUnit"},"Classes/AKMorphingOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKMorphingOscillatorAudioUnit"},"Classes/AKMorphingOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKMorphingOscillatorAudioUnit"},"Classes/AKMorphingOscillator.html#/s:8AudioKit20AKMorphingOscillatorC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/s:8AudioKit20AKMorphingOscillatorC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/s:8AudioKit20AKMorphingOscillatorC14frequencyRangeSNySdGvpZ":{"name":"frequencyRange","abstract":"<p>Lower and upper bounds for Frequency</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/s:8AudioKit20AKMorphingOscillatorC14amplitudeRangeSNySdGvpZ":{"name":"amplitudeRange","abstract":"<p>Lower and upper bounds for Amplitude</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/s:8AudioKit20AKMorphingOscillatorC10indexRangeSNySdGvpZ":{"name":"indexRange","abstract":"<p>Lower and upper bounds for Index</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/s:8AudioKit20AKMorphingOscillatorC19detuningOffsetRangeSNySdGvpZ":{"name":"detuningOffsetRange","abstract":"<p>Lower and upper bounds for Detuning Offset</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/s:8AudioKit20AKMorphingOscillatorC23detuningMultiplierRangeSNySdGvpZ":{"name":"detuningMultiplierRange","abstract":"<p>Lower and upper bounds for Detuning Multiplier</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/s:8AudioKit20AKMorphingOscillatorC16defaultFrequencySdvpZ":{"name":"defaultFrequency","abstract":"<p>Initial value for Frequency</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/s:8AudioKit20AKMorphingOscillatorC16defaultAmplitudeSdvpZ":{"name":"defaultAmplitude","abstract":"<p>Initial value for Amplitude</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/s:8AudioKit20AKMorphingOscillatorC12defaultIndexSdvpZ":{"name":"defaultIndex","abstract":"<p>Initial value for Index</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/s:8AudioKit20AKMorphingOscillatorC21defaultDetuningOffsetSdvpZ":{"name":"defaultDetuningOffset","abstract":"<p>Initial value for Detuning Offset</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/s:8AudioKit20AKMorphingOscillatorC25defaultDetuningMultiplierSdvpZ":{"name":"defaultDetuningMultiplier","abstract":"<p>Initial value for Detuning Multiplier</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/s:8AudioKit20AKMorphingOscillatorC12defaultPhaseSdvpZ":{"name":"defaultPhase","abstract":"<p>Initial value for Phase</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(py)frequency":{"name":"frequency","abstract":"<p>Frequency (in Hz)</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude (typically a value between 0 and 1).</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(py)detuningOffset":{"name":"detuningOffset","abstract":"<p>Frequency offset in Hz.</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(py)detuningMultiplier":{"name":"detuningMultiplier","abstract":"<p>Frequency detuning multiplier</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(im)initWithWaveformArray:frequency:amplitude:index:detuningOffset:detuningMultiplier:phase:":{"name":"init(waveformArray:frequency:amplitude:index:detuningOffset:detuningMultiplier:phase:)","abstract":"<p>Initialize this Morpher node</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKMorphingOscillator"},"Classes/AKFMOscillatorBank.html#/s:8AudioKit18AKFMOscillatorBankC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/s:8AudioKit18AKFMOscillatorBankC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/s:8AudioKit18AKFMOscillatorBankC8waveformAA7AKTableCSgvp":{"name":"waveform","abstract":"<p>Waveform of the oscillator</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)carrierMultiplier":{"name":"carrierMultiplier","abstract":"<p>This multiplied by the baseFrequency gives the carrier frequency.</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)modulatingMultiplier":{"name":"modulatingMultiplier","abstract":"<p>This multiplied by the baseFrequency gives the modulating frequency.</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)modulationIndex":{"name":"modulationIndex","abstract":"<p>This multiplied by the modulating frequency gives the modulation amplitude.</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack duration in seconds</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)decayDuration":{"name":"decayDuration","abstract":"<p>Decay duration in seconds</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)sustainLevel":{"name":"sustainLevel","abstract":"<p>Sustain Level</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release duration in seconds</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)pitchBend":{"name":"pitchBend","abstract":"<p>Pitch Bend as number of semitones</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)vibratoDepth":{"name":"vibratoDepth","abstract":"<p>Vibrato Depth in semitones</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)vibratoRate":{"name":"vibratoRate","abstract":"<p>Vibrato Rate in Hz</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(im)initWithWaveform:carrierMultiplier:modulatingMultiplier:modulationIndex:attackDuration:decayDuration:sustainLevel:releaseDuration:pitchBend:vibratoDepth:vibratoRate:":{"name":"init(waveform:carrierMultiplier:modulatingMultiplier:modulationIndex:attackDuration:decayDuration:sustainLevel:releaseDuration:pitchBend:vibratoDepth:vibratoRate:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(im)playWithNoteNumber:velocity:frequency:":{"name":"play(noteNumber:velocity:frequency:)","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKFMOscillatorAudioUnit"},"Classes/AKFMOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKFMOscillatorAudioUnit"},"Classes/AKFMOscillatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKFMOscillatorAudioUnit"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC18baseFrequencyRangeSNySdGvpZ":{"name":"baseFrequencyRange","abstract":"<p>Lower and upper bounds for Base Frequency</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC22carrierMultiplierRangeSNySdGvpZ":{"name":"carrierMultiplierRange","abstract":"<p>Lower and upper bounds for Carrier Multiplier</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC25modulatingMultiplierRangeSNySdGvpZ":{"name":"modulatingMultiplierRange","abstract":"<p>Lower and upper bounds for Modulating Multiplier</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC20modulationIndexRangeSNySdGvpZ":{"name":"modulationIndexRange","abstract":"<p>Lower and upper bounds for Modulation Index</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC14amplitudeRangeSNySdGvpZ":{"name":"amplitudeRange","abstract":"<p>Lower and upper bounds for Amplitude</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC20defaultBaseFrequencySdvpZ":{"name":"defaultBaseFrequency","abstract":"<p>Initial value for Base Frequency</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC24defaultCarrierMultiplierSdvpZ":{"name":"defaultCarrierMultiplier","abstract":"<p>Initial value for Carrier Multiplier</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC27defaultModulatingMultiplierSdvpZ":{"name":"defaultModulatingMultiplier","abstract":"<p>Initial value for Modulating Multiplier</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC22defaultModulationIndexSdvpZ":{"name":"defaultModulationIndex","abstract":"<p>Initial value for Modulation Index</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC16defaultAmplitudeSdvpZ":{"name":"defaultAmplitude","abstract":"<p>Initial value for Amplitude</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)baseFrequency":{"name":"baseFrequency","abstract":"<p>In cycles per second, or Hz, this is the common denominator for the carrier and modulating frequencies.</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)carrierMultiplier":{"name":"carrierMultiplier","abstract":"<p>This multiplied by the baseFrequency gives the carrier frequency.</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)modulatingMultiplier":{"name":"modulatingMultiplier","abstract":"<p>This multiplied by the baseFrequency gives the modulating frequency.</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)modulationIndex":{"name":"modulationIndex","abstract":"<p>This multiplied by the modulating frequency gives the modulation amplitude.</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)amplitude":{"name":"amplitude","abstract":"<p>Output Amplitude.</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(im)initWithWaveform:baseFrequency:carrierMultiplier:modulatingMultiplier:modulationIndex:amplitude:":{"name":"init(waveform:baseFrequency:carrierMultiplier:modulatingMultiplier:modulationIndex:amplitude:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC13presetStunRayyyF":{"name":"presetStunRay()","abstract":"<p>Stun Ray Preset</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC13presetFogHornyyF":{"name":"presetFogHorn()","abstract":"<p>Fog Horn Preset</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC12presetBuzzeryyF":{"name":"presetBuzzer()","abstract":"<p>Buzzer Preset</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC12presetSpiralyyF":{"name":"presetSpiral()","abstract":"<p>Spiral Preset</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/s:8AudioKit14AKFMOscillatorC12presetWobbleyyF":{"name":"presetWobble()","abstract":"<p>Wobble Preset</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html":{"name":"AKFMOscillator","abstract":"<p>Classic FM Synthesis audio generation.</p>"},"Classes/AKFMOscillatorAudioUnit.html":{"name":"AKFMOscillatorAudioUnit"},"Classes/AKFMOscillatorBank.html":{"name":"AKFMOscillatorBank","abstract":"<p>Frequency Modulation Polyphonic Oscillator</p>"},"Classes/AKMorphingOscillator.html":{"name":"AKMorphingOscillator","abstract":"<p>This is an oscillator with linear interpolation that is capable of morphing"},"Classes/AKMorphingOscillatorAudioUnit.html":{"name":"AKMorphingOscillatorAudioUnit"},"Classes/AKMorphingOscillatorBank.html":{"name":"AKMorphingOscillatorBank","abstract":"<p>This is an oscillator with linear interpolation that is capable of morphing"},"Classes/AKOscillator.html":{"name":"AKOscillator","abstract":"<p>Reads from the table sequentially and repeatedly at given frequency. Linear"},"Classes/AKOscillatorAudioUnit.html":{"name":"AKOscillatorAudioUnit"},"Classes/AKOscillatorBank.html":{"name":"AKOscillatorBank","abstract":"<p>Reads from the table sequentially and repeatedly at given frequency. Linear"},"Classes/AKPhaseDistortionOscillator.html":{"name":"AKPhaseDistortionOscillator","abstract":"<p>Casio-style phase distortion with <q>pivot point</q> on the X axis This module is"},"Classes/AKPhaseDistortionOscillatorAudioUnit.html":{"name":"AKPhaseDistortionOscillatorAudioUnit"},"Classes/AKPhaseDistortionOscillatorBank.html":{"name":"AKPhaseDistortionOscillatorBank","abstract":"<p>Phase Distortion Oscillator Bank</p>"},"Classes/AKPWMOscillator.html":{"name":"AKPWMOscillator","abstract":"<p>Casio-style phase distortion with <q>pivot point</q> on the X axis This module is"},"Classes/AKPWMOscillatorAudioUnit.html":{"name":"AKPWMOscillatorAudioUnit"},"Classes/AKPWMOscillatorBank.html":{"name":"AKPWMOscillatorBank","abstract":"<p>Pulse-Width Modulating Oscillator Bank</p>"},"Classes/AKWhiteNoiseAudioUnit.html#/c:@M@AudioKit@objc(cs)AKWhiteNoiseAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKWhiteNoiseAudioUnit"},"Classes/AKWhiteNoiseAudioUnit.html#/c:@M@AudioKit@objc(cs)AKWhiteNoiseAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKWhiteNoiseAudioUnit"},"Classes/AKWhiteNoiseAudioUnit.html#/c:@M@AudioKit@objc(cs)AKWhiteNoiseAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKWhiteNoiseAudioUnit"},"Classes/AKWhiteNoise.html#/s:8AudioKit12AKWhiteNoiseC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/s:8AudioKit12AKWhiteNoiseC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/s:8AudioKit12AKWhiteNoiseC14amplitudeRangeSNySdGvpZ":{"name":"amplitudeRange","abstract":"<p>Lower and upper bounds for Amplitude</p>","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/s:8AudioKit12AKWhiteNoiseC16defaultAmplitudeSdvpZ":{"name":"defaultAmplitude","abstract":"<p>Initial value for Amplitude</p>","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/c:@M@AudioKit@objc(cs)AKWhiteNoise(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/c:@M@AudioKit@objc(cs)AKWhiteNoise(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude. (Value between 0-1).</p>","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/c:@M@AudioKit@objc(cs)AKWhiteNoise(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/c:@M@AudioKit@objc(cs)AKWhiteNoise(im)initWithAmplitude:":{"name":"init(amplitude:)","abstract":"<p>Initialize this noise node</p>","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/c:@M@AudioKit@objc(cs)AKWhiteNoise(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/c:@M@AudioKit@objc(cs)AKWhiteNoise(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKWhiteNoise"},"Classes/AKPinkNoiseAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPinkNoiseAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKPinkNoiseAudioUnit"},"Classes/AKPinkNoiseAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPinkNoiseAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKPinkNoiseAudioUnit"},"Classes/AKPinkNoiseAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPinkNoiseAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKPinkNoiseAudioUnit"},"Classes/AKPinkNoise.html#/s:8AudioKit11AKPinkNoiseC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/s:8AudioKit11AKPinkNoiseC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/s:8AudioKit11AKPinkNoiseC14amplitudeRangeSNySdGvpZ":{"name":"amplitudeRange","abstract":"<p>Lower and upper bounds for Amplitude</p>","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/s:8AudioKit11AKPinkNoiseC16defaultAmplitudeSdvpZ":{"name":"defaultAmplitude","abstract":"<p>Initial value for Amplitude</p>","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/c:@M@AudioKit@objc(cs)AKPinkNoise(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/c:@M@AudioKit@objc(cs)AKPinkNoise(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude. (Value between 0-1).</p>","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/c:@M@AudioKit@objc(cs)AKPinkNoise(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/c:@M@AudioKit@objc(cs)AKPinkNoise(im)initWithAmplitude:":{"name":"init(amplitude:)","abstract":"<p>Initialize this noise node</p>","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/c:@M@AudioKit@objc(cs)AKPinkNoise(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/c:@M@AudioKit@objc(cs)AKPinkNoise(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPinkNoise"},"Classes/AKBrownianNoiseAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBrownianNoiseAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKBrownianNoiseAudioUnit"},"Classes/AKBrownianNoiseAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBrownianNoiseAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKBrownianNoiseAudioUnit"},"Classes/AKBrownianNoiseAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBrownianNoiseAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKBrownianNoiseAudioUnit"},"Classes/AKBrownianNoise.html#/s:8AudioKit15AKBrownianNoiseC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/s:8AudioKit15AKBrownianNoiseC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/s:8AudioKit15AKBrownianNoiseC14amplitudeRangeSNySdGvpZ":{"name":"amplitudeRange","abstract":"<p>Lower and upper bounds for Amplitude</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/s:8AudioKit15AKBrownianNoiseC16defaultAmplitudeSdvpZ":{"name":"defaultAmplitude","abstract":"<p>Initial value for Amplitude</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/c:@M@AudioKit@objc(cs)AKBrownianNoise(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/c:@M@AudioKit@objc(cs)AKBrownianNoise(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude. (Value between 0-1).</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/c:@M@AudioKit@objc(cs)AKBrownianNoise(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/c:@M@AudioKit@objc(cs)AKBrownianNoise(im)initWithAmplitude:":{"name":"init(amplitude:)","abstract":"<p>Initialize this brown-noise node</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/c:@M@AudioKit@objc(cs)AKBrownianNoise(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/c:@M@AudioKit@objc(cs)AKBrownianNoise(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html":{"name":"AKBrownianNoise","abstract":"<p>Brownian noise generator</p>"},"Classes/AKBrownianNoiseAudioUnit.html":{"name":"AKBrownianNoiseAudioUnit"},"Classes/AKPinkNoise.html":{"name":"AKPinkNoise","abstract":"<p>Faust-based pink noise generator</p>"},"Classes/AKPinkNoiseAudioUnit.html":{"name":"AKPinkNoiseAudioUnit"},"Classes/AKWhiteNoise.html":{"name":"AKWhiteNoise","abstract":"<p>White noise generator</p>"},"Classes/AKWhiteNoiseAudioUnit.html":{"name":"AKWhiteNoiseAudioUnit"},"Classes/AKZitaReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKZitaReverbAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKZitaReverbAudioUnit"},"Classes/AKZitaReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKZitaReverbAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKZitaReverbAudioUnit"},"Classes/AKZitaReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKZitaReverbAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKZitaReverbAudioUnit"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC13predelayRangeSNySdGvpZ":{"name":"predelayRange","abstract":"<p>Lower and upper bounds for Predelay</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC23crossoverFrequencyRangeSNySdGvpZ":{"name":"crossoverFrequencyRange","abstract":"<p>Lower and upper bounds for Crossover Frequency</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC19lowReleaseTimeRangeSNySdGvpZ":{"name":"lowReleaseTimeRange","abstract":"<p>Lower and upper bounds for Low Release Duration</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC19midReleaseTimeRangeSNySdGvpZ":{"name":"midReleaseTimeRange","abstract":"<p>Lower and upper bounds for Mid Release Duration</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC21dampingFrequencyRangeSNySdGvpZ":{"name":"dampingFrequencyRange","abstract":"<p>Lower and upper bounds for Damping Frequency</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC24equalizerFrequency1RangeSNySdGvpZ":{"name":"equalizerFrequency1Range","abstract":"<p>Lower and upper bounds for Equalizer Frequency1</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC20equalizerLevel1RangeSNySdGvpZ":{"name":"equalizerLevel1Range","abstract":"<p>Lower and upper bounds for Equalizer Level1</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC24equalizerFrequency2RangeSNySdGvpZ":{"name":"equalizerFrequency2Range","abstract":"<p>Lower and upper bounds for Equalizer Frequency2</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC20equalizerLevel2RangeSNySdGvpZ":{"name":"equalizerLevel2Range","abstract":"<p>Lower and upper bounds for Equalizer Level2</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC14dryWetMixRangeSNySdGvpZ":{"name":"dryWetMixRange","abstract":"<p>Lower and upper bounds for Dry Wet Mix</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC15defaultPredelaySdvpZ":{"name":"defaultPredelay","abstract":"<p>Initial value for Predelay</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC25defaultCrossoverFrequencySdvpZ":{"name":"defaultCrossoverFrequency","abstract":"<p>Initial value for Crossover Frequency</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC21defaultLowReleaseTimeSdvpZ":{"name":"defaultLowReleaseTime","abstract":"<p>Initial value for Low Release Duration</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC21defaultMidReleaseTimeSdvpZ":{"name":"defaultMidReleaseTime","abstract":"<p>Initial value for Mid Release Duration</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC23defaultDampingFrequencySdvpZ":{"name":"defaultDampingFrequency","abstract":"<p>Initial value for Damping Frequency</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC26defaultEqualizerFrequency1SdvpZ":{"name":"defaultEqualizerFrequency1","abstract":"<p>Initial value for Equalizer Frequency1</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC22defaultEqualizerLevel1SdvpZ":{"name":"defaultEqualizerLevel1","abstract":"<p>Initial value for Equalizer Level1</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC26defaultEqualizerFrequency2SdvpZ":{"name":"defaultEqualizerFrequency2","abstract":"<p>Initial value for Equalizer Frequency2</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC22defaultEqualizerLevel2SdvpZ":{"name":"defaultEqualizerLevel2","abstract":"<p>Initial value for Equalizer Level2</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/s:8AudioKit12AKZitaReverbC16defaultDryWetMixSdvpZ":{"name":"defaultDryWetMix","abstract":"<p>Initial value for Dry Wet Mix</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)predelay":{"name":"predelay","abstract":"<p>Delay in ms before reverberation begins.</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)crossoverFrequency":{"name":"crossoverFrequency","abstract":"<p>Crossover frequency separating low and middle frequencies (Hz).</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)lowReleaseTime":{"name":"lowReleaseTime","abstract":"<p>Time (in seconds) to decay 60db in low-frequency band.</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)midReleaseTime":{"name":"midReleaseTime","abstract":"<p>Time (in seconds) to decay 60db in mid-frequency band.</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)dampingFrequency":{"name":"dampingFrequency","abstract":"<p>Frequency (Hz) at which the high-frequency T60 is half the middle-band&rsquo;s T60.</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)equalizerFrequency1":{"name":"equalizerFrequency1","abstract":"<p>Center frequency of second-order Regalia Mitra peaking equalizer section 1.</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)equalizerLevel1":{"name":"equalizerLevel1","abstract":"<p>Peak level in dB of second-order Regalia-Mitra peaking equalizer section 1</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)equalizerFrequency2":{"name":"equalizerFrequency2","abstract":"<p>Center frequency of second-order Regalia Mitra peaking equalizer section 2.</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)equalizerLevel2":{"name":"equalizerLevel2","abstract":"<p>Peak level in dB of second-order Regalia-Mitra peaking equalizer section 2</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>0 = all dry, 1 = all wet</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(im)init:predelay:crossoverFrequency:lowReleaseTime:midReleaseTime:dampingFrequency:equalizerFrequency1:equalizerLevel1:equalizerFrequency2:equalizerLevel2:dryWetMix:":{"name":"init(_:predelay:crossoverFrequency:lowReleaseTime:midReleaseTime:dampingFrequency:equalizerFrequency1:equalizerLevel1:equalizerFrequency2:equalizerLevel2:dryWetMix:)","abstract":"<p>Initialize this reverb node</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKZitaReverb"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry Wet Mix (CrossFade) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)gain":{"name":"gain","abstract":"<p>Gain (Decibels) ranges from -20 to 20 (Default: 0)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)minDelayTime":{"name":"minDelayTime","abstract":"<p>Min Delay Time (Secs) ranges from 0.0001 to 1.0 (Default: 0.008)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)maxDelayTime":{"name":"maxDelayTime","abstract":"<p>Max Delay Time (Secs) ranges from 0.0001 to 1.0 (Default: 0.050)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)decayTimeAt0Hz":{"name":"decayTimeAt0Hz","abstract":"<p>Decay Time At0 Hz (Secs) ranges from 0.001 to 20.0 (Default: 1.0)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)decayTimeAtNyquist":{"name":"decayTimeAtNyquist","abstract":"<p>Decay Time At Nyquist (Secs) ranges from 0.001 to 20.0 (Default: 0.5)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)randomizeReflections":{"name":"randomizeReflections","abstract":"<p>Randomize Reflections (Integer) ranges from 1 to 1000 (Default: 1)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(im)init:dryWetMix:gain:minDelayTime:maxDelayTime:decayTimeAt0Hz:decayTimeAtNyquist:randomizeReflections:":{"name":"init(_:dryWetMix:gain:minDelayTime:maxDelayTime:decayTimeAt0Hz:decayTimeAtNyquist:randomizeReflections:)","abstract":"<p>Initialize the reverb2 node</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKReverb2"},"Classes/AKReverb.html#/c:@M@AudioKit@objc(cs)AKReverb(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 0.5)</p>","parent_name":"AKReverb"},"Classes/AKReverb.html#/c:@M@AudioKit@objc(cs)AKReverb(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKReverb"},"Classes/AKReverb.html#/c:@M@AudioKit@objc(cs)AKReverb(im)init:dryWetMix:":{"name":"init(_:dryWetMix:)","abstract":"<p>Initialize the reverb node</p>","parent_name":"AKReverb"},"Classes/AKReverb.html#/s:8AudioKit8AKReverbC17loadFactoryPresetyySo017AVAudioUnitReverbF0VF":{"name":"loadFactoryPreset(_:)","abstract":"<p>Load an Apple Factory Preset</p>","parent_name":"AKReverb"},"Classes/AKReverb.html#/c:@M@AudioKit@objc(cs)AKReverb(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKReverb"},"Classes/AKReverb.html#/c:@M@AudioKit@objc(cs)AKReverb(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKReverb"},"Classes/AKFlatFrequencyResponseReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverbAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKFlatFrequencyResponseReverbAudioUnit"},"Classes/AKFlatFrequencyResponseReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverbAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKFlatFrequencyResponseReverbAudioUnit"},"Classes/AKFlatFrequencyResponseReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverbAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKFlatFrequencyResponseReverbAudioUnit"},"Classes/AKFlatFrequencyResponseReverb.html#/s:8AudioKit29AKFlatFrequencyResponseReverbC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/s:8AudioKit29AKFlatFrequencyResponseReverbC20ComponentDescriptionSo0agH0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/s:8AudioKit29AKFlatFrequencyResponseReverbC19reverbDurationRangeSNySiGvpZ":{"name":"reverbDurationRange","abstract":"<p>Lower and upper bounds for Reverb Duration</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/s:8AudioKit29AKFlatFrequencyResponseReverbC07defaultF8DurationSdvpZ":{"name":"defaultReverbDuration","abstract":"<p>Initial value for Reverb Duration</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/s:8AudioKit29AKFlatFrequencyResponseReverbC19defaultLoopDurationSdvpZ":{"name":"defaultLoopDuration","abstract":"<p>Initial value for Loop Duration</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverb(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverb(py)reverbDuration":{"name":"reverbDuration","abstract":"<p>The duration in seconds for a signal to decay to 1/1000, or 60dB down from its original amplitude.</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverb(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverb(im)init:reverbDuration:loopDuration:":{"name":"init(_:reverbDuration:loopDuration:)","abstract":"<p>Initialize this reverb node</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverb(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverb(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKConvolution.html#/s:8AudioKit13AKConvolutionC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKConvolution"},"Classes/AKConvolution.html#/s:8AudioKit13AKConvolutionC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKConvolution"},"Classes/AKConvolution.html#/c:@M@AudioKit@objc(cs)AKConvolution(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKConvolution"},"Classes/AKConvolution.html#/c:@M@AudioKit@objc(cs)AKConvolution(im)init:impulseResponseFileURL:partitionLength:":{"name":"init(_:impulseResponseFileURL:partitionLength:)","abstract":"<p>Initialize this convolution node</p>","parent_name":"AKConvolution"},"Classes/AKConvolution.html#/c:@M@AudioKit@objc(cs)AKConvolution(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKConvolution"},"Classes/AKConvolution.html#/c:@M@AudioKit@objc(cs)AKConvolution(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKConvolution"},"Classes/AKCostelloReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKCostelloReverbAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKCostelloReverbAudioUnit"},"Classes/AKCostelloReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKCostelloReverbAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKCostelloReverbAudioUnit"},"Classes/AKCostelloReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKCostelloReverbAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKCostelloReverbAudioUnit"},"Classes/AKCostelloReverb.html#/s:8AudioKit16AKCostelloReverbC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/s:8AudioKit16AKCostelloReverbC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/s:8AudioKit16AKCostelloReverbC13feedbackRangeSNySdGvpZ":{"name":"feedbackRange","abstract":"<p>Lower and upper bounds for Feedback</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/s:8AudioKit16AKCostelloReverbC20cutoffFrequencyRangeSNySdGvpZ":{"name":"cutoffFrequencyRange","abstract":"<p>Lower and upper bounds for Cutoff Frequency</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/s:8AudioKit16AKCostelloReverbC15defaultFeedbackSdvpZ":{"name":"defaultFeedback","abstract":"<p>Initial value for Feedback</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/s:8AudioKit16AKCostelloReverbC22defaultCutoffFrequencySdvpZ":{"name":"defaultCutoffFrequency","abstract":"<p>Initial value for Cutoff Frequency</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(py)feedback":{"name":"feedback","abstract":"<p>Feedback level in the range 0 to 1. 0.6 gives a good small &lsquo;live&rsquo; room sound, 0.8 a small hall, and 0.9 a","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Low-pass cutoff frequency.</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(im)init:feedback:cutoffFrequency:":{"name":"init(_:feedback:cutoffFrequency:)","abstract":"<p>Initialize this reverb node</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/s:8AudioKit16AKCostelloReverbC023presetShortTailCostelloD0yyF":{"name":"presetShortTailCostelloReverb()","abstract":"<p>Short Tail Reverb</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/s:8AudioKit16AKCostelloReverbC032presetLowRingingLongTailCostelloD0yyF":{"name":"presetLowRingingLongTailCostelloReverb()","abstract":"<p>Low Ringing Long Tail Reverb</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/s:8AudioKit16AKCostelloReverbC26printCurrentValuesAsPresetyyF":{"name":"printCurrentValuesAsPreset()","abstract":"<p>Print out current values in case you want to save it as a preset</p>","parent_name":"AKCostelloReverb"},"Classes/AKChowningReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKChowningReverbAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKChowningReverbAudioUnit"},"Classes/AKChowningReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKChowningReverbAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKChowningReverbAudioUnit"},"Classes/AKChowningReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKChowningReverbAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKChowningReverbAudioUnit"},"Classes/AKChowningReverb.html#/s:8AudioKit16AKChowningReverbC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKChowningReverb"},"Classes/AKChowningReverb.html#/s:8AudioKit16AKChowningReverbC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKChowningReverb"},"Classes/AKChowningReverb.html#/c:@M@AudioKit@objc(cs)AKChowningReverb(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKChowningReverb"},"Classes/AKChowningReverb.html#/c:@M@AudioKit@objc(cs)AKChowningReverb(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKChowningReverb"},"Classes/AKChowningReverb.html#/c:@M@AudioKit@objc(cs)AKChowningReverb(im)init:":{"name":"init(_:)","abstract":"<p>Initialize this reverb node</p>","parent_name":"AKChowningReverb"},"Classes/AKChowningReverb.html#/c:@M@AudioKit@objc(cs)AKChowningReverb(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKChowningReverb"},"Classes/AKChowningReverb.html#/c:@M@AudioKit@objc(cs)AKChowningReverb(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKChowningReverb"},"Classes/AKChowningReverb.html":{"name":"AKChowningReverb","abstract":"<p>This is was built using the JC reverb implentation found in FAUST. According"},"Classes/AKChowningReverbAudioUnit.html":{"name":"AKChowningReverbAudioUnit"},"Classes/AKCostelloReverb.html":{"name":"AKCostelloReverb","abstract":"<p>8 delay line stereo FDN reverb, with feedback matrix based upon physical"},"Classes/AKCostelloReverbAudioUnit.html":{"name":"AKCostelloReverbAudioUnit"},"Classes/AKConvolution.html":{"name":"AKConvolution","abstract":"<p>This module will perform partitioned convolution on an input signal using an"},"Classes/AKFlatFrequencyResponseReverb.html":{"name":"AKFlatFrequencyResponseReverb","abstract":"<p>This filter reiterates the input with an echo density determined by loop"},"Classes/AKFlatFrequencyResponseReverbAudioUnit.html":{"name":"AKFlatFrequencyResponseReverbAudioUnit"},"Classes/AKReverb.html":{"name":"AKReverb","abstract":"<p>AudioKit version of Apple&rsquo;s Reverb Audio Unit</p>"},"Classes/AKReverb2.html":{"name":"AKReverb2","abstract":"<p>AudioKit version of Apple&rsquo;s Reverb2 Audio Unit</p>"},"Classes/AKZitaReverb.html":{"name":"AKZitaReverb","abstract":"<p>8 FDN stereo zitareverb algorithm, imported from Faust.</p>"},"Classes/AKZitaReverbAudioUnit.html":{"name":"AKZitaReverbAudioUnit"},"Classes/AKToneComplementFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKToneComplementFilterAudioUnit"},"Classes/AKToneComplementFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKToneComplementFilterAudioUnit"},"Classes/AKToneComplementFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKToneComplementFilterAudioUnit"},"Classes/AKToneComplementFilter.html#/s:8AudioKit22AKToneComplementFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/s:8AudioKit22AKToneComplementFilterC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/s:8AudioKit22AKToneComplementFilterC19halfPowerPointRangeSNySdGvpZ":{"name":"halfPowerPointRange","abstract":"<p>Lower and upper bounds for Half Power Point</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/s:8AudioKit22AKToneComplementFilterC21defaultHalfPowerPointSdvpZ":{"name":"defaultHalfPowerPoint","abstract":"<p>Initial value for Half Power Point</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilter(py)halfPowerPoint":{"name":"halfPowerPoint","abstract":"<p>Half-Power Point in Hertz. Half power is defined as peak power / square root of 2.</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilter(im)init:halfPowerPoint:":{"name":"init(_:halfPowerPoint:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKToneFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKToneFilterAudioUnit"},"Classes/AKToneFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKToneFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKToneFilterAudioUnit"},"Classes/AKToneFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKToneFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKToneFilterAudioUnit"},"Classes/AKToneFilter.html#/s:8AudioKit12AKToneFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/s:8AudioKit12AKToneFilterC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/s:8AudioKit12AKToneFilterC19halfPowerPointRangeSNySdGvpZ":{"name":"halfPowerPointRange","abstract":"<p>Lower and upper bounds for Half Power Point</p>","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/s:8AudioKit12AKToneFilterC21defaultHalfPowerPointSdvpZ":{"name":"defaultHalfPowerPoint","abstract":"<p>Initial value for Half Power Point</p>","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/c:@M@AudioKit@objc(cs)AKToneFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/c:@M@AudioKit@objc(cs)AKToneFilter(py)halfPowerPoint":{"name":"halfPowerPoint","abstract":"<p>The response curve&rsquo;s half-power point, in Hertz. Half power is defined as peak power / root 2.</p>","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/c:@M@AudioKit@objc(cs)AKToneFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/c:@M@AudioKit@objc(cs)AKToneFilter(im)init:halfPowerPoint:":{"name":"init(_:halfPowerPoint:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/c:@M@AudioKit@objc(cs)AKToneFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/c:@M@AudioKit@objc(cs)AKToneFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKToneFilter"},"Classes/AKThreePoleLowpassFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKThreePoleLowpassFilterAudioUnit"},"Classes/AKThreePoleLowpassFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKThreePoleLowpassFilterAudioUnit"},"Classes/AKThreePoleLowpassFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKThreePoleLowpassFilterAudioUnit"},"Classes/AKThreePoleLowpassFilter.html#/s:8AudioKit24AKThreePoleLowpassFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/s:8AudioKit24AKThreePoleLowpassFilterC20ComponentDescriptionSo0agH0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/s:8AudioKit24AKThreePoleLowpassFilterC15distortionRangeSNySdGvpZ":{"name":"distortionRange","abstract":"<p>Lower and upper bounds for Distortion</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/s:8AudioKit24AKThreePoleLowpassFilterC20cutoffFrequencyRangeSNySdGvpZ":{"name":"cutoffFrequencyRange","abstract":"<p>Lower and upper bounds for Cutoff Frequency</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/s:8AudioKit24AKThreePoleLowpassFilterC14resonanceRangeSNySdGvpZ":{"name":"resonanceRange","abstract":"<p>Lower and upper bounds for Resonance</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/s:8AudioKit24AKThreePoleLowpassFilterC17defaultDistortionSdvpZ":{"name":"defaultDistortion","abstract":"<p>Initial value for Distortion</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/s:8AudioKit24AKThreePoleLowpassFilterC22defaultCutoffFrequencySdvpZ":{"name":"defaultCutoffFrequency","abstract":"<p>Initial value for Cutoff Frequency</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/s:8AudioKit24AKThreePoleLowpassFilterC16defaultResonanceSdvpZ":{"name":"defaultResonance","abstract":"<p>Initial value for Resonance</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(py)distortion":{"name":"distortion","abstract":"<p>Distortion amount.  Zero gives a clean output. Greater than zero adds tanh distortion controlled by the filter parameters, in such a way that both low cutoff and high resonance increase the distortion amount.</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Filter cutoff frequency in Hertz.</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(py)resonance":{"name":"resonance","abstract":"<p>Resonance. Usually a value in the range 0-1. A value of 1.0 will self oscillate at the cutoff frequency. Values slightly greater than 1 are possible for more sustained oscillation and an “overdrive” effect.</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(im)init:distortion:cutoffFrequency:resonance:":{"name":"init(_:distortion:cutoffFrequency:resonance:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKStringResonatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKStringResonatorAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKStringResonatorAudioUnit"},"Classes/AKStringResonatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKStringResonatorAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKStringResonatorAudioUnit"},"Classes/AKStringResonatorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKStringResonatorAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKStringResonatorAudioUnit"},"Classes/AKStringResonator.html#/s:8AudioKit17AKStringResonatorC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/s:8AudioKit17AKStringResonatorC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/s:8AudioKit17AKStringResonatorC25fundamentalFrequencyRangeSNySdGvpZ":{"name":"fundamentalFrequencyRange","abstract":"<p>Lower and upper bounds for Fundamental Frequency</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/s:8AudioKit17AKStringResonatorC13feedbackRangeSNySdGvpZ":{"name":"feedbackRange","abstract":"<p>Lower and upper bounds for Feedback</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/s:8AudioKit17AKStringResonatorC27defaultFundamentalFrequencySdvpZ":{"name":"defaultFundamentalFrequency","abstract":"<p>Initial value for Fundamental Frequency</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/s:8AudioKit17AKStringResonatorC15defaultFeedbackSdvpZ":{"name":"defaultFeedback","abstract":"<p>Initial value for Feedback</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(py)fundamentalFrequency":{"name":"fundamentalFrequency","abstract":"<p>Fundamental frequency of string.</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(py)feedback":{"name":"feedback","abstract":"<p>Feedback amount (value between 0-1). A value close to 1 creates a slower decay and a more pronounced resonance. Small values may leave the input signal unaffected. Depending on the filter frequency, typical values are &gt; .9.</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(im)init:fundamentalFrequency:feedback:":{"name":"init(_:fundamentalFrequency:feedback:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKStringResonator"},"Classes/AKRolandTB303FilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKRolandTB303FilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKRolandTB303FilterAudioUnit"},"Classes/AKRolandTB303FilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKRolandTB303FilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKRolandTB303FilterAudioUnit"},"Classes/AKRolandTB303FilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKRolandTB303FilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKRolandTB303FilterAudioUnit"},"Classes/AKRolandTB303Filter.html#/s:8AudioKit19AKRolandTB303FilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/s:8AudioKit19AKRolandTB303FilterC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/s:8AudioKit19AKRolandTB303FilterC20cutoffFrequencyRangeSNySdGvpZ":{"name":"cutoffFrequencyRange","abstract":"<p>Lower and upper bounds for Cutoff Frequency</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/s:8AudioKit19AKRolandTB303FilterC14resonanceRangeSNySdGvpZ":{"name":"resonanceRange","abstract":"<p>Lower and upper bounds for Resonance</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/s:8AudioKit19AKRolandTB303FilterC15distortionRangeSNySdGvpZ":{"name":"distortionRange","abstract":"<p>Lower and upper bounds for Distortion</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/s:8AudioKit19AKRolandTB303FilterC23resonanceAsymmetryRangeSNySdGvpZ":{"name":"resonanceAsymmetryRange","abstract":"<p>Lower and upper bounds for Resonance Asymmetry</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/s:8AudioKit19AKRolandTB303FilterC22defaultCutoffFrequencySdvpZ":{"name":"defaultCutoffFrequency","abstract":"<p>Initial value for Cutoff Frequency</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/s:8AudioKit19AKRolandTB303FilterC16defaultResonanceSdvpZ":{"name":"defaultResonance","abstract":"<p>Initial value for Resonance</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/s:8AudioKit19AKRolandTB303FilterC17defaultDistortionSdvpZ":{"name":"defaultDistortion","abstract":"<p>Initial value for Distortion</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/s:8AudioKit19AKRolandTB303FilterC25defaultResonanceAsymmetrySdvpZ":{"name":"defaultResonanceAsymmetry","abstract":"<p>Initial value for Resonance Asymmetry</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Cutoff frequency. (in Hertz)</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(py)resonance":{"name":"resonance","abstract":"<p>Resonance, generally &lt; 1, but not limited to it. Higher than 1 resonance values might cause aliasing, analogue synths generally allow resonances to be above 1.</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(py)distortion":{"name":"distortion","abstract":"<p>Distortion. Value is typically 2.0; deviation from this can cause stability issues.</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(py)resonanceAsymmetry":{"name":"resonanceAsymmetry","abstract":"<p>Asymmetry of resonance. Value is between 0-1</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(im)init:cutoffFrequency:resonance:distortion:resonanceAsymmetry:":{"name":"init(_:cutoffFrequency:resonance:distortion:resonanceAsymmetry:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKResonantFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKResonantFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKResonantFilterAudioUnit"},"Classes/AKResonantFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKResonantFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKResonantFilterAudioUnit"},"Classes/AKResonantFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKResonantFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKResonantFilterAudioUnit"},"Classes/AKResonantFilter.html#/s:8AudioKit16AKResonantFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/s:8AudioKit16AKResonantFilterC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/s:8AudioKit16AKResonantFilterC14frequencyRangeSNySdGvpZ":{"name":"frequencyRange","abstract":"<p>Lower and upper bounds for Frequency</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/s:8AudioKit16AKResonantFilterC14bandwidthRangeSNySdGvpZ":{"name":"bandwidthRange","abstract":"<p>Lower and upper bounds for Bandwidth</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/s:8AudioKit16AKResonantFilterC16defaultFrequencySdvpZ":{"name":"defaultFrequency","abstract":"<p>Initial value for Frequency</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/s:8AudioKit16AKResonantFilterC16defaultBandwidthSdvpZ":{"name":"defaultBandwidth","abstract":"<p>Initial value for Bandwidth</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(py)frequency":{"name":"frequency","abstract":"<p>Center frequency of the filter, or frequency position of the peak response.</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(py)bandwidth":{"name":"bandwidth","abstract":"<p>Bandwidth of the filter.</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(im)init:frequency:bandwidth:":{"name":"init(_:frequency:bandwidth:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKResonantFilter"},"Classes/AKPeakingParametricEqualizerFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKPeakingParametricEqualizerFilterAudioUnit"},"Classes/AKPeakingParametricEqualizerFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKPeakingParametricEqualizerFilterAudioUnit"},"Classes/AKPeakingParametricEqualizerFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKPeakingParametricEqualizerFilterAudioUnit"},"Classes/AKPeakingParametricEqualizerFilter.html#/s:8AudioKit34AKPeakingParametricEqualizerFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/s:8AudioKit34AKPeakingParametricEqualizerFilterC20ComponentDescriptionSo0agH0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/s:8AudioKit34AKPeakingParametricEqualizerFilterC20centerFrequencyRangeSNySdGvpZ":{"name":"centerFrequencyRange","abstract":"<p>Lower and upper bounds for Center Frequency</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/s:8AudioKit34AKPeakingParametricEqualizerFilterC9gainRangeSNySdGvpZ":{"name":"gainRange","abstract":"<p>Lower and upper bounds for Gain</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/s:8AudioKit34AKPeakingParametricEqualizerFilterC6qRangeSNySdGvpZ":{"name":"qRange","abstract":"<p>Lower and upper bounds for Q</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/s:8AudioKit34AKPeakingParametricEqualizerFilterC22defaultCenterFrequencySdvpZ":{"name":"defaultCenterFrequency","abstract":"<p>Initial value for Center Frequency</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/s:8AudioKit34AKPeakingParametricEqualizerFilterC11defaultGainSdvpZ":{"name":"defaultGain","abstract":"<p>Initial value for Gain</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/s:8AudioKit34AKPeakingParametricEqualizerFilterC8defaultQSdvpZ":{"name":"defaultQ","abstract":"<p>Initial value for Q</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(py)centerFrequency":{"name":"centerFrequency","abstract":"<p>Center frequency.</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(py)gain":{"name":"gain","abstract":"<p>Amount at which the center frequency value shall be increased or decreased. A value of 1 is a flat response.</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(py)q":{"name":"q","abstract":"<p>Q of the filter. sqrt(0.5) is no resonance.</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(im)init:centerFrequency:gain:q:":{"name":"init(_:centerFrequency:gain:q:)","abstract":"<p>Initialize this equalizer node</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKMoogLadderAudioUnit.html#/c:@M@AudioKit@objc(cs)AKMoogLadderAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKMoogLadderAudioUnit"},"Classes/AKMoogLadderAudioUnit.html#/c:@M@AudioKit@objc(cs)AKMoogLadderAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKMoogLadderAudioUnit"},"Classes/AKMoogLadderAudioUnit.html#/c:@M@AudioKit@objc(cs)AKMoogLadderAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKMoogLadderAudioUnit"},"Classes/AKMoogLadder.html#/s:8AudioKit12AKMoogLadderC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/s:8AudioKit12AKMoogLadderC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/s:8AudioKit12AKMoogLadderC20cutoffFrequencyRangeSNySdGvpZ":{"name":"cutoffFrequencyRange","abstract":"<p>Lower and upper bounds for Cutoff Frequency</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/s:8AudioKit12AKMoogLadderC14resonanceRangeSNySdGvpZ":{"name":"resonanceRange","abstract":"<p>Lower and upper bounds for Resonance</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/s:8AudioKit12AKMoogLadderC22defaultCutoffFrequencySdvpZ":{"name":"defaultCutoffFrequency","abstract":"<p>Initial value for Cutoff Frequency</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/s:8AudioKit12AKMoogLadderC16defaultResonanceSdvpZ":{"name":"defaultResonance","abstract":"<p>Initial value for Resonance</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Filter cutoff frequency.</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(py)resonance":{"name":"resonance","abstract":"<p>Resonance, generally &lt; 1, but not limited to it. Higher than 1 resonance values might cause aliasing, analogue synths generally allow resonances to be above 1.</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(im)init:cutoffFrequency:resonance:":{"name":"init(_:cutoffFrequency:resonance:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/s:8AudioKit12AKMoogLadderC013presetFogMoogD0yyF":{"name":"presetFogMoogLadder()","abstract":"<p>Blurry, foggy filter</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/s:8AudioKit12AKMoogLadderC019presetDullNoiseMoogD0yyF":{"name":"presetDullNoiseMoogLadder()","abstract":"<p>Dull noise filter</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/s:8AudioKit12AKMoogLadderC26printCurrentValuesAsPresetyyF":{"name":"printCurrentValuesAsPreset()","abstract":"<p>Print out current values in case you want to save it as a preset</p>","parent_name":"AKMoogLadder"},"Classes/AKModalResonanceFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKModalResonanceFilterAudioUnit"},"Classes/AKModalResonanceFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKModalResonanceFilterAudioUnit"},"Classes/AKModalResonanceFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKModalResonanceFilterAudioUnit"},"Classes/AKModalResonanceFilter.html#/s:8AudioKit22AKModalResonanceFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/s:8AudioKit22AKModalResonanceFilterC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/s:8AudioKit22AKModalResonanceFilterC14frequencyRangeSNySdGvpZ":{"name":"frequencyRange","abstract":"<p>Lower and upper bounds for Frequency</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/s:8AudioKit22AKModalResonanceFilterC18qualityFactorRangeSNySdGvpZ":{"name":"qualityFactorRange","abstract":"<p>Lower and upper bounds for Quality Factor</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/s:8AudioKit22AKModalResonanceFilterC16defaultFrequencySdvpZ":{"name":"defaultFrequency","abstract":"<p>Initial value for Frequency</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/s:8AudioKit22AKModalResonanceFilterC20defaultQualityFactorSdvpZ":{"name":"defaultQualityFactor","abstract":"<p>Initial value for Quality Factor</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(py)frequency":{"name":"frequency","abstract":"<p>Resonant frequency of the filter.</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(py)qualityFactor":{"name":"qualityFactor","abstract":"<p>Quality factor of the filter. Roughly equal to Q/frequency.</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(im)init:frequency:qualityFactor:":{"name":"init(_:frequency:qualityFactor:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKLowShelfParametricEqualizerFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKLowShelfParametricEqualizerFilterAudioUnit"},"Classes/AKLowShelfParametricEqualizerFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKLowShelfParametricEqualizerFilterAudioUnit"},"Classes/AKLowShelfParametricEqualizerFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKLowShelfParametricEqualizerFilterAudioUnit"},"Classes/AKLowShelfParametricEqualizerFilter.html#/s:8AudioKit35AKLowShelfParametricEqualizerFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/s:8AudioKit35AKLowShelfParametricEqualizerFilterC20ComponentDescriptionSo0ahI0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/s:8AudioKit35AKLowShelfParametricEqualizerFilterC20cornerFrequencyRangeSNySdGvpZ":{"name":"cornerFrequencyRange","abstract":"<p>Lower and upper bounds for Corner Frequency</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/s:8AudioKit35AKLowShelfParametricEqualizerFilterC9gainRangeSNySdGvpZ":{"name":"gainRange","abstract":"<p>Lower and upper bounds for Gain</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/s:8AudioKit35AKLowShelfParametricEqualizerFilterC6qRangeSNySdGvpZ":{"name":"qRange","abstract":"<p>Lower and upper bounds for Q</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/s:8AudioKit35AKLowShelfParametricEqualizerFilterC22defaultCornerFrequencySdvpZ":{"name":"defaultCornerFrequency","abstract":"<p>Initial value for Corner Frequency</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/s:8AudioKit35AKLowShelfParametricEqualizerFilterC11defaultGainSdvpZ":{"name":"defaultGain","abstract":"<p>Initial value for Gain</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/s:8AudioKit35AKLowShelfParametricEqualizerFilterC8defaultQSdvpZ":{"name":"defaultQ","abstract":"<p>Initial value for Q</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(py)cornerFrequency":{"name":"cornerFrequency","abstract":"<p>Corner frequency.</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(py)gain":{"name":"gain","abstract":"<p>Amount at which the corner frequency value shall be increased or decreased. A value of 1 is a flat response.</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(py)q":{"name":"q","abstract":"<p>Q of the filter. sqrt(0.5) is no resonance.</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(im)init:cornerFrequency:gain:q:":{"name":"init(_:cornerFrequency:gain:q:)","abstract":"<p>Initialize this equalizer node</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfFilter.html#/s:8AudioKit16AKLowShelfFilterC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Cutoff Frequency (Hz) ranges from 10 to 200 (Default: 80)</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(py)gain":{"name":"gain","abstract":"<p>Gain (dB) ranges from -40 to 40 (Default: 0)</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 1)</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(im)init:cutoffFrequency:gain:":{"name":"init(_:cutoffFrequency:gain:)","abstract":"<p>Initialize the low shelf filter node</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/s:8AudioKit7AKInputP9inputNodeSo07AVAudioE0Cvp":{"name":"inputNode","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowPassFilter.html#/s:8AudioKit15AKLowPassFilterC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Cutoff Frequency (Hz) ranges from 10 to 22050 (Default: 6900)</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(py)resonance":{"name":"resonance","abstract":"<p>Resonance (dB) ranges from -20 to 40 (Default: 0)</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 1)</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(im)init:cutoffFrequency:resonance:":{"name":"init(_:cutoffFrequency:resonance:)","abstract":"<p>Initialize the low pass filter node</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/s:8AudioKit7AKInputP9inputNodeSo07AVAudioE0Cvp":{"name":"inputNode","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassButterworthFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKLowPassButterworthFilterAudioUnit"},"Classes/AKLowPassButterworthFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKLowPassButterworthFilterAudioUnit"},"Classes/AKLowPassButterworthFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKLowPassButterworthFilterAudioUnit"},"Classes/AKLowPassButterworthFilter.html#/s:8AudioKit26AKLowPassButterworthFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/s:8AudioKit26AKLowPassButterworthFilterC20ComponentDescriptionSo0agH0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/s:8AudioKit26AKLowPassButterworthFilterC20cutoffFrequencyRangeSNySdGvpZ":{"name":"cutoffFrequencyRange","abstract":"<p>Lower and upper bounds for Cutoff Frequency</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/s:8AudioKit26AKLowPassButterworthFilterC22defaultCutoffFrequencySdvpZ":{"name":"defaultCutoffFrequency","abstract":"<p>Initial value for Cutoff Frequency</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Cutoff frequency. (in Hertz)</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilter(im)init:cutoffFrequency:":{"name":"init(_:cutoffFrequency:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKKorgLowPassFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKKorgLowPassFilterAudioUnit"},"Classes/AKKorgLowPassFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKKorgLowPassFilterAudioUnit"},"Classes/AKKorgLowPassFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKKorgLowPassFilterAudioUnit"},"Classes/AKKorgLowPassFilter.html#/s:8AudioKit19AKKorgLowPassFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/s:8AudioKit19AKKorgLowPassFilterC20ComponentDescriptionSo0agH0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/s:8AudioKit19AKKorgLowPassFilterC20cutoffFrequencyRangeSNySdGvpZ":{"name":"cutoffFrequencyRange","abstract":"<p>Lower and upper bounds for Cutoff Frequency</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/s:8AudioKit19AKKorgLowPassFilterC14resonanceRangeSNySdGvpZ":{"name":"resonanceRange","abstract":"<p>Lower and upper bounds for Resonance</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/s:8AudioKit19AKKorgLowPassFilterC15saturationRangeSNySdGvpZ":{"name":"saturationRange","abstract":"<p>Lower and upper bounds for Saturation</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/s:8AudioKit19AKKorgLowPassFilterC22defaultCutoffFrequencySdvpZ":{"name":"defaultCutoffFrequency","abstract":"<p>Initial value for Cutoff Frequency</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/s:8AudioKit19AKKorgLowPassFilterC16defaultResonanceSdvpZ":{"name":"defaultResonance","abstract":"<p>Initial value for Resonance</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/s:8AudioKit19AKKorgLowPassFilterC17defaultSaturationSdvpZ":{"name":"defaultSaturation","abstract":"<p>Initial value for Saturation</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Filter cutoff</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(py)resonance":{"name":"resonance","abstract":"<p>Filter resonance (should be between 0-2)</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(py)saturation":{"name":"saturation","abstract":"<p>Filter saturation.</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(im)init:cutoffFrequency:resonance:saturation:":{"name":"init(_:cutoffFrequency:resonance:saturation:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKHighShelfParametricEqualizerFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKHighShelfParametricEqualizerFilterAudioUnit"},"Classes/AKHighShelfParametricEqualizerFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKHighShelfParametricEqualizerFilterAudioUnit"},"Classes/AKHighShelfParametricEqualizerFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKHighShelfParametricEqualizerFilterAudioUnit"},"Classes/AKHighShelfParametricEqualizerFilter.html#/s:8AudioKit36AKHighShelfParametricEqualizerFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/s:8AudioKit36AKHighShelfParametricEqualizerFilterC20ComponentDescriptionSo0ahI0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/s:8AudioKit36AKHighShelfParametricEqualizerFilterC20centerFrequencyRangeSNySdGvpZ":{"name":"centerFrequencyRange","abstract":"<p>Lower and upper bounds for Center Frequency</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/s:8AudioKit36AKHighShelfParametricEqualizerFilterC9gainRangeSNySdGvpZ":{"name":"gainRange","abstract":"<p>Lower and upper bounds for Gain</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/s:8AudioKit36AKHighShelfParametricEqualizerFilterC6qRangeSNySdGvpZ":{"name":"qRange","abstract":"<p>Lower and upper bounds for Q</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/s:8AudioKit36AKHighShelfParametricEqualizerFilterC22defaultCenterFrequencySdvpZ":{"name":"defaultCenterFrequency","abstract":"<p>Initial value for Center Frequency</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/s:8AudioKit36AKHighShelfParametricEqualizerFilterC11defaultGainSdvpZ":{"name":"defaultGain","abstract":"<p>Initial value for Gain</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/s:8AudioKit36AKHighShelfParametricEqualizerFilterC8defaultQSdvpZ":{"name":"defaultQ","abstract":"<p>Initial value for Q</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(py)centerFrequency":{"name":"centerFrequency","abstract":"<p>Corner frequency.</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(py)gain":{"name":"gain","abstract":"<p>Amount at which the corner frequency value shall be increased or decreased. A value of 1 is a flat response.</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(py)q":{"name":"q","abstract":"<p>Q of the filter. sqrt(0.5) is no resonance.</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(im)init:centerFrequency:gain:q:":{"name":"init(_:centerFrequency:gain:q:)","abstract":"<p>Initialize this equalizer node</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfFilter.html#/s:8AudioKit17AKHighShelfFilterC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Cut Off Frequency (Hz) ranges from 10000 to 22050 (Default: 10000)</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(py)gain":{"name":"gain","abstract":"<p>Gain (dB) ranges from -40 to 40 (Default: 0)</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 1)</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(im)init:cutOffFrequency:gain:":{"name":"init(_:cutOffFrequency:gain:)","abstract":"<p>Initialize the high shelf filter node</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/s:8AudioKit7AKInputP9inputNodeSo07AVAudioE0Cvp":{"name":"inputNode","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighPassFilter.html#/s:8AudioKit16AKHighPassFilterC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Cutoff Frequency (Hz) ranges from 10 to 22050 (Default: 6900)</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(py)resonance":{"name":"resonance","abstract":"<p>Resonance (dB) ranges from -20 to 40 (Default: 0)</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default: 1)</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(im)init:cutoffFrequency:resonance:":{"name":"init(_:cutoffFrequency:resonance:)","abstract":"<p>Initialize the high pass filter node</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/s:8AudioKit7AKInputP9inputNodeSo07AVAudioE0Cvp":{"name":"inputNode","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassButterworthFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKHighPassButterworthFilterAudioUnit"},"Classes/AKHighPassButterworthFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKHighPassButterworthFilterAudioUnit"},"Classes/AKHighPassButterworthFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKHighPassButterworthFilterAudioUnit"},"Classes/AKHighPassButterworthFilter.html#/s:8AudioKit27AKHighPassButterworthFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/s:8AudioKit27AKHighPassButterworthFilterC20ComponentDescriptionSo0agH0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/s:8AudioKit27AKHighPassButterworthFilterC20cutoffFrequencyRangeSNySdGvpZ":{"name":"cutoffFrequencyRange","abstract":"<p>Lower and upper bounds for Cutoff Frequency</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/s:8AudioKit27AKHighPassButterworthFilterC22defaultCutoffFrequencySdvpZ":{"name":"defaultCutoffFrequency","abstract":"<p>Initial value for Cutoff Frequency</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Cutoff frequency. (in Hertz)</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilter(im)init:cutoffFrequency:":{"name":"init(_:cutoffFrequency:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKFormantFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFormantFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKFormantFilterAudioUnit"},"Classes/AKFormantFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFormantFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKFormantFilterAudioUnit"},"Classes/AKFormantFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFormantFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKFormantFilterAudioUnit"},"Classes/AKFormantFilter.html#/s:8AudioKit15AKFormantFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/s:8AudioKit15AKFormantFilterC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/s:8AudioKit15AKFormantFilterC20centerFrequencyRangeSNySdGvpZ":{"name":"centerFrequencyRange","abstract":"<p>Lower and upper bounds for Center Frequency</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/s:8AudioKit15AKFormantFilterC19attackDurationRangeSNySdGvpZ":{"name":"attackDurationRange","abstract":"<p>Lower and upper bounds for Attack Duration</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/s:8AudioKit15AKFormantFilterC18decayDurationRangeSNySdGvpZ":{"name":"decayDurationRange","abstract":"<p>Lower and upper bounds for Decay Duration</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/s:8AudioKit15AKFormantFilterC22defaultCenterFrequencySdvpZ":{"name":"defaultCenterFrequency","abstract":"<p>Initial value for Center Frequency</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/s:8AudioKit15AKFormantFilterC21defaultAttackDurationSdvpZ":{"name":"defaultAttackDuration","abstract":"<p>Initial value for Attack Duration</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/s:8AudioKit15AKFormantFilterC20defaultDecayDurationSdvpZ":{"name":"defaultDecayDuration","abstract":"<p>Initial value for Decay Duration</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(py)centerFrequency":{"name":"centerFrequency","abstract":"<p>Center frequency.</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(py)attackDuration":{"name":"attackDuration","abstract":"<p>Impulse response attack duration (in seconds).</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(py)decayDuration":{"name":"decayDuration","abstract":"<p>Impulse reponse decay duration (in seconds)</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(im)init:centerFrequency:attackDuration:decayDuration:":{"name":"init(_:centerFrequency:attackDuration:decayDuration:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKFormantFilter"},"Classes/AKEqualizerFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKEqualizerFilterAudioUnit"},"Classes/AKEqualizerFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKEqualizerFilterAudioUnit"},"Classes/AKEqualizerFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKEqualizerFilterAudioUnit"},"Classes/AKEqualizerFilter.html#/s:8AudioKit17AKEqualizerFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/s:8AudioKit17AKEqualizerFilterC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/s:8AudioKit17AKEqualizerFilterC20centerFrequencyRangeSNySdGvpZ":{"name":"centerFrequencyRange","abstract":"<p>Lower and upper bounds for Center Frequency</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/s:8AudioKit17AKEqualizerFilterC14bandwidthRangeSNySdGvpZ":{"name":"bandwidthRange","abstract":"<p>Lower and upper bounds for Bandwidth</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/s:8AudioKit17AKEqualizerFilterC9gainRangeSNySdGvpZ":{"name":"gainRange","abstract":"<p>Lower and upper bounds for Gain</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/s:8AudioKit17AKEqualizerFilterC22defaultCenterFrequencySdvpZ":{"name":"defaultCenterFrequency","abstract":"<p>Initial value for Center Frequency</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/s:8AudioKit17AKEqualizerFilterC16defaultBandwidthSdvpZ":{"name":"defaultBandwidth","abstract":"<p>Initial value for Bandwidth</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/s:8AudioKit17AKEqualizerFilterC11defaultGainSdvpZ":{"name":"defaultGain","abstract":"<p>Initial value for Gain</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(py)centerFrequency":{"name":"centerFrequency","abstract":"<p>Center frequency. (in Hertz)</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(py)bandwidth":{"name":"bandwidth","abstract":"<p>The peak/notch bandwidth in Hertz</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(py)gain":{"name":"gain","abstract":"<p>The peak/notch gain</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(im)init:centerFrequency:bandwidth:gain:":{"name":"init(_:centerFrequency:bandwidth:gain:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKEqualizerFilter"},"Classes/AKDCBlockAudioUnit.html#/c:@M@AudioKit@objc(cs)AKDCBlockAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKDCBlockAudioUnit"},"Classes/AKDCBlockAudioUnit.html#/c:@M@AudioKit@objc(cs)AKDCBlockAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKDCBlockAudioUnit"},"Classes/AKDCBlockAudioUnit.html#/c:@M@AudioKit@objc(cs)AKDCBlockAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKDCBlockAudioUnit"},"Classes/AKDCBlock.html#/s:8AudioKit9AKDCBlockC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKDCBlock"},"Classes/AKDCBlock.html#/s:8AudioKit9AKDCBlockC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKDCBlock"},"Classes/AKDCBlock.html#/c:@M@AudioKit@objc(cs)AKDCBlock(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKDCBlock"},"Classes/AKDCBlock.html#/c:@M@AudioKit@objc(cs)AKDCBlock(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDCBlock"},"Classes/AKDCBlock.html#/c:@M@AudioKit@objc(cs)AKDCBlock(im)init:":{"name":"init(_:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKDCBlock"},"Classes/AKDCBlock.html#/c:@M@AudioKit@objc(cs)AKDCBlock(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDCBlock"},"Classes/AKDCBlock.html#/c:@M@AudioKit@objc(cs)AKDCBlock(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDCBlock"},"Classes/AKCombFilterReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverbAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKCombFilterReverbAudioUnit"},"Classes/AKCombFilterReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverbAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKCombFilterReverbAudioUnit"},"Classes/AKCombFilterReverbAudioUnit.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverbAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKCombFilterReverbAudioUnit"},"Classes/AKCombFilterReverb.html#/s:8AudioKit18AKCombFilterReverbC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKCombFilterReverb"},"Classes/AKCombFilterReverb.html#/s:8AudioKit18AKCombFilterReverbC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKCombFilterReverb"},"Classes/AKCombFilterReverb.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverb(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKCombFilterReverb"},"Classes/AKCombFilterReverb.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverb(py)reverbDuration":{"name":"reverbDuration","abstract":"<p>The time in seconds for a signal to decay to 1/1000, or 60dB from its original amplitude. (aka RT-60).</p>","parent_name":"AKCombFilterReverb"},"Classes/AKCombFilterReverb.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverb(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKCombFilterReverb"},"Classes/AKCombFilterReverb.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverb(im)init:reverbDuration:loopDuration:":{"name":"init(_:reverbDuration:loopDuration:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKCombFilterReverb"},"Classes/AKCombFilterReverb.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverb(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKCombFilterReverb"},"Classes/AKCombFilterReverb.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverb(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKCombFilterReverb"},"Classes/AKBandRejectButterworthFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKBandRejectButterworthFilterAudioUnit"},"Classes/AKBandRejectButterworthFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKBandRejectButterworthFilterAudioUnit"},"Classes/AKBandRejectButterworthFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKBandRejectButterworthFilterAudioUnit"},"Classes/AKBandRejectButterworthFilter.html#/s:8AudioKit29AKBandRejectButterworthFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/s:8AudioKit29AKBandRejectButterworthFilterC20ComponentDescriptionSo0agH0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/s:8AudioKit29AKBandRejectButterworthFilterC20centerFrequencyRangeSNySdGvpZ":{"name":"centerFrequencyRange","abstract":"<p>Lower and upper bounds for Center Frequency</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/s:8AudioKit29AKBandRejectButterworthFilterC14bandwidthRangeSNySdGvpZ":{"name":"bandwidthRange","abstract":"<p>Lower and upper bounds for Bandwidth</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/s:8AudioKit29AKBandRejectButterworthFilterC22defaultCenterFrequencySdvpZ":{"name":"defaultCenterFrequency","abstract":"<p>Initial value for Center Frequency</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/s:8AudioKit29AKBandRejectButterworthFilterC16defaultBandwidthSdvpZ":{"name":"defaultBandwidth","abstract":"<p>Initial value for Bandwidth</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(py)centerFrequency":{"name":"centerFrequency","abstract":"<p>Center frequency. (in Hertz)</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(py)bandwidth":{"name":"bandwidth","abstract":"<p>Bandwidth. (in Hertz)</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(im)init:centerFrequency:bandwidth:":{"name":"init(_:centerFrequency:bandwidth:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandPassButterworthFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKBandPassButterworthFilterAudioUnit"},"Classes/AKBandPassButterworthFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKBandPassButterworthFilterAudioUnit"},"Classes/AKBandPassButterworthFilterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKBandPassButterworthFilterAudioUnit"},"Classes/AKBandPassButterworthFilter.html#/s:8AudioKit27AKBandPassButterworthFilterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/s:8AudioKit27AKBandPassButterworthFilterC20ComponentDescriptionSo0agH0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/s:8AudioKit27AKBandPassButterworthFilterC20centerFrequencyRangeSNySdGvpZ":{"name":"centerFrequencyRange","abstract":"<p>Lower and upper bounds for Center Frequency</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/s:8AudioKit27AKBandPassButterworthFilterC14bandwidthRangeSNySdGvpZ":{"name":"bandwidthRange","abstract":"<p>Lower and upper bounds for Bandwidth</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/s:8AudioKit27AKBandPassButterworthFilterC22defaultCenterFrequencySdvpZ":{"name":"defaultCenterFrequency","abstract":"<p>Initial value for Center Frequency</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/s:8AudioKit27AKBandPassButterworthFilterC16defaultBandwidthSdvpZ":{"name":"defaultBandwidth","abstract":"<p>Initial value for Bandwidth</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(py)centerFrequency":{"name":"centerFrequency","abstract":"<p>Center frequency. (in Hertz)</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(py)bandwidth":{"name":"bandwidth","abstract":"<p>Bandwidth. (in Hertz)</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(im)init:centerFrequency:bandwidth:":{"name":"init(_:centerFrequency:bandwidth:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKAutoWahAudioUnit.html#/c:@M@AudioKit@objc(cs)AKAutoWahAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKAutoWahAudioUnit"},"Classes/AKAutoWahAudioUnit.html#/c:@M@AudioKit@objc(cs)AKAutoWahAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKAutoWahAudioUnit"},"Classes/AKAutoWahAudioUnit.html#/c:@M@AudioKit@objc(cs)AKAutoWahAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKAutoWahAudioUnit"},"Classes/AKAutoWah.html#/s:8AudioKit9AKAutoWahC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/s:8AudioKit9AKAutoWahC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/s:8AudioKit9AKAutoWahC8wahRangeSNySdGvpZ":{"name":"wahRange","abstract":"<p>Lower and upper bounds for Wah</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/s:8AudioKit9AKAutoWahC8mixRangeSNySdGvpZ":{"name":"mixRange","abstract":"<p>Lower and upper bounds for Mix</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/s:8AudioKit9AKAutoWahC14amplitudeRangeSNySdGvpZ":{"name":"amplitudeRange","abstract":"<p>Lower and upper bounds for Amplitude</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/s:8AudioKit9AKAutoWahC07defaultD0SdvpZ":{"name":"defaultWah","abstract":"<p>Initial value for Wah</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/s:8AudioKit9AKAutoWahC10defaultMixSdvpZ":{"name":"defaultMix","abstract":"<p>Initial value for Mix</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/s:8AudioKit9AKAutoWahC16defaultAmplitudeSdvpZ":{"name":"defaultAmplitude","abstract":"<p>Initial value for Amplitude</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(py)wah":{"name":"wah","abstract":"<p>Wah Amount</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(py)mix":{"name":"mix","abstract":"<p>Dry/Wet Mix</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(py)amplitude":{"name":"amplitude","abstract":"<p>Overall level</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(im)init:wah:mix:amplitude:":{"name":"init(_:wah:mix:amplitude:)","abstract":"<p>Initialize this autoWah node</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html":{"name":"AKAutoWah","abstract":"<p>An automatic wah effect, ported from Guitarix via Faust.</p>"},"Classes/AKAutoWahAudioUnit.html":{"name":"AKAutoWahAudioUnit"},"Classes/AKBandPassButterworthFilter.html":{"name":"AKBandPassButterworthFilter","abstract":"<p>These filters are Butterworth second-order IIR filters. They offer an almost"},"Classes/AKBandPassButterworthFilterAudioUnit.html":{"name":"AKBandPassButterworthFilterAudioUnit"},"Classes/AKBandRejectButterworthFilter.html":{"name":"AKBandRejectButterworthFilter","abstract":"<p>These filters are Butterworth second-order IIR filters. They offer an almost"},"Classes/AKBandRejectButterworthFilterAudioUnit.html":{"name":"AKBandRejectButterworthFilterAudioUnit"},"Classes/AKCombFilterReverb.html":{"name":"AKCombFilterReverb","abstract":"<p>This filter reiterates input with an echo density determined by"},"Classes/AKCombFilterReverbAudioUnit.html":{"name":"AKCombFilterReverbAudioUnit"},"Classes/AKDCBlock.html":{"name":"AKDCBlock","abstract":"<p>Implements the DC blocking filter Y[i] = X[i] - X[i-1] + (igain * Y[i-1])"},"Classes/AKDCBlockAudioUnit.html":{"name":"AKDCBlockAudioUnit"},"Classes/AKEqualizerFilter.html":{"name":"AKEqualizerFilter","abstract":"<p>A 2nd order tunable equalization filter that provides a peak/notch filter"},"Classes/AKEqualizerFilterAudioUnit.html":{"name":"AKEqualizerFilterAudioUnit"},"Classes/AKFormantFilter.html":{"name":"AKFormantFilter","abstract":"<p>When fed with a pulse train, it will generate a series of overlapping"},"Classes/AKFormantFilterAudioUnit.html":{"name":"AKFormantFilterAudioUnit"},"Classes/AKHighPassButterworthFilter.html":{"name":"AKHighPassButterworthFilter","abstract":"<p>These filters are Butterworth second-order IIR filters. They offer an almost"},"Classes/AKHighPassButterworthFilterAudioUnit.html":{"name":"AKHighPassButterworthFilterAudioUnit"},"Classes/AKHighPassFilter.html":{"name":"AKHighPassFilter","abstract":"<p>AudioKit version of Apple&rsquo;s HighPassFilter Audio Unit</p>"},"Classes/AKHighShelfFilter.html":{"name":"AKHighShelfFilter","abstract":"<p>AudioKit version of Apple&rsquo;s HighShelfFilter Audio Unit</p>"},"Classes/AKHighShelfParametricEqualizerFilter.html":{"name":"AKHighShelfParametricEqualizerFilter","abstract":"<p>This is an implementation of Zoelzer&rsquo;s parametric equalizer filter.</p>"},"Classes/AKHighShelfParametricEqualizerFilterAudioUnit.html":{"name":"AKHighShelfParametricEqualizerFilterAudioUnit"},"Classes/AKKorgLowPassFilter.html":{"name":"AKKorgLowPassFilter","abstract":"<p>Analogue model of the Korg 35 Lowpass Filter</p>"},"Classes/AKKorgLowPassFilterAudioUnit.html":{"name":"AKKorgLowPassFilterAudioUnit"},"Classes/AKLowPassButterworthFilter.html":{"name":"AKLowPassButterworthFilter","abstract":"<p>These filters are Butterworth second-order IIR filters. They offer an almost"},"Classes/AKLowPassButterworthFilterAudioUnit.html":{"name":"AKLowPassButterworthFilterAudioUnit"},"Classes/AKLowPassFilter.html":{"name":"AKLowPassFilter","abstract":"<p>AudioKit version of Apple&rsquo;s LowPassFilter Audio Unit</p>"},"Classes/AKLowShelfFilter.html":{"name":"AKLowShelfFilter","abstract":"<p>AudioKit version of Apple&rsquo;s LowShelfFilter Audio Unit</p>"},"Classes/AKLowShelfParametricEqualizerFilter.html":{"name":"AKLowShelfParametricEqualizerFilter","abstract":"<p>This is an implementation of Zoelzer&rsquo;s parametric equalizer filter.</p>"},"Classes/AKLowShelfParametricEqualizerFilterAudioUnit.html":{"name":"AKLowShelfParametricEqualizerFilterAudioUnit"},"Classes/AKModalResonanceFilter.html":{"name":"AKModalResonanceFilter","abstract":"<p>A modal resonance filter used for modal synthesis. Plucked and bell sounds"},"Classes/AKModalResonanceFilterAudioUnit.html":{"name":"AKModalResonanceFilterAudioUnit"},"Classes/AKMoogLadder.html":{"name":"AKMoogLadder","abstract":"<p>Moog Ladder is an new digital implementation of the Moog ladder filter based"},"Classes/AKMoogLadderAudioUnit.html":{"name":"AKMoogLadderAudioUnit"},"Classes/AKPeakingParametricEqualizerFilter.html":{"name":"AKPeakingParametricEqualizerFilter","abstract":"<p>This is an implementation of Zoelzer&rsquo;s parametric equalizer filter.</p>"},"Classes/AKPeakingParametricEqualizerFilterAudioUnit.html":{"name":"AKPeakingParametricEqualizerFilterAudioUnit"},"Classes/AKResonantFilter.html":{"name":"AKResonantFilter","abstract":"<p>The output for reson appears to be very hot, so take caution when using this"},"Classes/AKResonantFilterAudioUnit.html":{"name":"AKResonantFilterAudioUnit"},"Classes/AKRolandTB303Filter.html":{"name":"AKRolandTB303Filter","abstract":"<p>Emulation of the Roland TB-303 filter</p>"},"Classes/AKRolandTB303FilterAudioUnit.html":{"name":"AKRolandTB303FilterAudioUnit"},"Classes/AKStringResonator.html":{"name":"AKStringResonator","abstract":"<p>AKStringResonator passes the input through a network composed of comb,"},"Classes/AKStringResonatorAudioUnit.html":{"name":"AKStringResonatorAudioUnit"},"Classes/AKThreePoleLowpassFilter.html":{"name":"AKThreePoleLowpassFilter","abstract":"<p>3-pole (18 db/oct slope) Low-Pass filter with resonance and tanh distortion.</p>"},"Classes/AKThreePoleLowpassFilterAudioUnit.html":{"name":"AKThreePoleLowpassFilterAudioUnit"},"Classes/AKToneFilter.html":{"name":"AKToneFilter","abstract":"<p>A first-order recursive low-pass filter with variable frequency response.</p>"},"Classes/AKToneFilterAudioUnit.html":{"name":"AKToneFilterAudioUnit"},"Classes/AKToneComplementFilter.html":{"name":"AKToneComplementFilter","abstract":"<p>A complement to the AKLowPassFilter.</p>"},"Classes/AKToneComplementFilterAudioUnit.html":{"name":"AKToneComplementFilterAudioUnit"},"Classes/AKTremoloAudioUnit.html#/c:@M@AudioKit@objc(cs)AKTremoloAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKTremoloAudioUnit"},"Classes/AKTremoloAudioUnit.html#/c:@M@AudioKit@objc(cs)AKTremoloAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKTremoloAudioUnit"},"Classes/AKTremoloAudioUnit.html#/c:@M@AudioKit@objc(cs)AKTremoloAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKTremoloAudioUnit"},"Classes/AKTremolo.html#/s:8AudioKit9AKTremoloC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/s:8AudioKit9AKTremoloC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(py)frequency":{"name":"frequency","abstract":"<p>Frequency (Hz)</p>","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(py)depth":{"name":"depth","abstract":"<p>Depth</p>","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(im)init:frequency:depth:waveform:":{"name":"init(_:frequency:depth:waveform:)","abstract":"<p>Initialize this tremolo node</p>","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKTremolo"},"Classes/AKAmplitudeEnvelopeAudioUnit.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelopeAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKAmplitudeEnvelopeAudioUnit"},"Classes/AKAmplitudeEnvelopeAudioUnit.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelopeAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKAmplitudeEnvelopeAudioUnit"},"Classes/AKAmplitudeEnvelopeAudioUnit.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelopeAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKAmplitudeEnvelopeAudioUnit"},"Classes/AKAmplitudeEnvelope.html#/s:8AudioKit19AKAmplitudeEnvelopeC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/s:8AudioKit19AKAmplitudeEnvelopeC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack Duration in seconds</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(py)decayDuration":{"name":"decayDuration","abstract":"<p>Decay Duration in seconds</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(py)sustainLevel":{"name":"sustainLevel","abstract":"<p>Sustain Level</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release Duration in seconds</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(im)init:attackDuration:decayDuration:sustainLevel:releaseDuration:":{"name":"init(_:attackDuration:decayDuration:sustainLevel:releaseDuration:)","abstract":"<p>Initialize this envelope node</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html":{"name":"AKAmplitudeEnvelope","abstract":"<p>Triggerable classic ADSR envelope</p>"},"Classes/AKAmplitudeEnvelopeAudioUnit.html":{"name":"AKAmplitudeEnvelopeAudioUnit"},"Classes/AKTremolo.html":{"name":"AKTremolo","abstract":"<p>Table-lookup tremolo with linear interpolation</p>"},"Classes/AKTremoloAudioUnit.html":{"name":"AKTremoloAudioUnit"},"Classes/AKPhaserAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPhaserAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKPhaserAudioUnit"},"Classes/AKPhaserAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPhaserAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKPhaserAudioUnit"},"Classes/AKPhaserAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPhaserAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKPhaserAudioUnit"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC26notchMinimumFrequencyRangeSNySdGvpZ":{"name":"notchMinimumFrequencyRange","abstract":"<p>Lower and upper bounds for Notch Minimum Frequency</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC26notchMaximumFrequencyRangeSNySdGvpZ":{"name":"notchMaximumFrequencyRange","abstract":"<p>Lower and upper bounds for Notch Maximum Frequency</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC15notchWidthRangeSNySdGvpZ":{"name":"notchWidthRange","abstract":"<p>Lower and upper bounds for Notch Width</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC19notchFrequencyRangeSNySdGvpZ":{"name":"notchFrequencyRange","abstract":"<p>Lower and upper bounds for Notch Frequency</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC16vibratoModeRangeSNySdGvpZ":{"name":"vibratoModeRange","abstract":"<p>Lower and upper bounds for Vibrato Mode</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC10depthRangeSNySdGvpZ":{"name":"depthRange","abstract":"<p>Lower and upper bounds for Depth</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC13feedbackRangeSNySdGvpZ":{"name":"feedbackRange","abstract":"<p>Lower and upper bounds for Feedback</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC13invertedRangeSNySdGvpZ":{"name":"invertedRange","abstract":"<p>Lower and upper bounds for Inverted</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC11lfoBPMRangeSNySdGvpZ":{"name":"lfoBPMRange","abstract":"<p>Lower and upper bounds for Lfo Bpm</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC28defaultNotchMinimumFrequencySdvpZ":{"name":"defaultNotchMinimumFrequency","abstract":"<p>Initial value for Notch Minimum Frequency</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC28defaultNotchMaximumFrequencySdvpZ":{"name":"defaultNotchMaximumFrequency","abstract":"<p>Initial value for Notch Maximum Frequency</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC17defaultNotchWidthSdvpZ":{"name":"defaultNotchWidth","abstract":"<p>Initial value for Notch Width</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC21defaultNotchFrequencySdvpZ":{"name":"defaultNotchFrequency","abstract":"<p>Initial value for Notch Frequency</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC18defaultVibratoModeSdvpZ":{"name":"defaultVibratoMode","abstract":"<p>Initial value for Vibrato Mode</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC12defaultDepthSdvpZ":{"name":"defaultDepth","abstract":"<p>Initial value for Depth</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC15defaultFeedbackSdvpZ":{"name":"defaultFeedback","abstract":"<p>Initial value for Feedback</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC15defaultInvertedSdvpZ":{"name":"defaultInverted","abstract":"<p>Initial value for Inverted</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/s:8AudioKit8AKPhaserC13defaultLfoBPMSdvpZ":{"name":"defaultLfoBPM","abstract":"<p>Initial value for Lfo Bpm</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)notchMinimumFrequency":{"name":"notchMinimumFrequency","abstract":"<p>Notch Minimum Frequency</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)notchMaximumFrequency":{"name":"notchMaximumFrequency","abstract":"<p>Notch Maximum Frequency</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)notchWidth":{"name":"notchWidth","abstract":"<p>Between 10 and 5000</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)notchFrequency":{"name":"notchFrequency","abstract":"<p>Between 1.1 and 4</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)vibratoMode":{"name":"vibratoMode","abstract":"<p>Direct or Vibrato (default)</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)depth":{"name":"depth","abstract":"<p>Between 0 and 1</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)feedback":{"name":"feedback","abstract":"<p>Between 0 and 1</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)inverted":{"name":"inverted","abstract":"<p>1 or 0</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)lfoBPM":{"name":"lfoBPM","abstract":"<p>Between 24 and 360</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(im)init:notchMinimumFrequency:notchMaximumFrequency:notchWidth:notchFrequency:vibratoMode:depth:feedback:inverted:lfoBPM:":{"name":"init(_:notchMinimumFrequency:notchMaximumFrequency:notchWidth:notchFrequency:vibratoMode:depth:feedback:inverted:lfoBPM:)","abstract":"<p>Initialize this phaser node</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPhaser"},"Classes/AKFlangerAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFlangerAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKFlangerAudioUnit"},"Classes/AKFlangerAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFlangerAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKFlangerAudioUnit"},"Classes/AKFlangerAudioUnit.html#/c:@M@AudioKit@objc(cs)AKFlangerAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKFlangerAudioUnit"},"Classes/AKFlanger.html#/s:8AudioKit9AKFlangerC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/s:8AudioKit9AKFlangerC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/s:8AudioKit9AKFlangerC14frequencyRangeSNySdGvpZ":{"name":"frequencyRange","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/s:8AudioKit9AKFlangerC10depthRangeSNySdGvpZ":{"name":"depthRange","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/s:8AudioKit9AKFlangerC13feedbackRangeSNySdGvpZ":{"name":"feedbackRange","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/s:8AudioKit9AKFlangerC14dryWetMixRangeSNySdGvpZ":{"name":"dryWetMixRange","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/s:8AudioKit9AKFlangerC16defaultFrequencySdvpZ":{"name":"defaultFrequency","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/s:8AudioKit9AKFlangerC12defaultDepthSdvpZ":{"name":"defaultDepth","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/s:8AudioKit9AKFlangerC15defaultFeedbackSdvpZ":{"name":"defaultFeedback","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/s:8AudioKit9AKFlangerC16defaultDryWetMixSdvpZ":{"name":"defaultDryWetMix","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/c:@M@AudioKit@objc(cs)AKFlanger(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/c:@M@AudioKit@objc(cs)AKFlanger(py)frequency":{"name":"frequency","abstract":"<p>Modulation Frequency (Hz)</p>","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/c:@M@AudioKit@objc(cs)AKFlanger(py)depth":{"name":"depth","abstract":"<p>Modulation Depth (fraction)</p>","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/c:@M@AudioKit@objc(cs)AKFlanger(py)feedback":{"name":"feedback","abstract":"<p>Feedback (fraction)</p>","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/c:@M@AudioKit@objc(cs)AKFlanger(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry Wet Mix (fraction)</p>","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/c:@M@AudioKit@objc(cs)AKFlanger(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/c:@M@AudioKit@objc(cs)AKFlanger(im)init:frequency:depth:feedback:dryWetMix:":{"name":"init(_:frequency:depth:feedback:dryWetMix:)","abstract":"<p>Initialize this flanger node</p>","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/c:@M@AudioKit@objc(cs)AKFlanger(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKFlanger"},"Classes/AKFlanger.html#/c:@M@AudioKit@objc(cs)AKFlanger(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKFlanger"},"Classes/AKChorusAudioUnit.html#/c:@M@AudioKit@objc(cs)AKChorusAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKChorusAudioUnit"},"Classes/AKChorusAudioUnit.html#/c:@M@AudioKit@objc(cs)AKChorusAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKChorusAudioUnit"},"Classes/AKChorusAudioUnit.html#/c:@M@AudioKit@objc(cs)AKChorusAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKChorusAudioUnit"},"Classes/AKChorus.html#/s:8AudioKit8AKChorusC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKChorus"},"Classes/AKChorus.html#/s:8AudioKit8AKChorusC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKChorus"},"Classes/AKChorus.html#/s:8AudioKit8AKChorusC14frequencyRangeSNySdGvpZ":{"name":"frequencyRange","parent_name":"AKChorus"},"Classes/AKChorus.html#/s:8AudioKit8AKChorusC10depthRangeSNySdGvpZ":{"name":"depthRange","parent_name":"AKChorus"},"Classes/AKChorus.html#/s:8AudioKit8AKChorusC13feedbackRangeSNySdGvpZ":{"name":"feedbackRange","parent_name":"AKChorus"},"Classes/AKChorus.html#/s:8AudioKit8AKChorusC14dryWetMixRangeSNySdGvpZ":{"name":"dryWetMixRange","parent_name":"AKChorus"},"Classes/AKChorus.html#/s:8AudioKit8AKChorusC16defaultFrequencySdvpZ":{"name":"defaultFrequency","parent_name":"AKChorus"},"Classes/AKChorus.html#/s:8AudioKit8AKChorusC12defaultDepthSdvpZ":{"name":"defaultDepth","parent_name":"AKChorus"},"Classes/AKChorus.html#/s:8AudioKit8AKChorusC15defaultFeedbackSdvpZ":{"name":"defaultFeedback","parent_name":"AKChorus"},"Classes/AKChorus.html#/s:8AudioKit8AKChorusC16defaultDryWetMixSdvpZ":{"name":"defaultDryWetMix","parent_name":"AKChorus"},"Classes/AKChorus.html#/c:@M@AudioKit@objc(cs)AKChorus(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKChorus"},"Classes/AKChorus.html#/c:@M@AudioKit@objc(cs)AKChorus(py)frequency":{"name":"frequency","abstract":"<p>Modulation Frequency (Hz)</p>","parent_name":"AKChorus"},"Classes/AKChorus.html#/c:@M@AudioKit@objc(cs)AKChorus(py)depth":{"name":"depth","abstract":"<p>Modulation Depth (fraction)</p>","parent_name":"AKChorus"},"Classes/AKChorus.html#/c:@M@AudioKit@objc(cs)AKChorus(py)feedback":{"name":"feedback","abstract":"<p>Feedback (fraction)</p>","parent_name":"AKChorus"},"Classes/AKChorus.html#/c:@M@AudioKit@objc(cs)AKChorus(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry Wet Mix (fraction)</p>","parent_name":"AKChorus"},"Classes/AKChorus.html#/c:@M@AudioKit@objc(cs)AKChorus(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKChorus"},"Classes/AKChorus.html#/c:@M@AudioKit@objc(cs)AKChorus(im)init:frequency:depth:feedback:dryWetMix:":{"name":"init(_:frequency:depth:feedback:dryWetMix:)","abstract":"<p>Initialize this chorus node</p>","parent_name":"AKChorus"},"Classes/AKChorus.html#/c:@M@AudioKit@objc(cs)AKChorus(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKChorus"},"Classes/AKChorus.html#/c:@M@AudioKit@objc(cs)AKChorus(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKChorus"},"Classes/AKChorus.html":{"name":"AKChorus","abstract":"<p>Stereo Chorus</p>"},"Classes/AKChorusAudioUnit.html":{"name":"AKChorusAudioUnit"},"Classes/AKFlanger.html":{"name":"AKFlanger","abstract":"<p>Stereo Flanger</p>"},"Classes/AKFlangerAudioUnit.html":{"name":"AKFlangerAudioUnit"},"Classes/AKPhaser.html":{"name":"AKPhaser","abstract":"<p>A stereo phaser This is a stereo phaser, generated from Faust code taken"},"Classes/AKPhaserAudioUnit.html":{"name":"AKPhaserAudioUnit"},"Classes/AKRhinoGuitarProcessor.html#/s:8AudioKit22AKRhinoGuitarProcessorC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKRhinoGuitarProcessor"},"Classes/AKRhinoGuitarProcessor.html#/s:8AudioKit22AKRhinoGuitarProcessorC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","parent_name":"AKRhinoGuitarProcessor"},"Classes/AKRhinoGuitarProcessor.html#/c:@M@AudioKit@objc(cs)AKRhinoGuitarProcessor(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKRhinoGuitarProcessor"},"Classes/AKRhinoGuitarProcessor.html#/c:@M@AudioKit@objc(cs)AKRhinoGuitarProcessor(py)preGain":{"name":"preGain","abstract":"<p>Determines the amount of gain applied to the signal before processing.</p>","parent_name":"AKRhinoGuitarProcessor"},"Classes/AKRhinoGuitarProcessor.html#/c:@M@AudioKit@objc(cs)AKRhinoGuitarProcessor(py)postGain":{"name":"postGain","abstract":"<p>Gain applied after processing.</p>","parent_name":"AKRhinoGuitarProcessor"},"Classes/AKRhinoGuitarProcessor.html#/c:@M@AudioKit@objc(cs)AKRhinoGuitarProcessor(py)lowGain":{"name":"lowGain","abstract":"<p>Amount of Low frequencies.</p>","parent_name":"AKRhinoGuitarProcessor"},"Classes/AKRhinoGuitarProcessor.html#/c:@M@AudioKit@objc(cs)AKRhinoGuitarProcessor(py)midGain":{"name":"midGain","abstract":"<p>Amount of Middle frequencies.</p>","parent_name":"AKRhinoGuitarProcessor"},"Classes/AKRhinoGuitarProcessor.html#/c:@M@AudioKit@objc(cs)AKRhinoGuitarProcessor(py)highGain":{"name":"highGain","abstract":"<p>Amount of High frequencies.</p>","parent_name":"AKRhinoGuitarProcessor"},"Classes/AKRhinoGuitarProcessor.html#/c:@M@AudioKit@objc(cs)AKRhinoGuitarProcessor(py)distortion":{"name":"distortion","abstract":"<p>Distortion Amount</p>","parent_name":"AKRhinoGuitarProcessor"},"Classes/AKRhinoGuitarProcessor.html#/c:@M@AudioKit@objc(cs)AKRhinoGuitarProcessor(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKRhinoGuitarProcessor"},"Classes/AKRhinoGuitarProcessor.html#/c:@M@AudioKit@objc(cs)AKRhinoGuitarProcessor(im)init:preGain:postGain:lowGain:midGain:highGain:distType:distortion:":{"name":"init(_:preGain:postGain:lowGain:midGain:highGain:distType:distortion:)","abstract":"<p>Initialize this Rhino head and cab simulator node</p>","parent_name":"AKRhinoGuitarProcessor"},"Classes/AKRhinoGuitarProcessor.html#/c:@M@AudioKit@objc(cs)AKRhinoGuitarProcessor(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKRhinoGuitarProcessor"},"Classes/AKRhinoGuitarProcessor.html#/c:@M@AudioKit@objc(cs)AKRhinoGuitarProcessor(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKRhinoGuitarProcessor"},"Classes/AKPitchShifterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPitchShifterAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKPitchShifterAudioUnit"},"Classes/AKPitchShifterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPitchShifterAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKPitchShifterAudioUnit"},"Classes/AKPitchShifterAudioUnit.html#/c:@M@AudioKit@objc(cs)AKPitchShifterAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKPitchShifterAudioUnit"},"Classes/AKPitchShifter.html#/s:8AudioKit14AKPitchShifterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/s:8AudioKit14AKPitchShifterC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/s:8AudioKit14AKPitchShifterC10shiftRangeSNySdGvpZ":{"name":"shiftRange","abstract":"<p>Lower and upper bounds for Shift</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/s:8AudioKit14AKPitchShifterC15windowSizeRangeSNySdGvpZ":{"name":"windowSizeRange","abstract":"<p>Lower and upper bounds for Window Size</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/s:8AudioKit14AKPitchShifterC14crossfadeRangeSNySdGvpZ":{"name":"crossfadeRange","abstract":"<p>Lower and upper bounds for Crossfade</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/s:8AudioKit14AKPitchShifterC12defaultShiftSdvpZ":{"name":"defaultShift","abstract":"<p>Initial value for Shift</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/s:8AudioKit14AKPitchShifterC17defaultWindowSizeSdvpZ":{"name":"defaultWindowSize","abstract":"<p>Initial value for Window Size</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/s:8AudioKit14AKPitchShifterC16defaultCrossfadeSdvpZ":{"name":"defaultCrossfade","abstract":"<p>Initial value for Crossfade</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(py)shift":{"name":"shift","abstract":"<p>Pitch shift (in semitones)</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(py)windowSize":{"name":"windowSize","abstract":"<p>Window size (in samples)</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(py)crossfade":{"name":"crossfade","abstract":"<p>Crossfade (in samples)</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(im)init:shift:windowSize:crossfade:":{"name":"init(_:shift:windowSize:crossfade:)","abstract":"<p>Initialize this pitchshifter node</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPitchShifter"},"Classes/AKOperationEffect.html#/s:8AudioKit17AKOperationEffectC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/s:8AudioKit17AKOperationEffectC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/c:@M@AudioKit@objc(cs)AKOperationEffect(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/c:@M@AudioKit@objc(cs)AKOperationEffect(py)parameters":{"name":"parameters","abstract":"<p>Parameters for changing internal operations</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/s:8AudioKit17AKOperationEffectC_12channelCount10operationsAcA6AKNodeCSg_SiSayAA0C0CGAA17AKStereoOperationC_AKtXEtcfc":{"name":"init(_:channelCount:operations:)","abstract":"<p>Initialize the generator for stereo (2 channels)</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/s:8AudioKit17AKOperationEffectC_9operationAcA6AKNodeCSg_AA19AKComputedParameter_pAA17AKStereoOperationC_SayAA0C0CGtXEtcfc":{"name":"init(_:operation:)","abstract":"<p>Initialize the generator for stereo (2 channels)</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/c:@M@AudioKit@objc(cs)AKOperationEffect(im)init:sporth:customUgens:":{"name":"init(_:sporth:customUgens:)","abstract":"<p>Initialize the effect with an input and a valid Sporth string</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/c:@M@AudioKit@objc(cs)AKOperationEffect(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/c:@M@AudioKit@objc(cs)AKOperationEffect(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html":{"name":"AKOperationEffect","abstract":"<p>Operation-based effect</p>"},"Classes/AKPitchShifter.html":{"name":"AKPitchShifter","abstract":"<p>Faust-based pitch shfiter</p>"},"Classes/AKPitchShifterAudioUnit.html":{"name":"AKPitchShifterAudioUnit"},"Classes/AKRhinoGuitarProcessor.html":{"name":"AKRhinoGuitarProcessor","abstract":"<p>Guitar head and cab simulator.</p>"},"Classes/AKPeakLimiter.html#/s:8AudioKit13AKPeakLimiterC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack Duration (Secs) ranges from 0.001 to 0.03 (Default: 0.012)</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(py)decayDuration":{"name":"decayDuration","abstract":"<p>Decay Duration (Secs) ranges from 0.001 to 0.06 (Default: 0.024)</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(py)preGain":{"name":"preGain","abstract":"<p>Pre Gain (dB) ranges from -40 to 40 (Default: 0)</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 1)</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(im)init:attackDuration:decayDuration:preGain:":{"name":"init(_:attackDuration:decayDuration:preGain:)","abstract":"<p>Initialize the peak limiter node</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/s:8AudioKit7AKInputP9inputNodeSo07AVAudioE0Cvp":{"name":"inputNode","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKPeakLimiter"},"Classes/AKExpander.html#/s:8AudioKit10AKExpanderC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)expansionRatio":{"name":"expansionRatio","abstract":"<p>Expansion Ratio (rate) ranges from 1 to 50.0 (Default: 2)</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)expansionThreshold":{"name":"expansionThreshold","abstract":"<p>Expansion Threshold (rate) ranges from 1 to 50.0 (Default: 2)</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack Duration (secs) ranges from 0.0001 to 0.2 (Default: 0.001)</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release Duration (secs) ranges from 0.01 to 3 (Default: 0.05)</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)masterGain":{"name":"masterGain","abstract":"<p>Master Gain (dB) ranges from -40 to 40 (Default: 0)</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)compressionAmount":{"name":"compressionAmount","abstract":"<p>Compression Amount (dB) read only</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)inputAmplitude":{"name":"inputAmplitude","abstract":"<p>Input Amplitude (dB) read only</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)outputAmplitude":{"name":"outputAmplitude","abstract":"<p>Output Amplitude (dB) read only</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 1)</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(im)init:threshold:headRoom:expansionRatio:expansionThreshold:attackDuration:releaseDuration:masterGain:compressionAmount:inputAmplitude:outputAmplitude:":{"name":"init(_:threshold:headRoom:expansionRatio:expansionThreshold:attackDuration:releaseDuration:masterGain:compressionAmount:inputAmplitude:outputAmplitude:)","abstract":"<p>Initialize the dynamics processor node</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/s:8AudioKit7AKInputP9inputNodeSo07AVAudioE0Cvp":{"name":"inputNode","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKExpander"},"Classes/AKDynamicRangeCompressorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressorAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKDynamicRangeCompressorAudioUnit"},"Classes/AKDynamicRangeCompressorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressorAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKDynamicRangeCompressorAudioUnit"},"Classes/AKDynamicRangeCompressorAudioUnit.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressorAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKDynamicRangeCompressorAudioUnit"},"Classes/AKDynaRageCompressor.html#/s:8AudioKit20AKDynaRageCompressorC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKDynaRageCompressor"},"Classes/AKDynaRageCompressor.html#/s:8AudioKit20AKDynaRageCompressorC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKDynaRageCompressor"},"Classes/AKDynaRageCompressor.html#/c:@M@AudioKit@objc(cs)AKDynaRageCompressor(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKDynaRageCompressor"},"Classes/AKDynaRageCompressor.html#/c:@M@AudioKit@objc(cs)AKDynaRageCompressor(py)ratio":{"name":"ratio","abstract":"<p>Ratio to compress with, a value &gt; 1 will compress</p>","parent_name":"AKDynaRageCompressor"},"Classes/AKDynaRageCompressor.html#/c:@M@AudioKit@objc(cs)AKDynaRageCompressor(py)threshold":{"name":"threshold","abstract":"<p>Threshold (in dB) 0 = max</p>","parent_name":"AKDynaRageCompressor"},"Classes/AKDynaRageCompressor.html#/c:@M@AudioKit@objc(cs)AKDynaRageCompressor(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack dration</p>","parent_name":"AKDynaRageCompressor"},"Classes/AKDynaRageCompressor.html#/c:@M@AudioKit@objc(cs)AKDynaRageCompressor(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release duration</p>","parent_name":"AKDynaRageCompressor"},"Classes/AKDynaRageCompressor.html#/c:@M@AudioKit@objc(cs)AKDynaRageCompressor(py)rage":{"name":"rage","abstract":"<p>Rage Amount</p>","parent_name":"AKDynaRageCompressor"},"Classes/AKDynaRageCompressor.html#/c:@M@AudioKit@objc(cs)AKDynaRageCompressor(py)rageIsOn":{"name":"rageIsOn","abstract":"<p>Rage ON/OFF Switch</p>","parent_name":"AKDynaRageCompressor"},"Classes/AKDynaRageCompressor.html#/c:@M@AudioKit@objc(cs)AKDynaRageCompressor(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDynaRageCompressor"},"Classes/AKDynaRageCompressor.html#/c:@M@AudioKit@objc(cs)AKDynaRageCompressor(im)init:ratio:threshold:attackDuration:releaseDuration:rage:rageIsOn:":{"name":"init(_:ratio:threshold:attackDuration:releaseDuration:rage:rageIsOn:)","abstract":"<p>Initialize this compressor node</p>","parent_name":"AKDynaRageCompressor"},"Classes/AKDynaRageCompressor.html#/c:@M@AudioKit@objc(cs)AKDynaRageCompressor(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDynaRageCompressor"},"Classes/AKDynaRageCompressor.html#/c:@M@AudioKit@objc(cs)AKDynaRageCompressor(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDynaRageCompressor"},"Classes/AKDynamicRangeCompressor.html#/s:8AudioKit24AKDynamicRangeCompressorC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/s:8AudioKit24AKDynamicRangeCompressorC20ComponentDescriptionSo0afG0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/s:8AudioKit24AKDynamicRangeCompressorC05ratioD0SNySdGvpZ":{"name":"ratioRange","abstract":"<p>Lower and upper bounds for Ratio</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/s:8AudioKit24AKDynamicRangeCompressorC09thresholdD0SNySdGvpZ":{"name":"thresholdRange","abstract":"<p>Lower and upper bounds for Threshold</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/s:8AudioKit24AKDynamicRangeCompressorC014attackDurationD0SNySdGvpZ":{"name":"attackDurationRange","abstract":"<p>Lower and upper bounds for Attack Duration</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/s:8AudioKit24AKDynamicRangeCompressorC015releaseDurationD0SNySdGvpZ":{"name":"releaseDurationRange","abstract":"<p>Lower and upper bounds for Release Duration</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/s:8AudioKit24AKDynamicRangeCompressorC12defaultRatioSdvpZ":{"name":"defaultRatio","abstract":"<p>Initial value for Ratio</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/s:8AudioKit24AKDynamicRangeCompressorC16defaultThresholdSdvpZ":{"name":"defaultThreshold","abstract":"<p>Initial value for Threshold</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/s:8AudioKit24AKDynamicRangeCompressorC21defaultAttackDurationSdvpZ":{"name":"defaultAttackDuration","abstract":"<p>Initial value for Attack Duration</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/s:8AudioKit24AKDynamicRangeCompressorC22defaultReleaseDurationSdvpZ":{"name":"defaultReleaseDuration","abstract":"<p>Initial value for Release Duration</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(py)ratio":{"name":"ratio","abstract":"<p>Ratio to compress with, a value &gt; 1 will compress</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(py)threshold":{"name":"threshold","abstract":"<p>Threshold (in dB) 0 = max</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack Duration in seconds</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release Duration in seconds</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(im)init:ratio:threshold:attackDuration:releaseDuration:":{"name":"init(_:ratio:threshold:attackDuration:releaseDuration:)","abstract":"<p>Initialize this compressor node</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicsProcessor.html#/s:8AudioKit19AKDynamicsProcessorC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)threshold":{"name":"threshold","abstract":"<p>Threshold (dB) ranges from -100 to 20 (Default: -20)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)headRoom":{"name":"headRoom","abstract":"<p>Head Room (dB) ranges from 0.1 to 40.0 (Default: 5)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)expansionRatio":{"name":"expansionRatio","abstract":"<p>Expansion Ratio (rate) ranges from 1 to 50.0 (Default: 2)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)expansionThreshold":{"name":"expansionThreshold","abstract":"<p>Expansion Threshold (rate) ranges from -120 to 0 (Default: 0)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack Duration (secs) ranges from 0.001 to 0.3 (Default: 0.001)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release Duration (secs) ranges from 0.01 to 3 (Default: 0.05)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)masterGain":{"name":"masterGain","abstract":"<p>Master Gain (dB) ranges from -40 to 40 (Default: 0)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)compressionAmount":{"name":"compressionAmount","abstract":"<p>Compression Amount (dB) read only</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)inputAmplitude":{"name":"inputAmplitude","abstract":"<p>Input Amplitude (dB) read only</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)outputAmplitude":{"name":"outputAmplitude","abstract":"<p>Output Amplitude (dB) read only</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 1 Fully Wet)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(im)init:threshold:headRoom:expansionRatio:expansionThreshold:attackDuration:releaseDuration:masterGain:compressionAmount:inputAmplitude:outputAmplitude:":{"name":"init(_:threshold:headRoom:expansionRatio:expansionThreshold:attackDuration:releaseDuration:masterGain:compressionAmount:inputAmplitude:outputAmplitude:)","abstract":"<p>Initialize the dynamics processor node</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/s:8AudioKit7AKInputP9inputNodeSo07AVAudioE0Cvp":{"name":"inputNode","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKCompressor.html#/s:8AudioKit12AKCompressorC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)threshold":{"name":"threshold","abstract":"<p>Threshold (dB) ranges from -40 to 20 (Default: -20)</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)headRoom":{"name":"headRoom","abstract":"<p>Head Room (dB) ranges from 0.1 to 40.0 (Default: 5)</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack Duration (seconds) ranges from 0.0001 to 0.2 (Default: 0.001)</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release Duration (seconds) ranges from 0.01 to 3 (Default: 0.05)</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)compressionAmount":{"name":"compressionAmount","abstract":"<p>Compression Amount (dB) read only</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)inputAmplitude":{"name":"inputAmplitude","abstract":"<p>Input Amplitude (dB) read only</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)outputAmplitude":{"name":"outputAmplitude","abstract":"<p>Output Amplitude (dB) read only</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)masterGain":{"name":"masterGain","abstract":"<p>Master Gain (dB) ranges from -40 to 40 (Default: 0)</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 1 / Fully Wet)</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(im)init:threshold:headRoom:attackDuration:releaseDuration:masterGain:":{"name":"init(_:threshold:headRoom:attackDuration:releaseDuration:masterGain:)","abstract":"<p>Initialize the dynamics processor node</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/s:8AudioKit7AKInputP9inputNodeSo07AVAudioE0Cvp":{"name":"inputNode","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html":{"name":"AKCompressor","abstract":"<p>AudioKit Compressor based on Apple&rsquo;s DynamicsProcessor Audio Unit</p>"},"Classes/AKDynamicsProcessor.html":{"name":"AKDynamicsProcessor","abstract":"<p>AudioKit version of Apple&rsquo;s DynamicsProcessor Audio Unit</p>"},"Classes/AKDynamicRangeCompressor.html":{"name":"AKDynamicRangeCompressor","abstract":"<p>Dynamic range compressor from Faust</p>"},"Classes/AKDynaRageCompressor.html":{"name":"AKDynaRageCompressor","abstract":"<p>DynaRage Tube Compressor | Based on DynaRage Tube Compressor RE for Reason"},"Classes/AKDynamicRangeCompressorAudioUnit.html":{"name":"AKDynamicRangeCompressorAudioUnit"},"Classes/AKExpander.html":{"name":"AKExpander","abstract":"<p>AudioKit Expander based on Apple&rsquo;s DynamicsProcessor Audio Unit</p>"},"Classes/AKPeakLimiter.html":{"name":"AKPeakLimiter","abstract":"<p>AudioKit version of Apple&rsquo;s PeakLimiter Audio Unit</p>"},"Classes/AKTanhDistortionAudioUnit.html#/c:@M@AudioKit@objc(cs)AKTanhDistortionAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKTanhDistortionAudioUnit"},"Classes/AKTanhDistortionAudioUnit.html#/c:@M@AudioKit@objc(cs)AKTanhDistortionAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKTanhDistortionAudioUnit"},"Classes/AKTanhDistortionAudioUnit.html#/c:@M@AudioKit@objc(cs)AKTanhDistortionAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKTanhDistortionAudioUnit"},"Classes/AKTanhDistortion.html#/s:8AudioKit16AKTanhDistortionC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/s:8AudioKit16AKTanhDistortionC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/s:8AudioKit16AKTanhDistortionC12pregainRangeSNySdGvpZ":{"name":"pregainRange","abstract":"<p>Lower and upper bounds for Pregain</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/s:8AudioKit16AKTanhDistortionC13postgainRangeSNySdGvpZ":{"name":"postgainRange","abstract":"<p>Lower and upper bounds for Postgain</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/s:8AudioKit16AKTanhDistortionC27positiveShapeParameterRangeSNySdGvpZ":{"name":"positiveShapeParameterRange","abstract":"<p>Lower and upper bounds for Positive Shape Parameter</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/s:8AudioKit16AKTanhDistortionC27negativeShapeParameterRangeSNySdGvpZ":{"name":"negativeShapeParameterRange","abstract":"<p>Lower and upper bounds for Negative Shape Parameter</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/s:8AudioKit16AKTanhDistortionC14defaultPregainSdvpZ":{"name":"defaultPregain","abstract":"<p>Initial value for Pregain</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/s:8AudioKit16AKTanhDistortionC15defaultPostgainSdvpZ":{"name":"defaultPostgain","abstract":"<p>Initial value for Postgain</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/s:8AudioKit16AKTanhDistortionC29defaultPositiveShapeParameterSdvpZ":{"name":"defaultPositiveShapeParameter","abstract":"<p>Initial value for Positive Shape Parameter</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/s:8AudioKit16AKTanhDistortionC29defaultNegativeShapeParameterSdvpZ":{"name":"defaultNegativeShapeParameter","abstract":"<p>Initial value for Negative Shape Parameter</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(py)pregain":{"name":"pregain","abstract":"<p>Determines the amount of gain applied to the signal before waveshaping. A value of 1 gives slight distortion.</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(py)postgain":{"name":"postgain","abstract":"<p>Gain applied after waveshaping</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(py)positiveShapeParameter":{"name":"positiveShapeParameter","abstract":"<p>Shape of the positive part of the signal. A value of 0 gets a flat clip.</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(py)negativeShapeParameter":{"name":"negativeShapeParameter","abstract":"<p>Like the positive shape parameter, only for the negative part.</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(im)init:pregain:postgain:positiveShapeParameter:negativeShapeParameter:":{"name":"init(_:pregain:postgain:positiveShapeParameter:negativeShapeParameter:)","abstract":"<p>Initialize this distortion node</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKTanhDistortion"},"Classes/AKRingModulator.html#/s:8AudioKit15AKRingModulatorC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(py)frequency1":{"name":"frequency1","abstract":"<p>Frequency1 (Hertz) ranges from 0.5 to 8000 (Default: 100)</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(py)frequency2":{"name":"frequency2","abstract":"<p>Frequency2 (Hertz) ranges from 0.5 to 8000 (Default: 100)</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(py)balance":{"name":"balance","abstract":"<p>Ring Mod Balance (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(py)mix":{"name":"mix","abstract":"<p>Mix (Normalized Value) ranges from 0 to 1 (Default: 1)</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(im)init:frequency1:frequency2:balance:mix:":{"name":"init(_:frequency1:frequency2:balance:mix:)","abstract":"<p>Initialize the ring modulator node</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKRingModulator"},"Classes/AKDistortion.html#/s:8AudioKit12AKDistortionC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)delay":{"name":"delay","abstract":"<p>Delay (Milliseconds) ranges from 0.1 to 500 (Default: 0.1)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)decay":{"name":"decay","abstract":"<p>Decay (Rate) ranges from 0.1 to 50 (Default: 1.0)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)delayMix":{"name":"delayMix","abstract":"<p>Delay Mix (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)decimation":{"name":"decimation","abstract":"<p>Decimation (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)rounding":{"name":"rounding","abstract":"<p>Rounding (Normalized Value) ranges from 0 to 1 (Default: 0.0)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)decimationMix":{"name":"decimationMix","abstract":"<p>Decimation Mix (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)linearTerm":{"name":"linearTerm","abstract":"<p>Linear Term (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)squaredTerm":{"name":"squaredTerm","abstract":"<p>Squared Term (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)cubicTerm":{"name":"cubicTerm","abstract":"<p>Cubic Term (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)polynomialMix":{"name":"polynomialMix","abstract":"<p>Polynomial Mix (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)ringModFreq1":{"name":"ringModFreq1","abstract":"<p>Ring Mod Freq1 (Hertz) ranges from 0.5 to 8000 (Default: 100)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)ringModFreq2":{"name":"ringModFreq2","abstract":"<p>Ring Mod Freq2 (Hertz) ranges from 0.5 to 8000 (Default: 100)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)ringModBalance":{"name":"ringModBalance","abstract":"<p>Ring Mod Balance (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)ringModMix":{"name":"ringModMix","abstract":"<p>Ring Mod Mix (Normalized Value) ranges from 0 to 1 (Default: 0.0)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)softClipGain":{"name":"softClipGain","abstract":"<p>Soft Clip Gain (dB) ranges from -80 to 20 (Default: -6)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)finalMix":{"name":"finalMix","abstract":"<p>Final Mix (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(im)init:delay:decay:delayMix:decimation:rounding:decimationMix:linearTerm:squaredTerm:cubicTerm:polynomialMix:ringModFreq1:ringModFreq2:ringModBalance:ringModMix:softClipGain:finalMix:":{"name":"init(_:delay:decay:delayMix:decimation:rounding:decimationMix:linearTerm:squaredTerm:cubicTerm:polynomialMix:ringModFreq1:ringModFreq2:ringModBalance:ringModMix:softClipGain:finalMix:)","abstract":"<p>Initialize the distortion node</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/s:8AudioKit12AKDistortionC28presetInfiniteDistortionWallyyF":{"name":"presetInfiniteDistortionWall()","abstract":"<p>Massive Distortion</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/s:8AudioKit12AKDistortionC26printCurrentValuesAsPresetyyF":{"name":"printCurrentValuesAsPreset()","abstract":"<p>Print out current values in case you want to save it as a preset</p>","parent_name":"AKDistortion"},"Classes/AKDecimator.html#/s:8AudioKit11AKDecimatorC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(py)decimation":{"name":"decimation","abstract":"<p>Decimation (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(py)rounding":{"name":"rounding","abstract":"<p>Rounding (Normalized Value) ranges from 0 to 1 (Default: 0)</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(py)mix":{"name":"mix","abstract":"<p>Mix (Normalized Value) ranges from 0 to 1 (Default: 1)</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(im)init:decimation:rounding:mix:":{"name":"init(_:decimation:rounding:mix:)","abstract":"<p>Initialize the decimator node</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKDecimator"},"Classes/AKClipperAudioUnit.html#/c:@M@AudioKit@objc(cs)AKClipperAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKClipperAudioUnit"},"Classes/AKClipperAudioUnit.html#/c:@M@AudioKit@objc(cs)AKClipperAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKClipperAudioUnit"},"Classes/AKClipperAudioUnit.html#/c:@M@AudioKit@objc(cs)AKClipperAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKClipperAudioUnit"},"Classes/AKClipper.html#/s:8AudioKit9AKClipperC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKClipper"},"Classes/AKClipper.html#/s:8AudioKit9AKClipperC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKClipper"},"Classes/AKClipper.html#/s:8AudioKit9AKClipperC10limitRangeSNySdGvpZ":{"name":"limitRange","abstract":"<p>Lower and upper bounds for Limit</p>","parent_name":"AKClipper"},"Classes/AKClipper.html#/s:8AudioKit9AKClipperC12defaultLimitSdvpZ":{"name":"defaultLimit","abstract":"<p>Initial value for Limit</p>","parent_name":"AKClipper"},"Classes/AKClipper.html#/c:@M@AudioKit@objc(cs)AKClipper(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKClipper"},"Classes/AKClipper.html#/c:@M@AudioKit@objc(cs)AKClipper(py)limit":{"name":"limit","abstract":"<p>Threshold / limiting value.</p>","parent_name":"AKClipper"},"Classes/AKClipper.html#/c:@M@AudioKit@objc(cs)AKClipper(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKClipper"},"Classes/AKClipper.html#/c:@M@AudioKit@objc(cs)AKClipper(im)init:limit:":{"name":"init(_:limit:)","abstract":"<p>Initialize this clipper node</p>","parent_name":"AKClipper"},"Classes/AKClipper.html#/c:@M@AudioKit@objc(cs)AKClipper(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKClipper"},"Classes/AKClipper.html#/c:@M@AudioKit@objc(cs)AKClipper(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKClipper"},"Classes/AKBitCrusherAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBitCrusherAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKBitCrusherAudioUnit"},"Classes/AKBitCrusherAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBitCrusherAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKBitCrusherAudioUnit"},"Classes/AKBitCrusherAudioUnit.html#/c:@M@AudioKit@objc(cs)AKBitCrusherAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKBitCrusherAudioUnit"},"Classes/AKBitCrusher.html#/s:8AudioKit12AKBitCrusherC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/s:8AudioKit12AKBitCrusherC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/s:8AudioKit12AKBitCrusherC13bitDepthRangeSNySdGvpZ":{"name":"bitDepthRange","abstract":"<p>Lower and upper bounds for Bit Depth</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/s:8AudioKit12AKBitCrusherC15sampleRateRangeSNySdGvpZ":{"name":"sampleRateRange","abstract":"<p>Lower and upper bounds for Sample Rate</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/s:8AudioKit12AKBitCrusherC15defaultBitDepthSdvpZ":{"name":"defaultBitDepth","abstract":"<p>Initial value for Bit Depth</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/s:8AudioKit12AKBitCrusherC17defaultSampleRateSdvpZ":{"name":"defaultSampleRate","abstract":"<p>Initial value for Sample Rate</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(py)bitDepth":{"name":"bitDepth","abstract":"<p>The bit depth of signal output. Typically in range (1-24). Non-integer values are OK.</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(py)sampleRate":{"name":"sampleRate","abstract":"<p>The sample rate of signal output.</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(im)init:bitDepth:sampleRate:":{"name":"init(_:bitDepth:sampleRate:)","abstract":"<p>Initialize this bitcrusher node</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html":{"name":"AKBitCrusher","abstract":"<p>This will digitally degrade a signal.</p>"},"Classes/AKBitCrusherAudioUnit.html":{"name":"AKBitCrusherAudioUnit"},"Classes/AKClipper.html":{"name":"AKClipper","abstract":"<p>Clips a signal to a predefined limit, in a <q>soft</q> manner, using one of three"},"Classes/AKClipperAudioUnit.html":{"name":"AKClipperAudioUnit"},"Classes/AKDecimator.html":{"name":"AKDecimator","abstract":"<p>AudioKit version of Apple&rsquo;s Decimator from the Distortion Audio Unit</p>"},"Classes/AKDistortion.html":{"name":"AKDistortion","abstract":"<p>AudioKit version of Apple&rsquo;s Distortion Audio Unit</p>"},"Classes/AKRingModulator.html":{"name":"AKRingModulator","abstract":"<p>AudioKit version of Apple&rsquo;s Ring Modulator from the Distortion Audio Unit</p>"},"Classes/AKTanhDistortion.html":{"name":"AKTanhDistortion","abstract":"<p>Distortion using a modified hyperbolic tangent function.</p>"},"Classes/AKTanhDistortionAudioUnit.html":{"name":"AKTanhDistortionAudioUnit"},"Classes/AKVariableDelayAudioUnit.html#/c:@M@AudioKit@objc(cs)AKVariableDelayAudioUnit(im)initDSPWithSampleRate:channelCount:":{"name":"initDSP(withSampleRate:channelCount:)","parent_name":"AKVariableDelayAudioUnit"},"Classes/AKVariableDelayAudioUnit.html#/c:@M@AudioKit@objc(cs)AKVariableDelayAudioUnit(im)initWithComponentDescription:options:error:":{"name":"init(componentDescription:options:)","parent_name":"AKVariableDelayAudioUnit"},"Classes/AKVariableDelayAudioUnit.html#/c:@M@AudioKit@objc(cs)AKVariableDelayAudioUnit(py)canProcessInPlace":{"name":"canProcessInPlace","parent_name":"AKVariableDelayAudioUnit"},"Classes/AKVariableDelay.html#/s:8AudioKit15AKVariableDelayC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/s:8AudioKit15AKVariableDelayC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/s:8AudioKit15AKVariableDelayC9timeRangeSNySdGvpZ":{"name":"timeRange","abstract":"<p>Lower and upper bounds for Time</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/s:8AudioKit15AKVariableDelayC13feedbackRangeSNySdGvpZ":{"name":"feedbackRange","abstract":"<p>Lower and upper bounds for Feedback</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/s:8AudioKit15AKVariableDelayC11defaultTimeSdvpZ":{"name":"defaultTime","abstract":"<p>Initial value for Time</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/s:8AudioKit15AKVariableDelayC15defaultFeedbackSdvpZ":{"name":"defaultFeedback","abstract":"<p>Initial value for Feedback</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/s:8AudioKit15AKVariableDelayC014defaultMaximumD4TimeSdvpZ":{"name":"defaultMaximumDelayTime","abstract":"<p>Initial value for Maximum Delay Time</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(py)rampDuration":{"name":"rampDuration","abstract":"<p>Ramp Duration represents the speed at which parameters are allowed to change</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(py)time":{"name":"time","abstract":"<p>Delay time (in seconds) This value must not exceed the maximum delay time.</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(py)feedback":{"name":"feedback","abstract":"<p>Feedback amount. Should be a value between 0-1.</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(im)init:time:feedback:maximumDelayTime:":{"name":"init(_:time:feedback:maximumDelayTime:)","abstract":"<p>Initialize this delay node</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKVariableDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(py)time":{"name":"time","abstract":"<p>Delay time in seconds (Default: 1)</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(py)feedback":{"name":"feedback","abstract":"<p>Feedback (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(py)lowPassCutoff":{"name":"lowPassCutoff","abstract":"<p>Low pass cut-off frequency in Hertz (Default: 15000)</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(im)init:time:feedback:lowPassCutoff:dryWetMix:":{"name":"init(_:time:feedback:lowPassCutoff:dryWetMix:)","abstract":"<p>Initialize the delay node</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/s:8AudioKit7AKDelayC16presetShortDelayyyF":{"name":"presetShortDelay()","abstract":"<p>Short Delay</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/s:8AudioKit7AKDelayC20presetDenseLongDelayyyF":{"name":"presetDenseLongDelay()","abstract":"<p>Long, dense delay</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/s:8AudioKit7AKDelayC27presetElectricCircuitsDelayyyF":{"name":"presetElectricCircuitsDelay()","abstract":"<p>Electrical Circuits, Robotic Delay Effect</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/s:8AudioKit7AKDelayC26printCurrentValuesAsPresetyyF":{"name":"printCurrentValuesAsPreset()","abstract":"<p>Print out current values in case you want to save it as a preset</p>","parent_name":"AKDelay"},"Classes/AKDelay.html":{"name":"AKDelay","abstract":"<p>AudioKit version of Apple&rsquo;s Delay Audio Unit</p>"},"Classes/AKVariableDelay.html":{"name":"AKVariableDelay","abstract":"<p>A delay line with cubic interpolation.</p>"},"Classes/AKVariableDelayAudioUnit.html":{"name":"AKVariableDelayAudioUnit"},"Classes/AKFrequencyTracker.html#/s:8AudioKit18AKFrequencyTrackerC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKFrequencyTracker"},"Classes/AKFrequencyTracker.html#/s:8AudioKit18AKFrequencyTrackerC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKFrequencyTracker"},"Classes/AKFrequencyTracker.html#/c:@M@AudioKit@objc(cs)AKFrequencyTracker(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKFrequencyTracker"},"Classes/AKFrequencyTracker.html#/c:@M@AudioKit@objc(cs)AKFrequencyTracker(py)amplitude":{"name":"amplitude","abstract":"<p>Detected Amplitude (Use AKAmplitude tracker if you don&rsquo;t need frequency)</p>","parent_name":"AKFrequencyTracker"},"Classes/AKFrequencyTracker.html#/c:@M@AudioKit@objc(cs)AKFrequencyTracker(py)frequency":{"name":"frequency","abstract":"<p>Detected frequency</p>","parent_name":"AKFrequencyTracker"},"Classes/AKFrequencyTracker.html#/c:@M@AudioKit@objc(cs)AKFrequencyTracker(im)init:hopSize:peakCount:":{"name":"init(_:hopSize:peakCount:)","abstract":"<p>Initialize this Pitch-tracker node</p>","parent_name":"AKFrequencyTracker"},"Classes/AKFrequencyTracker.html#/c:@M@AudioKit@objc(cs)AKFrequencyTracker(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKFrequencyTracker"},"Classes/AKFrequencyTracker.html#/c:@M@AudioKit@objc(cs)AKFrequencyTracker(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKFrequencyTracker"},"Classes/AKAmplitudeTracker.html#/s:8AudioKit18AKAmplitudeTrackerC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/s:8AudioKit18AKAmplitudeTrackerC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(py)amplitude":{"name":"amplitude","abstract":"<p>Detected amplitude</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(py)leftAmplitude":{"name":"leftAmplitude","abstract":"<p>Detected amplitude</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(py)rightAmplitude":{"name":"rightAmplitude","abstract":"<p>Detected right amplitude</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(py)threshold":{"name":"threshold","abstract":"<p>Threshold amplitude</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(im)init:halfPowerPoint:threshold:thresholdCallback:":{"name":"init(_:halfPowerPoint:threshold:thresholdCallback:)","abstract":"<p>Initialize this amplitude tracker node</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html":{"name":"AKAmplitudeTracker","abstract":"<p>Performs a <q>root-mean-square</q> on a signal to get overall amplitude of a"},"Classes/AKFrequencyTracker.html":{"name":"AKFrequencyTracker","abstract":"<p>This is based on an algorithm originally created by Miller Puckette.</p>"},"Classes/AKOperationGenerator.html#/s:8AudioKit20AKOperationGeneratorC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/s:8AudioKit20AKOperationGeneratorC20ComponentDescriptionSo0aeF0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(py)sporth":{"name":"sporth","abstract":"<p>Sporth language snippet</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(py)parameters":{"name":"parameters","abstract":"<p>Parameters for changing internal operations</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/s:8AudioKit20AKOperationGeneratorC9operationAcA19AKComputedParameter_pSayAA0C0CGXE_tcfc":{"name":"init(operation:)","abstract":"<p>Initialize with a mono or stereo operation</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/s:8AudioKit20AKOperationGeneratorC12channelCount10operationsACSi_SayAA0C0CGAHXEtcfc":{"name":"init(channelCount:operations:)","abstract":"<p>Initialize the generator for stereo (2 channels)</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(im)initWithSporth:customUgens:":{"name":"init(sporth:customUgens:)","abstract":"<p>Initialize this generator node with a generic sporth stack and a triggering flag</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/s:8AudioKit20AKOperationGeneratorC7triggeryySiF":{"name":"trigger(_:)","abstract":"<p>Trigger the sound with current parameters</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/s:8AudioKit20AKOperationGeneratorC7restartyyF":{"name":"restart()","abstract":"<p>Restart from scratch</p>","parent_name":"AKOperationGenerator"},"Protocols/AKToggleable.html#/c:@M@AudioKit@objc(pl)AKToggleable(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKToggleable"},"Protocols/AKToggleable.html#/c:@M@AudioKit@objc(pl)AKToggleable(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKToggleable"},"Protocols/AKToggleable.html#/c:@M@AudioKit@objc(pl)AKToggleable(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKToggleable"},"Protocols/AKToggleable.html#/s:8AudioKit12AKToggleablePAAE9isPlayingSbvp":{"name":"isPlaying","abstract":"<p>Synonym for isStarted that may make more sense with musical instruments</p>","parent_name":"AKToggleable"},"Protocols/AKToggleable.html#/s:8AudioKit12AKToggleablePAAE9isStoppedSbvp":{"name":"isStopped","abstract":"<p>Antonym for isStarted</p>","parent_name":"AKToggleable"},"Protocols/AKToggleable.html#/s:8AudioKit12AKToggleablePAAE10isBypassedSbvp":{"name":"isBypassed","abstract":"<p>Antonym for isStarted that may make more sense with effects</p>","parent_name":"AKToggleable"},"Protocols/AKToggleable.html#/s:8AudioKit12AKToggleablePAAE4playyyF":{"name":"play()","abstract":"<p>Synonym to start that may more more sense with musical instruments</p>","parent_name":"AKToggleable"},"Protocols/AKToggleable.html#/s:8AudioKit12AKToggleablePAAE6bypassyyF":{"name":"bypass()","abstract":"<p>Synonym for stop that may make more sense with effects</p>","parent_name":"AKToggleable"},"Classes/AKPolyphonicNode.html#/c:@M@AudioKit@objc(cs)AKPolyphonicNode(cpy)tuningTable":{"name":"tuningTable","abstract":"<p>Global tuning table used by AKPolyphonicNode (AKNode classes adopting AKPolyphonic protocol)</p>","parent_name":"AKPolyphonicNode"},"Classes/AKPolyphonicNode.html#/s:8AudioKit16AKPolyphonicNodeC14midiInstrumentSo25AVAudioUnitMIDIInstrumentCSgvp":{"name":"midiInstrument","parent_name":"AKPolyphonicNode"},"Classes/AKPolyphonicNode.html#/c:@M@AudioKit@objc(cs)AKPolyphonicNode(im)playWithNoteNumber:velocity:frequency:":{"name":"play(noteNumber:velocity:frequency:)","abstract":"<p>Play a sound corresponding to a MIDI note with frequency</p>","parent_name":"AKPolyphonicNode"},"Classes/AKPolyphonicNode.html#/c:@M@AudioKit@objc(cs)AKPolyphonicNode(im)playWithNoteNumber:velocity:":{"name":"play(noteNumber:velocity:)","abstract":"<p>Play a sound corresponding to a MIDI note</p>","parent_name":"AKPolyphonicNode"},"Classes/AKPolyphonicNode.html#/c:@M@AudioKit@objc(cs)AKPolyphonicNode(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Stop a sound corresponding to a MIDI note</p>","parent_name":"AKPolyphonicNode"},"Protocols/AKPolyphonic.html#/s:8AudioKit12AKPolyphonicP4play10noteNumber8velocity9frequencyys5UInt8V_AISdtF":{"name":"play(noteNumber:velocity:frequency:)","abstract":"<p>Play a sound corresponding to a MIDI note</p>","parent_name":"AKPolyphonic"},"Protocols/AKPolyphonic.html#/s:8AudioKit12AKPolyphonicP4play10noteNumber8velocityys5UInt8V_AHtF":{"name":"play(noteNumber:velocity:)","abstract":"<p>Play a sound corresponding to a MIDI note</p>","parent_name":"AKPolyphonic"},"Protocols/AKPolyphonic.html#/s:8AudioKit12AKPolyphonicP4stop10noteNumberys5UInt8V_tF":{"name":"stop(noteNumber:)","abstract":"<p>Stop a sound corresponding to a MIDI note</p>","parent_name":"AKPolyphonic"},"Classes/AKNode.html#/s:8AudioKit6AKNodeC02avA4NodeSo07AVAudioE0Cvp":{"name":"avAudioNode","abstract":"<p>The internal AVAudioEngine AVAudioNode</p>","parent_name":"AKNode"},"Classes/AKNode.html#/c:@M@AudioKit@objc(cs)AKNode(im)init":{"name":"init()","abstract":"<p>Create the node</p>","parent_name":"AKNode"},"Classes/AKNode.html#/c:@M@AudioKit@objc(cs)AKNode(im)initWithAvAudioNode:attach:":{"name":"init(avAudioNode:attach:)","abstract":"<p>Initialize the node</p>","parent_name":"AKNode"},"Classes/AKNode.html#/s:8AudioKit6AKNodeC6detachyyF":{"name":"detach()","parent_name":"AKNode"},"Classes/AKNode.html#/c:@M@AudioKit@objc(pl)AKOutput(py)outputNode":{"name":"outputNode","parent_name":"AKNode"},"Classes/AKNode.html#/s:8AudioKit6AKNodeC18addConnectionPoint_3busyAC_SitF":{"name":"addConnectionPoint(_:bus:)","parent_name":"AKNode"},"Classes/AKNode.html#/c:@CM@AudioKit@objc(cs)AKNode(im)disconnect":{"name":"disconnect()","parent_name":"AKNode"},"Classes/AKNode.html#/s:8AudioKit6AKNodeC10disconnect5nodesySaySo11AVAudioNodeCG_tF":{"name":"disconnect(nodes:)","parent_name":"AKNode"},"Classes/AKNode.html":{"name":"AKNode","abstract":"<p>Parent class for all nodes in AudioKit</p>"},"Protocols/AKPolyphonic.html":{"name":"AKPolyphonic","abstract":"<p>Protocol for responding to play and stop of MIDI notes</p>"},"Classes/AKPolyphonicNode.html":{"name":"AKPolyphonicNode","abstract":"<p>Bare bones implementation of AKPolyphonic protocol</p>"},"Protocols/AKToggleable.html":{"name":"AKToggleable","abstract":"<p>Protocol for dictating that a node can be in a started or stopped state</p>"},"Classes/AKOperationGenerator.html":{"name":"AKOperationGenerator","abstract":"<p>Operation-based generator</p>"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC013internalMusicD0s13OpaquePointerVSgvp":{"name":"internalMusicTrack","abstract":"<p>The representation of Apple&rsquo;s underlying music track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC09initMusicD0s13OpaquePointerVSgvp":{"name":"initMusicTrack","abstract":"<p>A copy of the original track at init</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC9sequencerAA11AKSequencerCvp":{"name":"sequencer","abstract":"<p>Sequencer this music track is part of</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC12trackPointerSpys06OpaqueF0VGvp":{"name":"trackPointer","abstract":"<p>Pointer to the Music Track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC04initD7PointerSpys06OpaqueF0VGvp":{"name":"initTrackPointer","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC10isNotEmptySbvp":{"name":"isNotEmpty","abstract":"<p>Nicer function for not empty</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC6lengthSdvp":{"name":"length","abstract":"<p>Total duration of the music track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC10initLengthSdvp":{"name":"initLength","abstract":"<p>Total duration of the music track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC4nameACSS_tcfc":{"name":"init(name:)","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC05musicD04nameACs13OpaquePointerV_SStcfc":{"name":"init(musicTrack:name:)","abstract":"<p>Initialize with a music track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC05musicD09sequencerACs13OpaquePointerV_AA11AKSequencerCtcfc":{"name":"init(musicTrack:sequencer:)","abstract":"<p>Initialize with a music track and the AKSequence</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC13setNodeOutputyys5Int32VF":{"name":"setNodeOutput(_:)","abstract":"<p>Set the Node Output</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC11setLoopInfo_13numberOfLoopsyAA10AKDurationV_SitF":{"name":"setLoopInfo(_:numberOfLoops:)","abstract":"<p>Set loop info</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC9setLengthyyAA10AKDurationVF":{"name":"setLength(_:)","abstract":"<p>Set length","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC13setLengthSoftyyAA10AKDurationVF":{"name":"setLengthSoft(_:)","abstract":"<p>A less destructive and simpler way to set the length</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC5clearyyF":{"name":"clear()","abstract":"<p>Clear all events from the track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC15clearMetaEventsyyF":{"name":"clearMetaEvents()","abstract":"<p>Clear meta events from the track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC16clearSysexEventsyyF":{"name":"clearSysexEvents()","abstract":"<p>Clear SysEx events from the track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC9clearNoteyys5UInt8VF":{"name":"clearNote(_:)","abstract":"<p>Clear a specific note</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC7isEmptySbvp":{"name":"isEmpty","abstract":"<p>Determine if the sequence is empty</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC10clearRange5start8durationyAA10AKDurationV_AHtF":{"name":"clearRange(start:duration:)","abstract":"<p>Clear all events from this track within the specified range</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC3add10noteNumber8velocity8position8duration7channelys5UInt8V_AkA10AKDurationVAmKtF":{"name":"add(noteNumber:velocity:position:duration:channel:)","abstract":"<p>Add Note to sequence</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC3add12midiNoteDatayAA010AKMIDINoteH0V_tF":{"name":"add(midiNoteData:)","abstract":"<p>Add Note to sequence with AKMIDINoteData</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC19replaceMIDINoteData4withySayAA010AKMIDINoteG0VG_tF":{"name":"replaceMIDINoteData(with:)","abstract":"<p>Erases current note events and recreates track from note data in AKMIDINoteData array","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC13addController_5value8position7channelys5UInt8V_AiA10AKDurationVAItF":{"name":"addController(_:value:position:channel:)","abstract":"<p>Add Controller change to sequence</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC8addSysex_8positionySays5UInt8VG_AA10AKDurationVtF":{"name":"addSysex(_:position:)","abstract":"<p>Add Sysex message to sequence</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC12addPitchBend_8position7channelySi_AA10AKDurationVs5UInt8VtF":{"name":"addPitchBend(_:position:channel:)","abstract":"<p>Add Pitch Bend change to sequence</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC14resetPitchBend8position7channelyAA10AKDurationV_s5UInt8VtF":{"name":"resetPitchBend(position:channel:)","abstract":"<p>Add Pitch Bend reset to sequence</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC15getMIDINoteDataSayAA010AKMIDINoteG0VGyF":{"name":"getMIDINoteData()","abstract":"<p>Get an array of all the MIDI Note data in the internalMusicTrack","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC14copyAndMergeTo05musicD0yAC_tF":{"name":"copyAndMergeTo(musicTrack:)","abstract":"<p>Copy this track to another track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC6copyOfACyF":{"name":"copyOf()","abstract":"<p>Copy this track to another track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC11resetToInityyF":{"name":"resetToInit()","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC13setMIDIOutputyys6UInt32VF":{"name":"setMIDIOutput(_:)","abstract":"<p>Set the MIDI Ouput</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC5debugyyF":{"name":"debug()","abstract":"<p>Debug by showing the track pointer.</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC09debugInitD0yyF":{"name":"debugInitTrack()","parent_name":"AKMusicTrack"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV5beatsSdvp":{"name":"beats","abstract":"<p>Duration in beats</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV10sampleRateSdvp":{"name":"sampleRate","abstract":"<p>Samples per second</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV5tempoSdvp":{"name":"tempo","abstract":"<p>Tempo in BPM (beats per minute)</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV7samplesSivp":{"name":"samples","abstract":"<p>While samples is the most accurate, they blow up too fast, so using beat as standard</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV7secondsSdvp":{"name":"seconds","abstract":"<p>Regular time measurement</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV7minutesSdvp":{"name":"minutes","abstract":"<p>Useful for math using tempo in BPM (beats per minute)</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV14musicTimeStampSdvp":{"name":"musicTimeStamp","abstract":"<p>Music time stamp for the duration in beats</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV11descriptionSSvp":{"name":"description","abstract":"<p>Pretty printout</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV7samples10sampleRate5tempoACSi_S2dtcfc":{"name":"init(samples:sampleRate:tempo:)","abstract":"<p>Initialize with samples</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV5beats5tempoACSd_Sdtcfc":{"name":"init(beats:tempo:)","abstract":"<p>Initialize from a beat perspective</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV7seconds10sampleRate5tempoACSd_S2dtcfc":{"name":"init(seconds:sampleRate:tempo:)","abstract":"<p>Initialize from a normal time perspective</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV2peoiyyACz_ACtFZ":{"name":"+=(_:_:)","abstract":"<p>Add to a duration</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV2seoiyyACz_ACtFZ":{"name":"-=(_:_:)","abstract":"<p>Subtract from a duration</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Duration equality</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Duration less than</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Adding durations</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV1soiyA2C_ACtFZ":{"name":"-(_:_:)","abstract":"<p>Subtracting durations</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV1roiyA2C_ACtFZ":{"name":"%(_:_:)","abstract":"<p>Modulus of the duration&rsquo;s beats</p>","parent_name":"AKDuration"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC8sequences13OpaquePointerVSgvp":{"name":"sequence","abstract":"<p>Music sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC15sequencePointerSpys06OpaqueE0VGSgvp":{"name":"sequencePointer","abstract":"<p>Pointer to Music Sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC6tracksSayAA12AKMusicTrackCGvp":{"name":"tracks","abstract":"<p>Array of AudioKit Music Tracks</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC11loopEnabledSbvp":{"name":"loopEnabled","abstract":"<p>Loop control</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerCACycfc":{"name":"init()","abstract":"<p>Sequencer Initialization</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC8filenameACSS_tcfc":{"name":"init(filename:)","abstract":"<p>Initialize the sequence with a MIDI file</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC7fromURLAC10Foundation0E0V_tcfc":{"name":"init(fromURL:)","abstract":"<p>Initialize the sequence with a MIDI file</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC7prerollyyF":{"name":"preroll()","abstract":"<p>Preroll the music player. Call this function in advance of playback to reduce the sequencers","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC10toggleLoopyyF":{"name":"toggleLoop()","abstract":"<p>Set loop functionality of entire sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC13enableLoopingyyF":{"name":"enableLooping()","abstract":"<p>Enable looping for all tracks - loops entire sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC13enableLoopingyyAA10AKDurationVF":{"name":"enableLooping(_:)","abstract":"<p>Enable looping for all tracks with specified length</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC14disableLoopingyyF":{"name":"disableLooping()","abstract":"<p>Disable looping for all tracks</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC11setLoopInfo_13numberOfLoopsyAA10AKDurationV_SitF":{"name":"setLoopInfo(_:numberOfLoops:)","abstract":"<p>Set looping duration and count for all tracks</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC9setLengthyyAA10AKDurationVF":{"name":"setLength(_:)","abstract":"<p>Set length of all tracks</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC6lengthAA10AKDurationVvp":{"name":"length","abstract":"<p>Length of longest track in the sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC7setRateyySdF":{"name":"setRate(_:)","abstract":"<p>Set the rate of the sequencer</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC4rateSdvp":{"name":"rate","abstract":"<p>Rate relative to the default tempo (BPM) of the track</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC8setTempoyySdF":{"name":"setTempo(_:)","abstract":"<p>Clears all existing tempo events and adds single tempo event at start","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC15addTempoEventAt5tempo8positionySd_AA10AKDurationVtF":{"name":"addTempoEventAt(tempo:position:)","abstract":"<p>Add a  tempo change to the score</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC5tempoSdvp":{"name":"tempo","abstract":"<p>Tempo retrieved from the sequencer. Defaults to 120","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC14allTempoEventsSaySd_SdtGvp":{"name":"allTempoEvents","abstract":"<p>returns an array of (MusicTimeStamp, bpm) tuples","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC8getTempo2atS2d_tF":{"name":"getTempo(at:)","abstract":"<p>returns the tempo at a given position in beats</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC22allTimeSignatureEventsSaySd_AA06AKTimeF0VtGvp":{"name":"allTimeSignatureEvents","abstract":"<p>Return and array of (MusicTimeStamp, AKTimeSignature) tuples</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC16getTimeSignature2atAA06AKTimeF0VSd_tF":{"name":"getTimeSignature(at:)","abstract":"<p>returns the time signature at a given position in beats</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC21addTimeSignatureEvent2at04timeF022ticksPerMetronomeClick017thirtySecondNotesK7Quarter19clearExistingEventsySd_AA06AKTimeF0Vs5UInt8VAMSbtF":{"name":"addTimeSignatureEvent(at:timeSignature:ticksPerMetronomeClick:thirtySecondNotesPerQuarter:clearExistingEvents:)","abstract":"<p>Add a time signature event to start of tempo track","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC8duration7secondsAA10AKDurationVSd_tF":{"name":"duration(seconds:)","abstract":"<p>Convert seconds into AKDuration</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC7seconds8durationSdAA10AKDurationV_tF":{"name":"seconds(duration:)","abstract":"<p>Convert beats into seconds</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC4playyyF":{"name":"play()","abstract":"<p>Play the sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC4stopyyF":{"name":"stop()","abstract":"<p>Stop the sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC6rewindyyF":{"name":"rewind()","abstract":"<p>Rewind the sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC9isPlayingSbvp":{"name":"isPlaying","abstract":"<p>Wheter or not the sequencer is currently playing</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC15currentPositionAA10AKDurationVvp":{"name":"currentPosition","abstract":"<p>Current Time</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC23currentRelativePositionAA10AKDurationVvp":{"name":"currentRelativePosition","abstract":"<p>Current Time relative to sequencer length</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC10trackCountSivp":{"name":"trackCount","abstract":"<p>Track count</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC14timeResolutions6UInt32Vvp":{"name":"timeResolution","abstract":"<p>Time Resolution, i.e., Pulses per quarter note</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC12loadMIDIFileyySSF":{"name":"loadMIDIFile(_:)","abstract":"<p>Load a MIDI file from the bundle (removes old tracks, if present)</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC12loadMIDIFile7fromURLy10Foundation0G0V_tF":{"name":"loadMIDIFile(fromURL:)","abstract":"<p>Load a MIDI file given a URL (removes old tracks, if present)</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC17addMIDIFileTracks_26useExistingSequencerLengthySS_SbtF":{"name":"addMIDIFileTracks(_:useExistingSequencerLength:)","abstract":"<p>Add tracks from MIDI file to existing sequencer</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC17addMIDIFileTracks_26useExistingSequencerLengthy10Foundation3URLV_SbtF":{"name":"addMIDIFileTracks(_:useExistingSequencerLength:)","abstract":"<p>Add tracks from MIDI file to existing sequencer</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC8newTrackyAA07AKMusicE0CSgSSF":{"name":"newTrack(_:)","abstract":"<p>Get a new track</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC11deleteTrack10trackIndexySi_tF":{"name":"deleteTrack(trackIndex:)","abstract":"<p>Delete track and remove it from the sequence","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC10clearRange5start8durationyAA10AKDurationV_AHtF":{"name":"clearRange(start:duration:)","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC7setTimeyySdF":{"name":"setTime(_:)","abstract":"<p>Set the music player time directly</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC7genData10Foundation0E0VSgyF":{"name":"genData()","abstract":"<p>Generate NSData from the sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC5debugyyF":{"name":"debug()","abstract":"<p>Print sequence to console</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC19setGlobalMIDIOutputyys6UInt32VF":{"name":"setGlobalMIDIOutput(_:)","abstract":"<p>Set the midi output for all tracks</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC24nearestQuantizedPosition19quantizationInBeatsAA10AKDurationVSd_tF":{"name":"nearestQuantizedPosition(quantizationInBeats:)","abstract":"<p>Nearest time of quantized beat</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC25previousQuantizedPosition19quantizationInBeatsAA10AKDurationVSd_tF":{"name":"previousQuantizedPosition(quantizationInBeats:)","abstract":"<p>The last quantized beat</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC21nextQuantizedPosition19quantizationInBeatsAA10AKDurationVSd_tF":{"name":"nextQuantizedPosition(quantizationInBeats:)","abstract":"<p>Next quantized beat</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html":{"name":"AKSequencer","abstract":"<p>Sequencer based on tried-and-true CoreAudio/MIDI Sequencing</p>"},"Structs/AKDuration.html":{"name":"AKDuration","abstract":"<p>Container for the notion of time in sequencing</p>"},"Classes/AKMusicTrack.html":{"name":"AKMusicTrack","abstract":"<p>Wrapper for internal Apple MusicTrack</p>"},"Classes/AKCallbackInstrument.html#/s:8AudioKit20AKCallbackInstrumentC8callbackyAA12AKMIDIStatusO_s5UInt8VAHtcSgvp":{"name":"callback","abstract":"<p>All callbacks that will get triggered by MIDI events</p>","parent_name":"AKCallbackInstrument"},"Classes/AKCallbackInstrument.html#/s:8AudioKit20AKCallbackInstrumentC13midiInputName8callbackACSS_yAA12AKMIDIStatusO_s5UInt8VAItcSgtcfc":{"name":"init(midiInputName:callback:)","abstract":"<p>Initialize the callback instrument</p>","parent_name":"AKCallbackInstrument"},"Classes/AKCallbackInstrument.html#/c:@M@AudioKit@objc(cs)AKCallbackInstrument(im)startWithNoteNumber:velocity:channel:":{"name":"start(noteNumber:velocity:channel:)","abstract":"<p>Will trigger in response to any noteOn Message</p>","parent_name":"AKCallbackInstrument"},"Classes/AKCallbackInstrument.html#/c:@M@AudioKit@objc(cs)AKCallbackInstrument(im)stopWithNoteNumber:channel:":{"name":"stop(noteNumber:channel:)","abstract":"<p>Will trigger in response to any noteOff Message</p>","parent_name":"AKCallbackInstrument"},"Classes/AKBluetoothMIDIButton.html#/s:8AudioKit21AKBluetoothMIDIButtonC13centerPopupIn4viewySo6UIViewC_tF":{"name":"centerPopupIn(view:)","abstract":"<p>Use this when your button&rsquo;s superview is not the entire screen, or when you prefer","parent_name":"AKBluetoothMIDIButton"},"Classes/AKBluetoothMIDIButton.html#/c:@M@AudioKit@objc(cs)AKBluetoothMIDIButton(im)touchesEnded:withEvent:":{"name":"touchesEnded(_:with:)","abstract":"<p>Handle touches</p>","parent_name":"AKBluetoothMIDIButton"},"Extensions/MIDIPacketList.html#/s:ST7ElementQa":{"name":"Element","parent_name":"MIDIPacketList"},"Extensions/MIDIPacketList.html#/s:ST12makeIterator0B0QzyF":{"name":"makeIterator()","parent_name":"MIDIPacketList"},"Extensions/MIDIPacket.html#/s:So10MIDIPacketV8AudioKitE12makeIterators03AnyE0VyAC11AKMIDIEventVGyF":{"name":"makeIterator()","abstract":"<p>Generate a MIDI packet</p>","parent_name":"MIDIPacket"},"Protocols/AKMIDITransformer.html#/s:8AudioKit17AKMIDITransformerP9transform9eventListSayAA11AKMIDIEventVGAH_tF":{"name":"transform(eventList:)","parent_name":"AKMIDITransformer"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO4noneyA2CmF":{"name":"none","abstract":"<p>Trivial Case of None</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO5sysexyA2CmF":{"name":"sysex","abstract":"<p>System Exclusive</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO12songPositionyA2CmF":{"name":"songPosition","abstract":"<p>Song Position</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO10songSelectyA2CmF":{"name":"songSelect","abstract":"<p>Song Selection</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO11tuneRequestyA2CmF":{"name":"tuneRequest","abstract":"<p>Request Tune</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO8sysexEndyA2CmF":{"name":"sysexEnd","abstract":"<p>End System Exclusive</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO5clockyA2CmF":{"name":"clock","abstract":"<p>Clock</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO5startyA2CmF":{"name":"start","abstract":"<p>Start</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO8continueyA2CmF":{"name":"continue","abstract":"<p>Continue</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO4stopyA2CmF":{"name":"stop","abstract":"<p>Stop</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO13activeSensingyA2CmF":{"name":"activeSensing","abstract":"<p>Active Sensing</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO8sysResetyA2CmF":{"name":"sysReset","abstract":"<p>System Reset</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO7nothingyA2CmF":{"name":"nothing","abstract":"<p>Default empty status</p>","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO7noteOffyA2CmF":{"name":"noteOff","abstract":"<p>Note off is something resembling a keyboard key release</p>","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO6noteOnyA2CmF":{"name":"noteOn","abstract":"<p>Note on is triggered when a new note is created, or a keyboard key press</p>","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO20polyphonicAftertouchyA2CmF":{"name":"polyphonicAftertouch","abstract":"<p>Polyphonic aftertouch is a rare MIDI control on controllers in which","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO16controllerChangeyA2CmF":{"name":"controllerChange","abstract":"<p>Controller changes represent a wide range of control types including volume,","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO13programChangeyA2CmF":{"name":"programChange","abstract":"<p>Program change messages are associated with changing the basic character of the sound preset</p>","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO17channelAftertouchyA2CmF":{"name":"channelAftertouch","abstract":"<p>A single aftertouch for all notes on a given channel","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO10pitchWheelyA2CmF":{"name":"pitchWheel","abstract":"<p>A pitch wheel is a common keyboard control that allow for a pitch to be","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO13systemCommandyA2CmF":{"name":"systemCommand","abstract":"<p>System commands differ from system to system</p>","parent_name":"AKMIDIStatus"},"Classes/AKMIDISampler.html#/s:8AudioKit13AKMIDISamplerC6midiIns6UInt32Vvp":{"name":"midiIn","abstract":"<p>MIDI Input</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/s:8AudioKit13AKMIDISamplerC4nameSSvp":{"name":"name","abstract":"<p>Name of the instrument</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/s:8AudioKit13AKMIDISamplerC14midiOutputNameACSSSg_tcfc":{"name":"init(midiOutputName:)","abstract":"<p>Initialize the MIDI Sampler</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/s:8AudioKit13AKMIDISamplerC10enableMIDI_4nameys6UInt32V_SStF":{"name":"enableMIDI(_:name:)","abstract":"<p>Enable MIDI input from a given MIDI client","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/s:8AudioKit13AKMIDISamplerC18receivedMIDINoteOn10noteNumber8velocity7channelys5UInt8V_A2ItKF":{"name":"receivedMIDINoteOn(noteNumber:velocity:channel:)","abstract":"<p>Handle MIDI commands that come in externally</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/s:8AudioKit13AKMIDISamplerC6midiCC_5value7channelys5UInt8V_A2HtF":{"name":"midiCC(_:value:channel:)","abstract":"<p>Handle MIDI CC that come in externally</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/c:@M@AudioKit@objc(cs)AKMIDISampler(im)playWithNoteNumber:velocity:channel:error:":{"name":"play(noteNumber:velocity:channel:)","abstract":"<p>Start a note or trigger a sample</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/c:@M@AudioKit@objc(cs)AKMIDISampler(im)stopWithNoteNumber:channel:error:":{"name":"stop(noteNumber:channel:)","abstract":"<p>Stop a note</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/s:8AudioKit13AKMIDISamplerC15destroyEndpointyyF":{"name":"destroyEndpoint()","abstract":"<p>Discard all virtual ports</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDINode.html#/s:8AudioKit10AKMIDINodeC6midiIns6UInt32Vvp":{"name":"midiIn","abstract":"<p>MIDI Input</p>","parent_name":"AKMIDINode"},"Classes/AKMIDINode.html#/s:8AudioKit10AKMIDINodeC4nameSSvp":{"name":"name","abstract":"<p>Name of the instrument</p>","parent_name":"AKMIDINode"},"Classes/AKMIDINode.html#/c:@M@AudioKit@objc(cs)AKMIDINode(im)initWithNode:midiOutputName:":{"name":"init(node:midiOutputName:)","abstract":"<p>Initialize the MIDI node</p>","parent_name":"AKMIDINode"},"Classes/AKMIDINode.html#/s:8AudioKit10AKMIDINodeC10enableMIDI_4nameys6UInt32V_SStF":{"name":"enableMIDI(_:name:)","abstract":"<p>Enable MIDI input from a given MIDI client</p>","parent_name":"AKMIDINode"},"Classes/AKMIDINode.html#/s:8AudioKit10AKMIDINodeC18receivedMIDINoteOn_8velocity7channelys5UInt8V_A2HtF":{"name":"receivedMIDINoteOn(_:velocity:channel:)","abstract":"<p>Handle MIDI commands that come in externally</p>","parent_name":"AKMIDINode"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP18receivedMIDINoteOn10noteNumber8velocity7channelys5UInt8V_A2ItF":{"name":"receivedMIDINoteOn(noteNumber:velocity:channel:)","abstract":"<p>Receive the MIDI note on event</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP19receivedMIDINoteOff10noteNumber8velocity7channelys5UInt8V_A2ItF":{"name":"receivedMIDINoteOff(noteNumber:velocity:channel:)","abstract":"<p>Receive the MIDI note off event</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP22receivedMIDIController_5value7channelys5UInt8V_A2HtF":{"name":"receivedMIDIController(_:value:channel:)","abstract":"<p>Receive a generic controller value</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP22receivedMIDIAftertouch10noteNumber8pressure7channelys5UInt8V_A2ItF":{"name":"receivedMIDIAftertouch(noteNumber:pressure:channel:)","abstract":"<p>Receive single note based aftertouch event</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP22receivedMIDIAfterTouch_7channelys5UInt8V_AGtF":{"name":"receivedMIDIAfterTouch(_:channel:)","abstract":"<p>Receive global aftertouch</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP22receivedMIDIPitchWheel_7channelys6UInt16V_s5UInt8VtF":{"name":"receivedMIDIPitchWheel(_:channel:)","abstract":"<p>Receive pitch wheel value</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP25receivedMIDIProgramChange_7channelys5UInt8V_AGtF":{"name":"receivedMIDIProgramChange(_:channel:)","abstract":"<p>Receive program change</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP25receivedMIDISystemCommandyySays5UInt8VGF":{"name":"receivedMIDISystemCommand(_:)","abstract":"<p>Receive a MIDI system command (such as clock, sysex, etc)</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP23receivedMIDISetupChangeyyF":{"name":"receivedMIDISetupChange()","abstract":"<p>MIDI Setup has changed</p>","parent_name":"AKMIDIListener"},"Classes/AKMIDIInstrument.html#/s:8AudioKit16AKMIDIInstrumentC6midiIns6UInt32Vvp":{"name":"midiIn","abstract":"<p>MIDI Input</p>","parent_name":"AKMIDIInstrument"},"Classes/AKMIDIInstrument.html#/s:8AudioKit16AKMIDIInstrumentC4nameSSvp":{"name":"name","abstract":"<p>Name of the instrument</p>","parent_name":"AKMIDIInstrument"},"Classes/AKMIDIInstrument.html#/s:8AudioKit16AKMIDIInstrumentC13midiInputNameACSSSg_tcfc":{"name":"init(midiInputName:)","abstract":"<p>Initialize the MIDI Instrument</p>","parent_name":"AKMIDIInstrument"},"Classes/AKMIDIInstrument.html#/s:8AudioKit16AKMIDIInstrumentC10enableMIDI_4nameys6UInt32V_SStF":{"name":"enableMIDI(_:name:)","abstract":"<p>Enable MIDI input from a given MIDI client</p>","parent_name":"AKMIDIInstrument"},"Classes/AKMIDIInstrument.html#/s:8AudioKit16AKMIDIInstrumentC18receivedMIDINoteOn_8velocity7channelys5UInt8V_A2HtF":{"name":"receivedMIDINoteOn(_:velocity:channel:)","abstract":"<p>Handle MIDI commands that come in externally</p>","parent_name":"AKMIDIInstrument"},"Classes/AKMIDIInstrument.html#/s:8AudioKit16AKMIDIInstrumentC19receivedMIDINoteOff10noteNumber8velocity7channelys5UInt8V_A2ItF":{"name":"receivedMIDINoteOff(noteNumber:velocity:channel:)","abstract":"<p>Handle MIDI commands that come in externally</p>","parent_name":"AKMIDIInstrument"},"Classes/AKMIDIInstrument.html#/c:@M@AudioKit@objc(cs)AKMIDIInstrument(im)startWithNoteNumber:velocity:channel:":{"name":"start(noteNumber:velocity:channel:)","abstract":"<p>Start a note</p>","parent_name":"AKMIDIInstrument"},"Classes/AKMIDIInstrument.html#/c:@M@AudioKit@objc(cs)AKMIDIInstrument(im)stopWithNoteNumber:channel:":{"name":"stop(noteNumber:channel:)","abstract":"<p>Stop a note</p>","parent_name":"AKMIDIInstrument"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV12internalDataSays5UInt8VGvp":{"name":"internalData","abstract":"<p>Internal data</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV15internalPacketsSaySays5UInt8VGGvp":{"name":"internalPackets","abstract":"<p>Internal MIDIByte-sized packets - in development / not used yet</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV6statusAA12AKMIDIStatusOSgvp":{"name":"status","abstract":"<p>Status</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV7commandAA19AKMIDISystemCommandOSgvp":{"name":"command","abstract":"<p>System Command</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV7channels5UInt8VSgvp":{"name":"channel","abstract":"<p>MIDI Channel</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV10noteNumbers5UInt8VSgvp":{"name":"noteNumber","abstract":"<p>MIDI Note Number</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV5data1s5UInt8Vvp":{"name":"data1","abstract":"<p>First data byte</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV5data2s5UInt8Vvp":{"name":"data2","abstract":"<p>Second data byte</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV8wordDatas6UInt16Vvp":{"name":"wordData","abstract":"<p>Representation of the MIDI data as a MIDI word 0-16383</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV6packetACSo10MIDIPacketV_tcfc":{"name":"init(packet:)","abstract":"<p>Initialize the MIDI Event from a MIDI Packet</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV12generateFrom13bluetoothDataSayACGSays5UInt8VG_tFZ":{"name":"generateFrom(bluetoothData:)","abstract":"<p>Generate array of MIDI events from Bluetooth data</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV4dataACSays5UInt8VG_tcfc":{"name":"init(data:)","abstract":"<p>Initialize the MIDI Event from a raw MIDIByte packet (ie. from Bluetooth)</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV6noteOn8velocity7channelACs5UInt8V_A2Htcfc":{"name":"init(noteOn:velocity:channel:)","abstract":"<p>Create note on event</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV7noteOff8velocity7channelACs5UInt8V_A2Htcfc":{"name":"init(noteOff:velocity:channel:)","abstract":"<p>Create note off event</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV13programChange7channelACs5UInt8V_AGtcfc":{"name":"init(programChange:channel:)","abstract":"<p>Create program change event</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV16controllerChange5value7channelACs5UInt8V_A2Htcfc":{"name":"init(controllerChange:value:channel:)","abstract":"<p>Create controller event</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV14midiEventsFrom17packetListPointerSayACGSPySo010MIDIPacketH0VG_tFZ":{"name":"midiEventsFrom(packetListPointer:)","abstract":"<p>Array of MIDI events from a MIDI packet list poionter</p>","parent_name":"AKMIDIEvent"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO15modulationWheelyA2CmF":{"name":"modulationWheel","abstract":"<p>Modulation Control</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO13breathControlyA2CmF":{"name":"breathControl","abstract":"<p>Breath Control (in MIDI Saxophones for example)</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO11footControlyA2CmF":{"name":"footControl","abstract":"<p>Foot Control</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO10portamentoyA2CmF":{"name":"portamento","abstract":"<p>Portamento effect</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO9dataEntryyA2CmF":{"name":"dataEntry","abstract":"<p>Data Entry</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO10mainVolumeyA2CmF":{"name":"mainVolume","abstract":"<p>Volume (Overall)</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO7balanceyA2CmF":{"name":"balance","abstract":"<p>Balance</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO3panyA2CmF":{"name":"pan","abstract":"<p>Stereo Panning</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO10expressionyA2CmF":{"name":"expression","abstract":"<p>Expression Pedal</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO3lsbyA2CmF":{"name":"lsb","abstract":"<p>Least Significant Byte</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO11damperOnOffyA2CmF":{"name":"damperOnOff","abstract":"<p>Damper Pedal, also known as Hold or Sustain</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO15portamentoOnOffyA2CmF":{"name":"portamentoOnOff","abstract":"<p>Portamento Toggle</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO14sustenutoOnOffyA2CmF":{"name":"sustenutoOnOff","abstract":"<p>Sustenuto Toggle</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO14softPedalOnOffyA2CmF":{"name":"softPedalOnOff","abstract":"<p>Soft Pedal Toggle</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO13dataEntryPlusyA2CmF":{"name":"dataEntryPlus","abstract":"<p>Data Entry Addition</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO14dataEntryMinusyA2CmF":{"name":"dataEntryMinus","abstract":"<p>Data Entry Subtraction</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO17localControlOnOffyA2CmF":{"name":"localControlOnOff","abstract":"<p>Enable local control</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO11allNotesOffyA2CmF":{"name":"allNotesOff","abstract":"<p>MIDI Panic</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO3cc0yA2CmF":{"name":"cc0","abstract":"<p>Continuous Controller Number 0</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO3cc3yA2CmF":{"name":"cc3","abstract":"<p>Continuous Controller Number 3</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO3cc9yA2CmF":{"name":"cc9","abstract":"<p>Continuous Controller Number 9</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc12yA2CmF":{"name":"cc12","abstract":"<p>Continuous Controller Number 12</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc13yA2CmF":{"name":"cc13","abstract":"<p>Continuous Controller Number 13</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc14yA2CmF":{"name":"cc14","abstract":"<p>Continuous Controller Number 14</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc15yA2CmF":{"name":"cc15","abstract":"<p>Continuous Controller Number 15</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc16yA2CmF":{"name":"cc16","abstract":"<p>Continuous Controller Number 16</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc17yA2CmF":{"name":"cc17","abstract":"<p>Continuous Controller Number 17</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc18yA2CmF":{"name":"cc18","abstract":"<p>Continuous Controller Number 18</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc19yA2CmF":{"name":"cc19","abstract":"<p>Continuous Controller Number 19</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc20yA2CmF":{"name":"cc20","abstract":"<p>Continuous Controller Number 20</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc21yA2CmF":{"name":"cc21","abstract":"<p>Continuous Controller Number 21</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc22yA2CmF":{"name":"cc22","abstract":"<p>Continuous Controller Number 22</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc23yA2CmF":{"name":"cc23","abstract":"<p>Continuous Controller Number 23</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc24yA2CmF":{"name":"cc24","abstract":"<p>Continuous Controller Number 24</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc25yA2CmF":{"name":"cc25","abstract":"<p>Continuous Controller Number 25</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc26yA2CmF":{"name":"cc26","abstract":"<p>Continuous Controller Number 26</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc27yA2CmF":{"name":"cc27","abstract":"<p>Continuous Controller Number 27</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc28yA2CmF":{"name":"cc28","abstract":"<p>Continuous Controller Number 28</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc29yA2CmF":{"name":"cc29","abstract":"<p>Continuous Controller Number 29</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc30yA2CmF":{"name":"cc30","abstract":"<p>Continuous Controller Number 30</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc31yA2CmF":{"name":"cc31","abstract":"<p>Continuous Controller Number 31</p>","parent_name":"AKMIDIControl"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC6clients6UInt32Vvp":{"name":"client","abstract":"<p>MIDI Client Reference</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC12virtualInputs6UInt32Vvp":{"name":"virtualInput","abstract":"<p>Virtual MIDI Input destination</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC13virtualOutputs6UInt32Vvp":{"name":"virtualOutput","abstract":"<p>Virtual MIDI output</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC9endpointsSDySSs6UInt32VGvp":{"name":"endpoints","abstract":"<p>Array of MIDI Endpoints</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDICACycfc":{"name":"init()","abstract":"<p>Initialize the AKMIDI system</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC18createVirtualPorts_4nameys5Int32V_SSSgtF":{"name":"createVirtualPorts(_:name:)","abstract":"<p>Create set of virtual input and output MIDI ports</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC22createVirtualInputPort_4nameys5Int32V_SSSgtF":{"name":"createVirtualInputPort(_:name:)","abstract":"<p>Create a virtual MIDI input port</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC23createVirtualOutputPort_4nameys5Int32V_SSSgtF":{"name":"createVirtualOutputPort(_:name:)","abstract":"<p>Create a virtual MIDI output port</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC19destroyVirtualPortsyyF":{"name":"destroyVirtualPorts()","abstract":"<p>Discard all virtual ports</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC23destroyVirtualInputPortSbyF":{"name":"destroyVirtualInputPort()","abstract":"<p>Closes the virtual input port, if created one already.</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC24destroyVirtualOutputPortSbyF":{"name":"destroyVirtualOutputPort()","abstract":"<p>Closes the virtual output port, if created one already.</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC10inputNamesSaySSGvp":{"name":"inputNames","abstract":"<p>Array of input names</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC11addListeneryyAA14AKMIDIListener_pF":{"name":"addListener(_:)","abstract":"<p>Add a listener to the listeners</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC14clearListenersyyF":{"name":"clearListeners()","abstract":"<p>Remove all listeners</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC14addTransformeryyAA17AKMIDITransformer_pF":{"name":"addTransformer(_:)","abstract":"<p>Add a transformer to the transformers list</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC17clearTransformersyyF":{"name":"clearTransformers()","abstract":"<p>Remove all transformers</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC9openInputyySSF":{"name":"openInput(_:)","abstract":"<p>Open a MIDI Input port</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC10closeInputyySSF":{"name":"closeInput(_:)","abstract":"<p>Close a MIDI Input port</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC14closeAllInputsyyF":{"name":"closeAllInputs()","abstract":"<p>Close all MIDI Input ports</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC16destinationNamesSaySSGvp":{"name":"destinationNames","abstract":"<p>Array of destination names</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC10openOutputyySSSgF":{"name":"openOutput(_:)","abstract":"<p>Open a MIDI Output Port</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC11sendMessageyySays5UInt8VGF":{"name":"sendMessage(_:)","abstract":"<p>Send Message with data</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC14clearEndpointsyyF":{"name":"clearEndpoints()","abstract":"<p>Clear MIDI destinations</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC9sendEventyyAA11AKMIDIEventVF":{"name":"sendEvent(_:)","abstract":"<p>Send Messsage from MIDI event data</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC17sendNoteOnMessage10noteNumber8velocity7channelys5UInt8V_A2ItF":{"name":"sendNoteOnMessage(noteNumber:velocity:channel:)","abstract":"<p>Send a Note On Message</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC18sendNoteOffMessage10noteNumber8velocity7channelys5UInt8V_A2ItF":{"name":"sendNoteOffMessage(noteNumber:velocity:channel:)","abstract":"<p>Send a Note Off Message</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC21sendControllerMessage_5value7channelys5UInt8V_A2HtF":{"name":"sendControllerMessage(_:value:channel:)","abstract":"<p>Send a Continuous Controller message</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC20sendPitchBendMessage5value7channelys6UInt16V_s5UInt8VtF":{"name":"sendPitchBendMessage(value:channel:)","abstract":"<p>Send a pitch bend message.</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC25sendNoteOnMessageWithTime10noteNumber8velocity7channel4timeys5UInt8V_A2Js6UInt64VtF":{"name":"sendNoteOnMessageWithTime(noteNumber:velocity:channel:time:)","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC26sendNoteOffMessageWithTime10noteNumber8velocity7channel4timeys5UInt8V_A2Js6UInt64VtF":{"name":"sendNoteOffMessageWithTime(noteNumber:velocity:channel:time:)","abstract":"<p>Send a Note Off Message</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC19sendMessageWithTime_4timeySays5UInt8VG_s6UInt64VtF":{"name":"sendMessageWithTime(_:time:)","abstract":"<p>Send Message with data</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC16destinationInfosSayAA12EndpointInfoVGvp":{"name":"destinationInfos","abstract":"<p>Destinations</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC10inputInfosSayAA12EndpointInfoVGvp":{"name":"inputInfos","abstract":"<p>Inputs</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html":{"name":"AKMIDI","abstract":"<p>MIDI input and output handler</p>"},"MIDI.html#/s:8AudioKit14AKMIDICallbacka":{"name":"AKMIDICallback","abstract":"<p>Function type for MIDI callbacks</p>"},"Enums/AKMIDIControl.html":{"name":"AKMIDIControl","abstract":"<p>Value of byte 2 in conjunction with AKMIDIStatusControllerChange</p>"},"Structs/AKMIDIEvent.html":{"name":"AKMIDIEvent","abstract":"<p>A container for the values that define a MIDI event</p>"},"Classes/AKMIDIInstrument.html":{"name":"AKMIDIInstrument","abstract":"<p>A version of AKInstrument specifically targeted to instruments that"},"Protocols/AKMIDIListener.html":{"name":"AKMIDIListener","abstract":"<p>Protocol that must be adhered to if you want your class to respond to MIDI</p>"},"Classes/AKMIDINode.html":{"name":"AKMIDINode","abstract":"<p>A version of AKInstrument specifically targeted to instruments that"},"Classes/AKMIDISampler.html":{"name":"AKMIDISampler","abstract":"<p>MIDI receiving Sampler</p>"},"Enums/AKMIDIStatus.html":{"name":"AKMIDIStatus","abstract":"<p>Potential MIDI Status messages</p>"},"Enums/AKMIDISystemCommand.html":{"name":"AKMIDISystemCommand","abstract":"<p>MIDI System Command</p>"},"Protocols/AKMIDITransformer.html":{"name":"AKMIDITransformer"},"Extensions/MIDIPacket.html":{"name":"MIDIPacket","abstract":"<p>Allows a MIDIPacket to be iterated through with a for statement."},"Extensions/MIDIPacketList.html":{"name":"MIDIPacketList"},"Classes/AKBluetoothMIDIButton.html":{"name":"AKBluetoothMIDIButton","abstract":"<p>A button that will pull up a Bluetooth MIDI menu</p>"},"Classes/AKCallbackInstrument.html":{"name":"AKCallbackInstrument","abstract":"<p>MIDI Instrument that triggers functions on MIDI note on/off commands</p>"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(py)masterSet":{"name":"masterSet","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(py)middleCNoteNumber":{"name":"middleCNoteNumber","abstract":"<p>Note number for standard reference note</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(py)middleCFrequency":{"name":"middleCFrequency","abstract":"<p>Frequency of standard reference note","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(py)middleCOctave":{"name":"middleCOctave","abstract":"<p>Octave number for standard reference note.  Can be negative","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(py)etNNPitchBendRangeDown":{"name":"etNNPitchBendRangeDown","abstract":"<p>Range of downwards Pitch Bend used in etNN calculation.  Must match your synthesizer&rsquo;s pitch bend DOWN range","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(py)etNNPitchBendRangeUp":{"name":"etNNPitchBendRangeUp","abstract":"<p>Range of upwards Pitch Bend used in etNN calculation.  Must match your synthesizer&rsquo;s pitch bend UP range","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(im)etNNPitchBendWithNN:":{"name":"etNNPitchBend(NN:)","abstract":"<p>Given the tuning table&rsquo;s MIDINoteNumber NN return an AKTuningTableETNN of the equivalent 12ET MIDINoteNumber plus Pitch Bend","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(im)delta12ETWithNN:":{"name":"delta12ET(NN:)","abstract":"<p>Given the tuning table&rsquo;s MIDINoteNumber NN return an AKTuningTableETNN of the equivalent 12ET MIDINoteNumber plus Pitch Bend","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(py)npo":{"name":"npo","abstract":"<p>Notes Per Octave: The count of the masterSet array</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(im)init":{"name":"init()","abstract":"<p>Initialization for standard default 12 tone equal temperament</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(im)tuningTableFromFrequencies:":{"name":"tuningTable(fromFrequencies:)","abstract":"<p>Create the tuning using the input masterSet</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(im)masterSetInCents":{"name":"masterSetInCents()","abstract":"<p>Renders and returns the masterSet values as an array of cents</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)momentOfSymmetryWithGenerator:level:murchana:":{"name":"momentOfSymmetry(generator:level:murchana:)","abstract":"<p>Creates a <q>Nested 2-interval pattern</q>, or <q>Moment of Symmetry</q>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)hexany::::":{"name":"hexany(_:_:_:_:)","abstract":"<p>Create a hexany from 4 frequencies (4 choose 2)","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)majorTetrany::::":{"name":"majorTetrany(_:_:_:_:)","abstract":"<p>Create a major tetrany from 4 frequencies (4 choose 1)</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)minorTetrany::::":{"name":"minorTetrany(_:_:_:_:)","abstract":"<p>Create a hexany from 4 frequencies (4 choose 3)</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/s:8AudioKit13AKTuningTableC13defaultTuningSiyF":{"name":"defaultTuning()","abstract":"<p>Default tuning table is 12ET.</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/s:8AudioKit13AKTuningTableC26twelveToneEqualTemperamentSiyF":{"name":"twelveToneEqualTemperament()","abstract":"<p>Create 12-tone equal temperament</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/s:8AudioKit13AKTuningTableC25thirtyOneEqualTemperamentSiyF":{"name":"thirtyOneEqualTemperament()","abstract":"<p>Create 31-tone equal temperament</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/s:8AudioKit13AKTuningTableC16equalTemperament14notesPerOctaveS2i_tF":{"name":"equalTemperament(notesPerOctave:)","abstract":"<p>Create an equal temperament with notesPerOctave</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)khiasmos22Indian":{"name":"khiasmos22Indian()","abstract":"<p>Set tuning to 22 Indian Scale.","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian00_17":{"name":"presetPersian17NorthIndian00_17()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian01Kalyan":{"name":"presetPersian17NorthIndian01Kalyan()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian02Bilawal":{"name":"presetPersian17NorthIndian02Bilawal()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian03Khamaj":{"name":"presetPersian17NorthIndian03Khamaj()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian04KafiOld":{"name":"presetPersian17NorthIndian04KafiOld()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian05Kafi":{"name":"presetPersian17NorthIndian05Kafi()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian06Asawari":{"name":"presetPersian17NorthIndian06Asawari()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian07Bhairavi":{"name":"presetPersian17NorthIndian07Bhairavi()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian08Marwa":{"name":"presetPersian17NorthIndian08Marwa()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian09Purvi":{"name":"presetPersian17NorthIndian09Purvi()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian10Lalit2":{"name":"presetPersian17NorthIndian10Lalit2()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian11Todi":{"name":"presetPersian17NorthIndian11Todi()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian12Lalit":{"name":"presetPersian17NorthIndian12Lalit()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian13NoName":{"name":"presetPersian17NorthIndian13NoName()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian14AnandBhairav":{"name":"presetPersian17NorthIndian14AnandBhairav()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian15Bhairav":{"name":"presetPersian17NorthIndian15Bhairav()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian16JogiyaTodi":{"name":"presetPersian17NorthIndian16JogiyaTodi()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian17Madhubanti":{"name":"presetPersian17NorthIndian17Madhubanti()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian18NatBhairav":{"name":"presetPersian17NorthIndian18NatBhairav()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian19AhirBhairav":{"name":"presetPersian17NorthIndian19AhirBhairav()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian20ChandraKanada":{"name":"presetPersian17NorthIndian20ChandraKanada()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian21BasantMukhari":{"name":"presetPersian17NorthIndian21BasantMukhari()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian22Champakali":{"name":"presetPersian17NorthIndian22Champakali()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian23Patdeep":{"name":"presetPersian17NorthIndian23Patdeep()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian24MohanKauns":{"name":"presetPersian17NorthIndian24MohanKauns()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian25Parameswari":{"name":"presetPersian17NorthIndian25Parameswari()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/s:8AudioKit13AKTuningTableC26presetRecurrenceRelation01SiyF":{"name":"presetRecurrenceRelation01()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/s:8AudioKit13AKTuningTableC9scalaFileySiSgSSF":{"name":"scalaFile(_:)","abstract":"<p>Use a Scala file to write the tuning table. Returns notes per octave or nil when file couldn&rsquo;t be read.</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/s:8AudioKit13AKTuningTableC11frequencies15fromScalaStringSaySdGSgSSSg_tF":{"name":"frequencies(fromScalaString:)","abstract":"<p>Get frequencies from a Scala string</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetHighlandBagPipes":{"name":"presetHighlandBagPipes()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetDiaphonicTetrachord":{"name":"presetDiaphonicTetrachord()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Protocols/AKTiming.html#/c:@M@AudioKit@objc(pl)AKTiming(im)startAt:":{"name":"start(at:)","abstract":"<p>Starts playback at a specific time.</p>","parent_name":"AKTiming"},"Protocols/AKTiming.html#/c:@M@AudioKit@objc(pl)AKTiming(im)stop":{"name":"stop()","abstract":"<p>Stops playback immediately.</p>","parent_name":"AKTiming"},"Protocols/AKTiming.html#/c:@M@AudioKit@objc(pl)AKTiming(py)isStarted":{"name":"isStarted","parent_name":"AKTiming"},"Protocols/AKTiming.html#/c:@M@AudioKit@objc(pl)AKTiming(im)setPosition:":{"name":"setPosition(_:)","abstract":"<p>Set position in playback timeline (seconds).</p>","parent_name":"AKTiming"},"Protocols/AKTiming.html#/c:@M@AudioKit@objc(pl)AKTiming(im)positionAtAudioTime:":{"name":"position(at:)","abstract":"<p>Timeline time at an audio time</p>","parent_name":"AKTiming"},"Protocols/AKTiming.html#/c:@M@AudioKit@objc(pl)AKTiming(im)audioTimeAtPosition:":{"name":"audioTime(at:)","abstract":"<p>Audio time at timeline time</p>","parent_name":"AKTiming"},"Protocols/AKTiming.html#/c:@M@AudioKit@objc(pl)AKTiming(im)prepare":{"name":"prepare()","abstract":"<p>Prepare for playback.  After prepare has been called, the node should be ready to begine playback immediately.","parent_name":"AKTiming"},"Classes/AKTester.html#/s:8AudioKit8AKTesterC15AKAudioUnitTypea":{"name":"AKAudioUnitType","parent_name":"AKTester"},"Classes/AKTester.html#/s:8AudioKit8AKTesterC20ComponentDescriptionSo0adE0VvpZ":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKTester"},"Classes/AKTester.html#/s:8AudioKit8AKTesterC3MD5SSvp":{"name":"MD5","abstract":"<p>Calculate the MD5</p>","parent_name":"AKTester"},"Classes/AKTester.html#/c:@M@AudioKit@objc(cs)AKTester(py)isStarted":{"name":"isStarted","abstract":"<p>Flag on whether or not the test is still in progress</p>","parent_name":"AKTester"},"Classes/AKTester.html#/c:@M@AudioKit@objc(cs)AKTester(im)init:samples:":{"name":"init(_:samples:)","abstract":"<p>Initialize this test node</p>","parent_name":"AKTester"},"Classes/AKTester.html#/c:@M@AudioKit@objc(cs)AKTester(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKTester"},"Classes/AKTester.html#/c:@M@AudioKit@objc(cs)AKTester(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKTester"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypeSine":{"name":"sine","abstract":"<p>Standard sine waveform</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypeTriangle":{"name":"triangle","abstract":"<p>Standard triangle waveform</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypeSquare":{"name":"square","abstract":"<p>Standard square waveform</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypeSawtooth":{"name":"sawtooth","abstract":"<p>Standard sawtooth waveform</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypeReverseSawtooth":{"name":"reverseSawtooth","abstract":"<p>Reversed sawtooth waveform</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypePositiveSine":{"name":"positiveSine","abstract":"<p>Sine wave from 0-1</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypePositiveTriangle":{"name":"positiveTriangle","abstract":"<p>Triangle waveform from 0-1</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypePositiveSquare":{"name":"positiveSquare","abstract":"<p>Square waveform from 0-1</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypePositiveSawtooth":{"name":"positiveSawtooth","abstract":"<p>Sawtooth waveform from 0-1</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypePositiveReverseSawtooth":{"name":"positiveReverseSawtooth","abstract":"<p>Reversed sawtooth waveform from 0-1</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypeZero":{"name":"zero","abstract":"<p>Zeros</p>","parent_name":"AKTableType"},"Classes/AKTable.html#/s:Sl5IndexQa":{"name":"Index","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC13IndexDistancea":{"name":"IndexDistance","parent_name":"AKTable"},"Classes/AKTable.html#/s:ST7ElementQa":{"name":"Element","parent_name":"AKTable"},"Classes/AKTable.html#/s:Sl11SubSequenceQa":{"name":"SubSequence","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC5phaseSfvp":{"name":"phase","abstract":"<p>Phase of the table</p>","parent_name":"AKTable"},"Classes/AKTable.html#/s:Sl10startIndex0B0Qzvp":{"name":"startIndex","parent_name":"AKTable"},"Classes/AKTable.html#/s:Sl8endIndex0B0Qzvp":{"name":"endIndex","parent_name":"AKTable"},"Classes/AKTable.html#/s:Sl5countSivp":{"name":"count","parent_name":"AKTable"},"Classes/AKTable.html#/s:SMy7ElementQz5IndexQzcip":{"name":"subscript(_:)","parent_name":"AKTable"},"Classes/AKTable.html#/s:SMy11SubSequenceQzSny5IndexQzGcip":{"name":"subscript(_:)","parent_name":"AKTable"},"Classes/AKTable.html#/c:@M@AudioKit@objc(cs)AKTable(im)init:phase:count:":{"name":"init(_:phase:count:)","abstract":"<p>Initialize and set up the default table</p>","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC4fileAcA11AKAudioFileC_tcfc":{"name":"init(file:)","abstract":"<p>Create table from audio file</p>","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC11phaseOffsetSivp":{"name":"phaseOffset","abstract":"<p>Offset of the phase</p>","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC04fromA4FileyACSg10Foundation3URLVFZ":{"name":"fromAudioFile(_:)","abstract":"<p>Create an AKTable with the contents of a pcmFormatFloat32 file.","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC07writeToA4FileyySSKF":{"name":"writeToAudioFile(_:)","abstract":"<p>Will write to CAF in temporary directory","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC18harmonicPitchRange13rootFrequency14octaveStepSizeSaySd_SitGSd_SdtFZ":{"name":"harmonicPitchRange(rootFrequency:octaveStepSize:)","abstract":"<p>This method will start at rootFrequency * octave, walk up by octaveStepSize, and halt before reaching nyquist.","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC22harmonicFrequencyRange2f02f114wavetableCountSaySd_SitGSd_SdSitFZ":{"name":"harmonicFrequencyRange(f0:f1:wavetableCount:)","abstract":"<p>This method will start at rootFrequency * octave, walk up by octaveStepSize, and halt before reaching nyquist.","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC8sawtooth13harmonicCount5clearySi_SbtF":{"name":"sawtooth(harmonicCount:clear:)","abstract":"<p>Set table values to sum of sines approximating a sawtooth with harmonicCount harmonics.","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC6square13harmonicCount5clearySi_SbtF":{"name":"square(harmonicCount:clear:)","abstract":"<p>Set table values to sum of sines approximating a square with harmonicCount harmonics.","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC8triangle13harmonicCount5clearySi_SbtF":{"name":"triangle(harmonicCount:clear:)","abstract":"<p>Set table values to sum of sines approximating a triangle with harmonicCount harmonics.","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC3pwm13harmonicCount6periodySi_SftF":{"name":"pwm(harmonicCount:period:)","abstract":"<p>Set table values to sum of sines approximating a pulse width of period with harmonicCount harmonics.","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC6minMaxSf0D0_Sf3maxSf03absE0tyF":{"name":"minMax()","abstract":"<p>returns a tuple with min, max, absMax</p>","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC9normalizeyyF":{"name":"normalize()","abstract":"<p>In-place normalize</p>","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC7reverseyyF":{"name":"reverse()","abstract":"<p>In-place reverse samples</p>","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC6invertyyF":{"name":"invert()","abstract":"<p>In-place invert samples</p>","parent_name":"AKTable"},"Classes/AKTable.html#/s:8AudioKit7AKTableC3msd1tSfAC_tF":{"name":"msd(t:)","abstract":"<p>compare self with t, return mean-squared distance.</p>","parent_name":"AKTable"},"Classes/AKTable.html#/s:Sl7IndicesQa":{"name":"Indices","parent_name":"AKTable"},"Classes/AKTable.html#/s:Sk5index6before5IndexQzAD_tF":{"name":"index(before:)","parent_name":"AKTable"},"Classes/AKTable.html#/s:Sl5index5after5IndexQzAD_tF":{"name":"index(after:)","parent_name":"AKTable"},"Classes/AKTable.html#/s:Sl5index_8offsetBy5IndexQzAD_SitF":{"name":"index(_:offsetBy:)","parent_name":"AKTable"},"Classes/AKTable.html#/s:Sl9formIndex5aftery0B0Qzz_tF":{"name":"formIndex(after:)","parent_name":"AKTable"},"Classes/AKTable.html#/s:Sl8distance4from2toSi5IndexQz_AEtF":{"name":"distance(from:to:)","parent_name":"AKTable"},"Classes/AKSettings/SessionCategory.html#/s:8AudioKit10AKSettingsC15SessionCategoryO7ambientyA2EmF":{"name":"ambient","abstract":"<p>Audio silenced by silent switch and screen lock - audio is mixable</p>","parent_name":"SessionCategory"},"Classes/AKSettings/SessionCategory.html#/s:8AudioKit10AKSettingsC15SessionCategoryO11soloAmbientyA2EmF":{"name":"soloAmbient","abstract":"<p>Audio is silenced by silent switch and screen lock - audio is non mixable</p>","parent_name":"SessionCategory"},"Classes/AKSettings/SessionCategory.html#/s:8AudioKit10AKSettingsC15SessionCategoryO8playbackyA2EmF":{"name":"playback","abstract":"<p>Audio is not silenced by silent switch and screen lock - audio is non mixable</p>","parent_name":"SessionCategory"},"Classes/AKSettings/SessionCategory.html#/s:8AudioKit10AKSettingsC15SessionCategoryO6recordyA2EmF":{"name":"record","abstract":"<p>Silences playback audio</p>","parent_name":"SessionCategory"},"Classes/AKSettings/SessionCategory.html#/s:8AudioKit10AKSettingsC15SessionCategoryO13playAndRecordyA2EmF":{"name":"playAndRecord","abstract":"<p>Audio is not silenced by silent switch and screen lock - audio is non mixable.","parent_name":"SessionCategory"},"Classes/AKSettings/SessionCategory.html#/s:8AudioKit10AKSettingsC15SessionCategoryO15audioProcessingyA2EmF":{"name":"audioProcessing","abstract":"<p>Disables playback and recording; deprecated in iOS 10</p>","parent_name":"SessionCategory"},"Classes/AKSettings/SessionCategory.html#/s:8AudioKit10AKSettingsC15SessionCategoryO10multiRouteyA2EmF":{"name":"multiRoute","abstract":"<p>Use to multi-route audio. May be used on input, output, or both.</p>","parent_name":"SessionCategory"},"Classes/AKSettings/SessionCategory.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"SessionCategory"},"Classes/AKSettings/RampType.html#/s:8AudioKit10AKSettingsC8RampTypeO6linearyA2EmF":{"name":"linear","parent_name":"RampType"},"Classes/AKSettings/RampType.html#/s:8AudioKit10AKSettingsC8RampTypeO11exponentialyA2EmF":{"name":"exponential","parent_name":"RampType"},"Classes/AKSettings/RampType.html#/s:8AudioKit10AKSettingsC8RampTypeO11logarithmicyA2EmF":{"name":"logarithmic","parent_name":"RampType"},"Classes/AKSettings/RampType.html#/s:8AudioKit10AKSettingsC8RampTypeO6sCurveyA2EmF":{"name":"sCurve","parent_name":"RampType"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO8shortestyA2EmF":{"name":"shortest","abstract":"<p>Shortest</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO9veryShortyA2EmF":{"name":"veryShort","abstract":"<p>Very Short</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO5shortyA2EmF":{"name":"short","abstract":"<p>Short</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO6mediumyA2EmF":{"name":"medium","abstract":"<p>Medium</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO4longyA2EmF":{"name":"long","abstract":"<p>Long</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO8veryLongyA2EmF":{"name":"veryLong","abstract":"<p>Very Long</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO4hugeyA2EmF":{"name":"huge","abstract":"<p>Huge</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO7longestyA2EmF":{"name":"longest","abstract":"<p>Longest</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO12samplesCounts6UInt32Vvp":{"name":"samplesCount","abstract":"<p>The buffer Length expressed as number of samples</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO8durationSdvp":{"name":"duration","abstract":"<p>The buffer Length expressed as a duration in seconds</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html":{"name":"BufferLength","abstract":"<p>Enum of available buffer lengths","parent_name":"AKSettings"},"Classes/AKSettings/RampType.html":{"name":"RampType","abstract":"<p>Constants for ramps used in AKParameterRamp.hpp, AKBooster, and others</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)sampleRate":{"name":"sampleRate","abstract":"<p>The sample rate in Hertz</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)channelCount":{"name":"channelCount","abstract":"<p>Number of audio channels: 2 for stereo, 1 for mono</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)audioInputEnabled":{"name":"audioInputEnabled","abstract":"<p>Whether we should be listening to audio input (microphone)</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)playbackWhileMuted":{"name":"playbackWhileMuted","abstract":"<p>Whether to allow audio playback to override the mute setting</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)audioFormat":{"name":"audioFormat","abstract":"<p>Global audio format AudioKit will default to</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)defaultToSpeaker":{"name":"defaultToSpeaker","abstract":"<p>Whether to output to the speaker (rather than receiver) when audio input is enabled</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)useBluetooth":{"name":"useBluetooth","abstract":"<p>Whether to use bluetooth when audio input is enabled</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)bluetoothOptions":{"name":"bluetoothOptions","abstract":"<p>Additional control over the options to use for bluetooth</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)allowAirPlay":{"name":"allowAirPlay","abstract":"<p>Whether AirPlay is enabled when audio input is enabled</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)rampDuration":{"name":"rampDuration","abstract":"<p>Global default rampDuration value</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)notificationsEnabled":{"name":"notificationsEnabled","abstract":"<p>Allows AudioKit to send Notifications</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)bufferLength":{"name":"bufferLength","abstract":"<p>AudioKit buffer length is set using AKSettings.BufferLength","parent_name":"AKSettings"},"Classes/AKSettings.html#/ioBufferDuration":{"name":"ioBufferDuration","abstract":"<p>The hardware ioBufferDuration. Setting this will request the new value, getting","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)ioBufferDuration":{"name":"ioBufferDuration","abstract":"<p>The hardware ioBufferDuration. Setting this will request the new value, getting","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)recordingBufferLength":{"name":"recordingBufferLength","abstract":"<p>AudioKit recording buffer length is set using AKSettings.BufferLength","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)fixTruncatedRecordings":{"name":"fixTruncatedRecordings","abstract":"<p>If set to true, Recording will stop after some delay to compensate","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)disableAVAudioSessionCategoryManagement":{"name":"disableAVAudioSessionCategoryManagement","abstract":"<p>Enable AudioKit AVAudioSession Category Management</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)disableAudioSessionDeactivationOnStop":{"name":"disableAudioSessionDeactivationOnStop","abstract":"<p>If set to true, AudioKit will not deactivate the AVAudioSession when stopping</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)enableRouteChangeHandling":{"name":"enableRouteChangeHandling","abstract":"<p>If set to false, AudioKit will not handle the AVAudioSession route change","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)enableCategoryChangeHandling":{"name":"enableCategoryChangeHandling","abstract":"<p>If set to false, AudioKit will not handle the AVAudioSession category change","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)enableLogging":{"name":"enableLogging","abstract":"<p>Turn off AudioKit logging</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)appSupportsBackgroundAudio":{"name":"appSupportsBackgroundAudio","abstract":"<p>Checks the application&rsquo;s info.plist to see if UIBackgroundModes includes <q>audio</q>.","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@CM@AudioKit@objc(cs)AKSettings(cpy)session":{"name":"session","abstract":"<p>Shortcut for AVAudioSession.sharedInstance()</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@CM@AudioKit@objc(cs)AKSettings(cm)setSessionWithCategory:options:error:":{"name":"setSession(category:options:)","abstract":"<p>Convenience method accessible from Objective-C</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@CM@AudioKit@objc(cs)AKSettings(cm)setSessionWithCategory:with:error:":{"name":"setSession(category:with:)","abstract":"<p>Set the audio session type</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@CM@AudioKit@objc(cs)AKSettings(cm)computedSessionCategory":{"name":"computedSessionCategory()","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@CM@AudioKit@objc(cs)AKSettings(cm)computedSessionOptions":{"name":"computedSessionOptions()","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@CM@AudioKit@objc(cs)AKSettings(cpy)headPhonesPlugged":{"name":"headPhonesPlugged","abstract":"<p>Checks if headphones are connected","parent_name":"AKSettings"},"Classes/AKSettings/SessionCategory.html":{"name":"SessionCategory","abstract":"<p>Enum of available AVAudioSession Categories</p>","parent_name":"AKSettings"},"Classes/AKPeriodicFunction.html#/c:@M@AudioKit@objc(cs)AKPeriodicFunction(im)initWithEvery:handler:":{"name":"init(every:handler:)","abstract":"<p>Repeat this loop at a given period with a code block</p>","parent_name":"AKPeriodicFunction"},"Classes/AKPeriodicFunction.html#/s:8AudioKit18AKPeriodicFunctionC9frequency7handlerACSd_yyctcfc":{"name":"init(frequency:handler:)","abstract":"<p>Repeat this loop at a given frequency with a code block</p>","parent_name":"AKPeriodicFunction"},"Protocols/AKOutput.html#/c:@M@AudioKit@objc(pl)AKOutput(py)outputNode":{"name":"outputNode","abstract":"<p>The output of this node can be connected to the inputNode of an AKInput.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE16connectionPointsSaySo22AVAudioConnectionPointCGvp":{"name":"connectionPoints","abstract":"<p>Output connection points of outputNode.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE16disconnectOutputyyF":{"name":"disconnectOutput()","abstract":"<p>Disconnects all outputNode&rsquo;s output connections.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE16disconnectOutput4fromyAA7AKInput_p_tF":{"name":"disconnectOutput(from:)","abstract":"<p>Breaks connection from outputNode to an input&rsquo;s node if exists.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE7connect2toAA7AKInput_pAaF_p_tF":{"name":"connect(to:)","abstract":"<p>Add a connection to an input using the input&rsquo;s nextInput for the bus.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE7connect2toAA7AKInput_pAA0F10ConnectionC_tF":{"name":"connect(to:)","abstract":"<p>Add a connection to input.node on input.bus.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE7connect2to3busAA7AKInput_pAaG_p_SitF":{"name":"connect(to:bus:)","abstract":"<p>Add a connection to node on a specific bus.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE7connect2toSayAA7AKInput_pGAG_tF":{"name":"connect(to:)","abstract":"<p>Add an output connection to each input in inputs.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE7connect8toInputsSayAA7AKInput_pGSayAA0G10ConnectionCG_tF":{"name":"connect(toInputs:)","abstract":"<p>Add an output connection to each connectionPoint in toInputs.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE7connect2toySo22AVAudioConnectionPointC_tF":{"name":"connect(to:)","abstract":"<p>Add an output connectionPoint.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE9setOutput2toAA7AKInput_pAaF_p_tF":{"name":"setOutput(to:)","abstract":"<p>Sets output connection, removes existing output connections.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE9setOutput2to3bus6formatAA7AKInput_pAaH_p_SiSo13AVAudioFormatCSgtF":{"name":"setOutput(to:bus:format:)","abstract":"<p>Sets output connection, removes previously existing output connections.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE9setOutput2to6formatSayAA7AKInput_pGAH_So13AVAudioFormatCSgtF":{"name":"setOutput(to:format:)","abstract":"<p>Sets output connections to an array of inputs, removes previously existing output connections.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE9setOutput8toInputsSayAA7AKInput_pGSayAA0H10ConnectionCG_tF":{"name":"setOutput(toInputs:)","abstract":"<p>Sets output connections to an array of inputConnectios, removes previously existing output connections.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE9setOutput8toInputs6formatSayAA7AKInput_pGSayAA0I10ConnectionCG_So13AVAudioFormatCSgtF":{"name":"setOutput(toInputs:format:)","abstract":"<p>Sets output connections to an array of inputConnectios, removes previously existing output connections.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE9setOutput2toySo22AVAudioConnectionPointC_tF":{"name":"setOutput(to:)","abstract":"<p>Sets output connections to a single connectionPoint, removes previously existing output connections.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE9setOutput2to6formatySo22AVAudioConnectionPointC_So0H6FormatCSgtF":{"name":"setOutput(to:format:)","abstract":"<p>Sets output connections to a single connectionPoint, removes previously existing output connections.</p>","parent_name":"AKOutput"},"Protocols/AKOutput.html#/s:8AudioKit8AKOutputPAAE9setOutput2to6formatySaySo22AVAudioConnectionPointCG_So0H6FormatCSgtF":{"name":"setOutput(to:format:)","abstract":"<p>Sets output connections to an array of connectionPoints, removes previously existing output connections.</p>","parent_name":"AKOutput"},"Classes/AKNodeRecorder.html#/c:@M@AudioKit@objc(cs)AKNodeRecorder(py)isRecording":{"name":"isRecording","abstract":"<p>True if we are recording.</p>","parent_name":"AKNodeRecorder"},"Classes/AKNodeRecorder.html#/s:8AudioKit14AKNodeRecorderC16durationToRecordSdvp":{"name":"durationToRecord","abstract":"<p>An optional duration for the recording to auto-stop when reached</p>","parent_name":"AKNodeRecorder"},"Classes/AKNodeRecorder.html#/s:8AudioKit14AKNodeRecorderC16recordedDurationSdvp":{"name":"recordedDuration","abstract":"<p>Duration of recording</p>","parent_name":"AKNodeRecorder"},"Classes/AKNodeRecorder.html#/s:8AudioKit14AKNodeRecorderC9audioFileAA07AKAudioF0CSgvp":{"name":"audioFile","abstract":"<p>return the AKAudioFile for reading</p>","parent_name":"AKNodeRecorder"},"Classes/AKNodeRecorder.html#/c:@M@AudioKit@objc(cs)AKNodeRecorder(im)initWithNode:file:error:":{"name":"init(node:file:)","abstract":"<p>Initialize the node recorder</p>","parent_name":"AKNodeRecorder"},"Classes/AKNodeRecorder.html#/c:@M@AudioKit@objc(cs)AKNodeRecorder(im)recordAndReturnError:":{"name":"record()","abstract":"<p>Start recording</p>","parent_name":"AKNodeRecorder"},"Classes/AKNodeRecorder.html#/c:@M@AudioKit@objc(cs)AKNodeRecorder(im)stop":{"name":"stop()","abstract":"<p>Stop recording</p>","parent_name":"AKNodeRecorder"},"Classes/AKNodeRecorder.html#/s:8AudioKit14AKNodeRecorderC5resetyyKF":{"name":"reset()","abstract":"<p>Reset the AKAudioFile to clear previous recordings</p>","parent_name":"AKNodeRecorder"},"Classes/AKMicrophoneTracker.html#/s:8AudioKit19AKMicrophoneTrackerC9amplitudeSdvp":{"name":"amplitude","abstract":"<p>Tracked amplitude</p>","parent_name":"AKMicrophoneTracker"},"Classes/AKMicrophoneTracker.html#/s:8AudioKit19AKMicrophoneTrackerC9frequencySdvp":{"name":"frequency","abstract":"<p>Tracked frquency</p>","parent_name":"AKMicrophoneTracker"},"Classes/AKMicrophoneTracker.html#/s:8AudioKit19AKMicrophoneTrackerC5startyyF":{"name":"start()","abstract":"<p>Start the analysis</p>","parent_name":"AKMicrophoneTracker"},"Classes/AKMicrophoneTracker.html#/s:8AudioKit19AKMicrophoneTrackerC4stopyyF":{"name":"stop()","abstract":"<p>Stop the analysis</p>","parent_name":"AKMicrophoneTracker"},"Classes/AKMicrophoneTracker.html#/s:8AudioKit19AKMicrophoneTrackerC7hopSize9peakCountACSi_Sitcfc":{"name":"init(hopSize:peakCount:)","abstract":"<p>Initialize the tracker</p>","parent_name":"AKMicrophoneTracker"},"Protocols/AKInput.html#/s:8AudioKit7AKInputP9inputNodeSo07AVAudioE0Cvp":{"name":"inputNode","abstract":"<p>The node that an output&rsquo;s node can connect to.  Default implementation will return outputNode.</p>","parent_name":"AKInput"},"Protocols/AKInput.html#/s:8AudioKit7AKInputP9nextInputAA0C10ConnectionCvp":{"name":"nextInput","abstract":"<p>The input bus that should be used for an input connection.  Default implementation is 0.  Multi-input nodes","parent_name":"AKInput"},"Protocols/AKInput.html#/s:8AudioKit7AKInputP15disconnectInputyyF":{"name":"disconnectInput()","abstract":"<p>Disconnects all inputs</p>","parent_name":"AKInput"},"Protocols/AKInput.html#/s:8AudioKit7AKInputP15disconnectInput3busySi_tF":{"name":"disconnectInput(bus:)","abstract":"<p>Disconnects input on a bus.</p>","parent_name":"AKInput"},"Protocols/AKInput.html#/s:8AudioKit7AKInputP5inputyAA0C10ConnectionCSiF":{"name":"input(_:)","abstract":"<p>Creates an input connection object with a bus number.</p>","parent_name":"AKInput"},"Classes/AKDevice.html#/s:8AudioKit8AKDeviceC4nameSSvp":{"name":"name","abstract":"<p>The human-readable name for the device.</p>","parent_name":"AKDevice"},"Classes/AKDevice.html#/s:8AudioKit8AKDeviceC14nInputChannelsSiSgvp":{"name":"nInputChannels","parent_name":"AKDevice"},"Classes/AKDevice.html#/s:8AudioKit8AKDeviceC15nOutputChannelsSiSgvp":{"name":"nOutputChannels","parent_name":"AKDevice"},"Classes/AKDevice.html#/s:8AudioKit8AKDeviceC8deviceIDSSvp":{"name":"deviceID","abstract":"<p>The device identifier.</p>","parent_name":"AKDevice"},"Classes/AKDevice.html#/c:@M@AudioKit@objc(cs)AKDevice(im)initWithName:deviceID:dataSource:":{"name":"init(name:deviceID:dataSource:)","abstract":"<p>Initialize the device</p>","parent_name":"AKDevice"},"Classes/AKDevice.html#/init(ezAudioDevice:)":{"name":"init(ezAudioDevice:)","parent_name":"AKDevice"},"Classes/AKDevice.html#/c:@M@AudioKit@objc(cs)AKDevice(py)description":{"name":"description","abstract":"<p>Printable device description</p>","parent_name":"AKDevice"},"Classes/AKCustomUgen.html#/c:@M@AudioKit@objc(cs)AKCustomUgen(py)name":{"name":"name","abstract":"<p>Name of the Ugen</p>","parent_name":"AKCustomUgen"},"Classes/AKCustomUgen.html#/c:@M@AudioKit@objc(cs)AKCustomUgen(py)argTypes":{"name":"argTypes","abstract":"<p>String describing the arugments: f for float / s for string, e.g. <q>fsf</q></p>","parent_name":"AKCustomUgen"},"Classes/AKCustomUgen.html#/c:@M@AudioKit@objc(cs)AKCustomUgen(py)userData":{"name":"userData","abstract":"<p>Custom object that may be passed in</p>","parent_name":"AKCustomUgen"},"Classes/AKCustomUgen.html#/s:8AudioKit12AKCustomUgenC15computeFunctionyyAC_So13AKSporthStackCypSgztcvp":{"name":"computeFunction","abstract":"<p>Callback / Closure / Function to be called</p>","parent_name":"AKCustomUgen"},"Classes/AKCustomUgen.html#/c:@M@AudioKit@objc(cs)AKCustomUgen(py)stack":{"name":"stack","abstract":"<p>The sporth stack</p>","parent_name":"AKCustomUgen"},"Classes/AKCustomUgen.html#/s:8AudioKit12AKCustomUgenC4name8argTypes8userData15computeFunctionACSS_SSypSgyAC_So13AKSporthStackCAHztctcfc":{"name":"init(name:argTypes:userData:computeFunction:)","abstract":"<p>Initialize the custom unit generator</p>","parent_name":"AKCustomUgen"},"Classes/AKCustomUgen.html#/c:@M@AudioKit@objc(cs)AKCustomUgen(im)duplicate":{"name":"duplicate()","abstract":"<p>Duplicate the Ugen</p>","parent_name":"AKCustomUgen"},"Classes/AKCustomUgen.html#/c:@M@AudioKit@objc(cs)AKCustomUgen(py)callComputeFunction":{"name":"callComputeFunction","abstract":"<p>Executre the compute function</p>","parent_name":"AKCustomUgen"},"Protocols/AKComponent.html#/s:8AudioKit11AKComponentP15AKAudioUnitTypeQa":{"name":"AKAudioUnitType","parent_name":"AKComponent"},"Protocols/AKComponent.html#/s:8AudioKit11AKComponentPAAE8registeryyFZ":{"name":"register()","abstract":"<p>Register the audio unit subclass</p>","parent_name":"AKComponent"},"Classes/AKAudioFile/ExportFormat.html#/s:8AudioKit11AKAudioFileC12ExportFormatO3wavyA2EmF":{"name":"wav","abstract":"<p>Waveform Audio File Format (WAVE, or more commonly known as WAV due to its filename extension)</p>","parent_name":"ExportFormat"},"Classes/AKAudioFile/ExportFormat.html#/s:8AudioKit11AKAudioFileC12ExportFormatO3aifyA2EmF":{"name":"aif","abstract":"<p>Audio Interchange File Format</p>","parent_name":"ExportFormat"},"Classes/AKAudioFile/ExportFormat.html#/s:8AudioKit11AKAudioFileC12ExportFormatO3mp4yA2EmF":{"name":"mp4","abstract":"<p>MPEG-4 Part 14 Compression</p>","parent_name":"ExportFormat"},"Classes/AKAudioFile/ExportFormat.html#/s:8AudioKit11AKAudioFileC12ExportFormatO3m4ayA2EmF":{"name":"m4a","abstract":"<p>MPEG 4 Audio</p>","parent_name":"ExportFormat"},"Classes/AKAudioFile/ExportFormat.html#/s:8AudioKit11AKAudioFileC12ExportFormatO3cafyA2EmF":{"name":"caf","abstract":"<p>Core Audio Format</p>","parent_name":"ExportFormat"},"Classes/AKAudioFile/BaseDirectory.html#/s:8AudioKit11AKAudioFileC13BaseDirectoryO4tempyA2EmF":{"name":"temp","abstract":"<p>Temporary directory</p>","parent_name":"BaseDirectory"},"Classes/AKAudioFile/BaseDirectory.html#/s:8AudioKit11AKAudioFileC13BaseDirectoryO9documentsyA2EmF":{"name":"documents","abstract":"<p>Documents directory</p>","parent_name":"BaseDirectory"},"Classes/AKAudioFile/BaseDirectory.html#/s:8AudioKit11AKAudioFileC13BaseDirectoryO9resourcesyA2EmF":{"name":"resources","abstract":"<p>Resources directory</p>","parent_name":"BaseDirectory"},"Classes/AKAudioFile/BaseDirectory.html#/s:8AudioKit11AKAudioFileC13BaseDirectoryO6customyA2EmF":{"name":"custom","abstract":"<p>Same directory as the input file</p>","parent_name":"BaseDirectory"},"Classes/AKAudioFile/BaseDirectory.html":{"name":"BaseDirectory","abstract":"<p>Common places for files</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC7avAssetSo10AVURLAssetCvp":{"name":"avAsset","abstract":"<p>Returns an AVAsset from the AKAudioFile</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC16FloatChannelDataa":{"name":"FloatChannelData","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC16floatChannelDataSaySaySfGGSgvp":{"name":"floatChannelData","abstract":"<p>Returns audio data as an <code>Array</code> of <code>Float</code> Arrays.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC9pcmBufferSo16AVAudioPCMBufferCvp":{"name":"pcmBuffer","abstract":"<p>returns audio data as an AVAudioPCMBuffer</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC8maxLevelSfvp":{"name":"maxLevel","abstract":"<p>returns the peak level expressed in dB ( -&gt; Float).</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@M@AudioKit@objc(cs)AKAudioFile(im)initForReading:error:":{"name":"init(forReading:)","abstract":"<p>Initialize the audio file</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@M@AudioKit@objc(cs)AKAudioFile(im)initForReading:commonFormat:interleaved:error:":{"name":"init(forReading:commonFormat:interleaved:)","abstract":"<p>Initialize the audio file</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@M@AudioKit@objc(cs)AKAudioFile(im)initForWriting:settings:commonFormat:interleaved:error:":{"name":"init(forWriting:settings:commonFormat:interleaved:)","abstract":"<p>Initialize the audio file</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@M@AudioKit@objc(cs)AKAudioFile(im)initForWriting:settings:error:":{"name":"init(forWriting:settings:)","abstract":"<p>Super.init inherited from AVAudioFile superclass</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC04readD4Name7baseDirACSS_AC13BaseDirectoryOtKcfc":{"name":"init(readFileName:baseDir:)","abstract":"<p>Opens a file for reading.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC7writeIn4name8settingsA2C13BaseDirectoryO_SSSgSDySSypGtKcfc":{"name":"init(writeIn:name:settings:)","abstract":"<p>Initialize file for recording / writing purpose</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC06createD10FromFloats7baseDir4nameACSaySaySfGG_AC13BaseDirectoryOSStKcfc":{"name":"init(createFileFromFloats:baseDir:name:)","abstract":"<p>Instantiate a file from Floats Arrays.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC20fromAVAudioPCMBuffer7baseDir4nameACSo0fG0C_AC13BaseDirectoryOSStKcfc":{"name":"init(fromAVAudioPCMBuffer:baseDir:name:)","abstract":"<p>Convenience init to instantiate a file from an AVAudioPCMBuffer.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC7samplerAA14AKAppleSamplerCSgvp":{"name":"sampler","abstract":"<p>Create an AKAppleSampler loaded with the current AKAudioFile</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC11midiSamplerAA13AKMIDISamplerCSgvp":{"name":"midiSampler","abstract":"<p>Create an AKMIDISampler loaded with the current AKAudioFile</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC6playerAA8AKPlayerCvp":{"name":"player","abstract":"<p>Create an AKAudioPlayer to play the current AKAudioFile</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC10normalized7baseDir4name11newMaxLevelA2C13BaseDirectoryO_SSSftKF":{"name":"normalized(baseDir:name:newMaxLevel:)","abstract":"<p>Normalize an AKAudioFile to have a peak of newMaxLevel dB.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC8reversed7baseDir4nameA2C13BaseDirectoryO_SStKF":{"name":"reversed(baseDir:name:)","abstract":"<p>Returns an AKAudioFile with audio reversed (will playback in reverse from end to beginning).</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC10appendedBy4file7baseDir4nameA2C_AC13BaseDirectoryOSStKF":{"name":"appendedBy(file:baseDir:name:)","abstract":"<p>Returns an AKAudioFile with appended audio data from another AKAudioFile.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC9extracted10fromSample02toG07baseDir4nameACs5Int64V_AjC13BaseDirectoryOSStKF":{"name":"extracted(fromSample:toSample:baseDir:name:)","abstract":"<p>Returns an AKAudioFile that will contain a range of samples from the current AKAudioFile</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC20AsyncProcessCallbacka":{"name":"AsyncProcessCallback","abstract":"<p>typealias for AKAudioFile Async Process Completion Handler</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile/ExportFormat.html":{"name":"ExportFormat","abstract":"<p>ExportFormat enum to set target format when exporting AKAudiofiles</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC23queuedAsyncProcessCountSivpZ":{"name":"queuedAsyncProcessCount","abstract":"<p>Returns the remaining not completed queued Async processes (Int)</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC28scheduledAsyncProcessesCountSivpZ":{"name":"scheduledAsyncProcessesCount","abstract":"<p>Returns the total scheduled Async processes count (Int)</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC28completedAsyncProcessesCountSivpZ":{"name":"completedAsyncProcessesCount","abstract":"<p>Returns the completed Async processes count (Int)</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC23normalizeAsynchronously7baseDir4name11newMaxLevel17completionHandleryAC13BaseDirectoryO_SSSfyACSg_So7NSErrorCSgtctF":{"name":"normalizeAsynchronously(baseDir:name:newMaxLevel:completionHandler:)","abstract":"<p>Process the current AKAudioFile in background to return an","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC21reverseAsynchronously7baseDir4name17completionHandleryAC13BaseDirectoryO_SSyACSg_So7NSErrorCSgtctF":{"name":"reverseAsynchronously(baseDir:name:completionHandler:)","abstract":"<p>Process the current AKAudioFile in background to return the current AKAudioFile reversed (will play backward)</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC20appendAsynchronously4file7baseDir4name17completionHandleryAC_AC13BaseDirectoryOSSyACSg_So7NSErrorCSgtctF":{"name":"appendAsynchronously(file:baseDir:name:completionHandler:)","abstract":"<p>Process an AKAudioFile in background to return an AKAudioFile with appended audio data from another AKAudioFile.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC21extractAsynchronously10fromSample02toH07baseDir4name17completionHandlerys5Int64V_AkC13BaseDirectoryOSSyACSg_So7NSErrorCSgtctF":{"name":"extractAsynchronously(fromSample:toSample:baseDir:name:completionHandler:)","abstract":"<p>Process the current AKAudioFile in background to return an AKAudioFile with an extracted range of audio data.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC20exportAsynchronously4name7baseDir0E6Format10fromSample02toL08callbackySS_AC13BaseDirectoryOAC06ExportJ0Os5Int64VAPyACSg_So7NSErrorCSgtctF":{"name":"exportAsynchronously(name:baseDir:exportFormat:fromSample:toSample:callback:)","abstract":"<p>Exports Asynchronously to a new AKAudiofile with trimming options.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC6silent7samples7baseDir4nameACs5Int64V_AC13BaseDirectoryOSStKFZ":{"name":"silent(samples:baseDir:name:)","abstract":"<p>Returns a silent AKAudioFile with a length set in samples.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC8findPeak9pcmBufferSdSo16AVAudioPCMBufferC_tFZ":{"name":"findPeak(pcmBuffer:)","parent_name":"AKAudioFile"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cpy)engine":{"name":"engine","abstract":"<p>Reference to the AV Audio Engine</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/s:8AudioKitAAC4midiAA6AKMIDICvpZ":{"name":"midi","abstract":"<p>Reference to singleton MIDI</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cpy)output":{"name":"output","abstract":"<p>An audio output operation that most applications will need to use last</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/devices":{"name":"devices","abstract":"<p>Enumerate the list of available devices.</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cpy)inputDevices":{"name":"inputDevices","abstract":"<p>Enumerate the list of available input devices.</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cpy)outputDevices":{"name":"outputDevices","abstract":"<p>Enumerate the list of available output devices.</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cpy)inputDevice":{"name":"inputDevice","abstract":"<p>The name of the current input device, if available.</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cpy)outputDevice":{"name":"outputDevice","abstract":"<p>The name of the current output device, if available.</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cm)setInputDevice:error:":{"name":"setInputDevice(_:)","abstract":"<p>Change the preferred input device, giving it one of the names from the list of available inputs.</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cm)setOutputDevice:error:":{"name":"setOutputDevice(_:)","abstract":"<p>Change the preferred output device, giving it one of the names from the list of available output.</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cm)disconnectAllInputs":{"name":"disconnectAllInputs()","abstract":"<p>Disconnect all inputs</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@CM@AudioKit@objc(cs)AudioKit(cm)connect:to:fromBus:format:":{"name":"connect(_:to:fromBus:format:)","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@CM@AudioKit@objc(cs)AudioKit(cm)connect:to:fromBus:toBus:format:":{"name":"connect(_:to:fromBus:toBus:format:)","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@CM@AudioKit@objc(cs)AudioKit(cm)connect:to:format:":{"name":"connect(_:to:format:)","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@CM@AudioKit@objc(cs)AudioKit(cm)detachWithNodes:":{"name":"detach(nodes:)","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@CM@AudioKit@objc(cs)AudioKit(cm)renderToFile:duration:error:prerender:":{"name":"renderToFile(_:duration:prerender:)","abstract":"<p>Render output to an AVAudioFile for a duration.</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/s:8AudioKitAAC16printConnectionsyyFZ":{"name":"printConnections()","parent_name":"AudioKit"},"Classes/AudioKit.html#/s:8AudioKitAAC5start21withPeriodicFunctionsyAA18AKPeriodicFunctionCd_tKFZ":{"name":"start(withPeriodicFunctions:)","abstract":"<p>Start up the audio engine with periodic functions</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@CM@AudioKit@objc(cs)AudioKit(cm)startAndReturnError:":{"name":"start()","abstract":"<p>Start up the audio engine</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@CM@AudioKit@objc(cs)AudioKit(cm)stopAndReturnError:":{"name":"stop()","abstract":"<p>Stop the audio engine</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@CM@AudioKit@objc(cs)AudioKit(cpy)format":{"name":"format","abstract":"<p>Format of AudioKit Nodes</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@CM@AudioKit@objc(cs)AudioKit(cpy)tester":{"name":"tester","abstract":"<p>Testing AKNode</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@CM@AudioKit@objc(cs)AudioKit(cm)testWithNode:duration:error:afterStart:":{"name":"test(node:duration:afterStart:)","abstract":"<p>Test the output of a given node</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@CM@AudioKit@objc(cs)AudioKit(cm)auditionTestWithNode:duration:error:":{"name":"auditionTest(node:duration:)","abstract":"<p>Audition the test to hear what it sounds like</p>","parent_name":"AudioKit"},"Classes/AudioKit.html":{"name":"AudioKit","abstract":"<p>Top level AudioKit managing class</p>"},"Classes/AKAudioFile.html":{"name":"AKAudioFile","abstract":"<p>Audio file, inherits from AVAudioFile and adds functionality</p>"},"Protocols/AKComponent.html":{"name":"AKComponent","abstract":"<p>Helpful in reducing repetitive code in AudioKit</p>"},"Classes/AKCustomUgen.html":{"name":"AKCustomUgen","abstract":"<p>Custom Sporth Unit Generator (Ugen)</p>"},"Classes/AKDevice.html":{"name":"AKDevice","abstract":"<p>Wrapper for audio device selection</p>"},"Protocols/AKInput.html":{"name":"AKInput","abstract":"<p>Manages connections to inputNode.</p>"},"AudioKit Core.html#/s:8AudioKit5AKLog8fullname4file4line_ySS_SSSiypdtF":{"name":"AKLog(fullname:file:line:_:)","abstract":"<p>Wrapper for printing out status messages to the console,"},"Classes/AKMicrophoneTracker.html":{"name":"AKMicrophoneTracker","abstract":"<p>An easy to use class to do usual microphone tracking</p>"},"Classes/AKNodeRecorder.html":{"name":"AKNodeRecorder","abstract":"<p>Simple audio recorder class</p>"},"Protocols/AKOutput.html":{"name":"AKOutput","abstract":"<p>Simplify making connections from a node.</p>"},"Classes/AKPeriodicFunction.html":{"name":"AKPeriodicFunction","abstract":"<p>A class to periodically perform a callback</p>"},"Classes/AKSettings.html":{"name":"AKSettings","abstract":"<p>Global settings for AudioKit</p>"},"Classes/AKTable.html":{"name":"AKTable","abstract":"<p>A table of values accessible as a waveform or lookup mechanism</p>"},"Enums/AKTableType.html":{"name":"AKTableType","abstract":"<p>Supported default table types</p>"},"Classes/AKTester.html":{"name":"AKTester","abstract":"<p>Testing node</p>"},"Protocols/AKTiming.html":{"name":"AKTiming","abstract":"<p>A timing protocol used for syncronizing different audio sources.</p>"},"AudioKit Core.html#/s:8AudioKit5AKTryyyyyKcKF":{"name":"AKTry(_:)"},"Classes/AKTuningTable.html":{"name":"AKTuningTable","abstract":"<p>AKTuningTable provides high-level methods to create musically useful tuning tables</p>"},"AudioKit Core.html#/s:8AudioKit10CheckErroryys5Int32VF":{"name":"CheckError(_:)"},"AudioKit Core.html#/s:8AudioKit6fourCCys6UInt32VSSF":{"name":"fourCC(_:)","abstract":"<p>Helper function to convert codes for Audio Units</p>"},"AudioKit Core.html#/s:8AudioKit3gggoiyAA7AKInput_pAA8AKOutput_p_AaC_ptF":{"name":">>>(_:_:)"},"AudioKit Core.html#/s:8AudioKit3gggoiySayAA7AKInput_pGAA8AKOutput_p_ADtF":{"name":">>>(_:_:)"},"AudioKit Core.html#/s:8AudioKit3gggoiyAA7AKInput_pSayAA8AKOutput_pG_AaC_ptF":{"name":">>>(_:_:)"},"AudioKit Core.html#/s:8AudioKit3gggoiyAA7AKInput_pAA8AKOutput_p_AA0D10ConnectionCtF":{"name":">>>(_:_:)"},"AudioKit Core.html#/s:8AudioKit3gggoiySayAA7AKInput_pGAA8AKOutput_p_SayAA0D10ConnectionCGtF":{"name":">>>(_:_:)"},"AudioKit Core.html#/s:8AudioKit3gggoiyyAA8AKOutput_p_So22AVAudioConnectionPointCtF":{"name":">>>(_:_:)"},"AudioKit Core.html":{"name":"AudioKit Core"},"MIDI.html":{"name":"MIDI"},"Sequencer.html":{"name":"Sequencer"},"Nodes.html":{"name":"Nodes"},"Analysis Nodes.html":{"name":"Analysis Nodes"},"Delay Nodes.html":{"name":"Delay Nodes"},"Distortion Nodes.html":{"name":"Distortion Nodes"},"Dynamics Nodes.html":{"name":"Dynamics Nodes"},"Effects Nodes.html":{"name":"Effects Nodes"},"Modulation Effect Nodes.html":{"name":"Modulation Effect Nodes"},"Envelopes.html":{"name":"Envelopes"},"Filter Nodes.html":{"name":"Filter Nodes"},"Reverb Nodes.html":{"name":"Reverb Nodes"},"Noise Generator Nodes.html":{"name":"Noise Generator Nodes"},"Oscillator Nodes.html":{"name":"Oscillator Nodes"},"Physical Models.html":{"name":"Physical Models"},"Input Node.html":{"name":"Input Node"},"Mixing Nodes.html":{"name":"Mixing Nodes"},"Playback Nodes.html":{"name":"Playback Nodes"},"Operations.html":{"name":"Operations"},"Math.html":{"name":"Math"},"Random Number Generators.html":{"name":"Random Number Generators"},"Taps.html":{"name":"Taps"},"Apple Extensions.html":{"name":"Apple Extensions"},"Other Classes.html":{"name":"Other Classes","abstract":"<p>The following classes are available globally.</p>"},"Other Global Variables.html":{"name":"Other Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Other Enums.html":{"name":"Other Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Other Extensions.html":{"name":"Other Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Other Functions.html":{"name":"Other Functions","abstract":"<p>The following functions are available globally.</p>"},"Other Protocols.html":{"name":"Other Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Other Structs.html":{"name":"Other Structures","abstract":"<p>The following structures are available globally.</p>"},"Other Typealiases.html":{"name":"Other Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}