{"Other Typealiases.html#/s:8AudioKit6Samplea":{"name":"Sample","abstract":"<p>A Sample type, just a UInt32</p>"},"Other Typealiases.html#/s:8AudioKit11AKCCallbacka":{"name":"AKCCallback","abstract":"<p>Callback function that can be called from C</p>"},"Other Typealiases.html#/s:8AudioKit15AKRawMIDIPacketa":{"name":"AKRawMIDIPacket","abstract":"<p>Temporary hack for Xcode 7.3.1 - Appreciate improvements to this if you want to make a go of it!</p>"},"Other Typealiases.html#/s:8AudioKit14AKMIDICallbacka":{"name":"AKMIDICallback","abstract":"<p>Function type for MIDI callbacks</p>"},"Structs/AudioUnitPropertyListener.html#/s:8AudioKit0A20UnitPropertyListenerVACys13OpaquePointerV_s6UInt32Vtc8callback_tcfc":{"name":"init(callback:)","abstract":"<p>Initialize the listener with a callback</p>","parent_name":"AudioUnitPropertyListener"},"Structs/EndpointInfo.html#/s:8AudioKit12EndpointInfoV4nameSSv":{"name":"name","abstract":"<p>Unique name</p>","parent_name":"EndpointInfo"},"Structs/EndpointInfo.html#/s:8AudioKit12EndpointInfoV11displayNameSSv":{"name":"displayName","abstract":"<p>Dispaly name</p>","parent_name":"EndpointInfo"},"Structs/EndpointInfo.html#/s:8AudioKit12EndpointInfoV5modelSSv":{"name":"model","abstract":"<p>Model information</p>","parent_name":"EndpointInfo"},"Structs/EndpointInfo.html#/s:8AudioKit12EndpointInfoV12manufacturerSSv":{"name":"manufacturer","abstract":"<p>Manufacturer</p>","parent_name":"EndpointInfo"},"Structs/EndpointInfo.html#/s:8AudioKit12EndpointInfoV5imageSSv":{"name":"image","abstract":"<p>Image?</p>","parent_name":"EndpointInfo"},"Structs/EndpointInfo.html#/s:8AudioKit12EndpointInfoV11driverOwnerSSv":{"name":"driverOwner","abstract":"<p>Driver Owner</p>","parent_name":"EndpointInfo"},"Structs/EndpointInfo.html":{"name":"EndpointInfo","abstract":"<p>MIDI Endpoint Information</p>"},"Structs/AudioUnitPropertyListener.html":{"name":"AudioUnitPropertyListener","abstract":"<p>Listener to properties in an audio unit</p>"},"Protocols/AKComponent.html#/s:8AudioKit11AKComponentPAAE8registeryyFZ":{"name":"register()","abstract":"<p>Register the audio unit subclass</p>","parent_name":"AKComponent"},"Protocols/AUComponent.html#/s:8AudioKit11AUComponentP20ComponentDescriptionSC0adE0VvZ":{"name":"ComponentDescription","parent_name":"AUComponent"},"Protocols/MultitouchGestureRecognizerDelegate.html#/c:@M@AudioKit@objc(pl)MultitouchGestureRecognizerDelegate(im)multitouchGestureRecognizer:touchDidBegin:":{"name":"multitouchGestureRecognizer(_:touchDidBegin:)","abstract":"<p>Called when a touch is started.</p>","parent_name":"MultitouchGestureRecognizerDelegate"},"Protocols/MultitouchGestureRecognizerDelegate.html#/c:@M@AudioKit@objc(pl)MultitouchGestureRecognizerDelegate(im)multitouchGestureRecognizer:touchDidMove:":{"name":"multitouchGestureRecognizer(_:touchDidMove:)","abstract":"<p>Called when a touch is updates.</p>","parent_name":"MultitouchGestureRecognizerDelegate"},"Protocols/MultitouchGestureRecognizerDelegate.html#/c:@M@AudioKit@objc(pl)MultitouchGestureRecognizerDelegate(im)multitouchGestureRecognizer:touchDidCancel:":{"name":"multitouchGestureRecognizer(_:touchDidCancel:)","abstract":"<p>Called when a touch is cancelled.</p>","parent_name":"MultitouchGestureRecognizerDelegate"},"Protocols/MultitouchGestureRecognizerDelegate.html#/c:@M@AudioKit@objc(pl)MultitouchGestureRecognizerDelegate(im)multitouchGestureRecognizer:touchDidEnd:":{"name":"multitouchGestureRecognizer(_:touchDidEnd:)","abstract":"<p>Called when a touch is ended.</p>","parent_name":"MultitouchGestureRecognizerDelegate"},"Protocols/AKMIDITransformer.html#/s:8AudioKit17AKMIDITransformerP9transformSayAA11AKMIDIEventVGAG9eventList_tF":{"name":"transform(eventList:)","parent_name":"AKMIDITransformer"},"Protocols/AKAudioUnitManagerDelegate.html#/s:8AudioKit26AKAudioUnitManagerDelegateP06handleaD12NotificationySS4type_ypSg6objecttF":{"name":"handleAudioUnitNotification(type:object:)","parent_name":"AKAudioUnitManagerDelegate"},"Protocols/AKAudioUnitManagerDelegate.html#/s:8AudioKit26AKAudioUnitManagerDelegateP17handleEffectAddedySi2at_tF":{"name":"handleEffectAdded(at:)","parent_name":"AKAudioUnitManagerDelegate"},"Protocols/AKAudioUnitManagerDelegate.html":{"name":"AKAudioUnitManagerDelegate"},"Protocols/AKMIDITransformer.html":{"name":"AKMIDITransformer"},"Protocols/MultitouchGestureRecognizerDelegate.html":{"name":"MultitouchGestureRecognizerDelegate","abstract":"<p>Extension of <code>UIGestureRecognizerDelegate</code> which allows the delegate to receive messages relating to"},"Other Protocols.html#/s:8AudioKit7AliasedP":{"name":"Aliased","abstract":"<p>Helpful in reducing repetitive code in AudioKit</p>"},"Protocols/AUComponent.html":{"name":"AUComponent","abstract":"<p>Helpful in reducing repetitive code in AudioKit</p>"},"Protocols/AKComponent.html":{"name":"AKComponent","abstract":"<p>Helpful in reducing repetitive code in AudioKit</p>"},"Other Functions.html#/s:8AudioKit1sopAA11AKOperationCAA11AKParameter_pF":{"name":"-(_:)","abstract":"<p>Negation</p>"},"Other Functions.html#/s:8AudioKit1sopAA17AKStereoOperationCADF":{"name":"-(_:)","abstract":"<p>Negation</p>"},"Other Functions.html#/s:8AudioKit6fourCCs6UInt32VSSF":{"name":"fourCC(_:)","abstract":"<p>Helper function to convert codes for Audio Units</p>"},"Other Functions.html#/s:8AudioKit5AKLogySS_SS5fnametF":{"name":"AKLog(_:fname:)","abstract":"<p>Wrapper for printing out status messages to the console,"},"Other Functions.html#/s:8AudioKit008deiFBEEeopS2bF":{"name":"❗️(_:)","abstract":"<p>Negative logic can be confusing, so we draw special attention to those cases</p>"},"Other Functions.html#/s:8AudioKit10CheckErrorys5Int32VF":{"name":"CheckError(_:)"},"Extensions/NSNotification/Name.html#/s:So14NSNotificationC4NameV8AudioKitE33AKEngineRestartedAfterRouteChangeADvZ":{"name":"AKEngineRestartedAfterRouteChange","abstract":"<p>After the audio route is changed, (headphones plugged in, for example) AudioKit restarts,","parent_name":"Name"},"Extensions/NSNotification/Name.html#/s:So14NSNotificationC4NameV8AudioKitE41AKEngineRestartedAfterConfigurationChangeADvZ":{"name":"AKEngineRestartedAfterConfigurationChange","abstract":"<p>After the audio engine configuration is changed, (change in input or output hardware&rsquo;s channel count or","parent_name":"Name"},"Extensions/NSNotification/Name.html":{"name":"Name","abstract":"<p>Object to handle notifications for events that can affect the audio</p>","parent_name":"NSNotification"},"Extensions/AudioComponentDescription.html#/s:SC25AudioComponentDescriptionV0A3KitEABs6UInt32V4type_AE7subTypetcfc":{"name":"init(type:subType:)","abstract":"<p>Initialize with type and sub-type</p>","parent_name":"AudioComponentDescription"},"Extensions/AudioComponentDescription.html#/s:SC25AudioComponentDescriptionV0A3KitEABs6UInt32V11appleEffect_tcfc":{"name":"init(appleEffect:)","abstract":"<p>Initialize with an Apple effect</p>","parent_name":"AudioComponentDescription"},"Extensions/AudioComponentDescription.html#/s:SC25AudioComponentDescriptionV0A3KitEABs6UInt32V6effect_tcfc":{"name":"init(effect:)","abstract":"<p>Initialize as an effect with sub-type</p>","parent_name":"AudioComponentDescription"},"Extensions/AudioComponentDescription.html#/s:SC25AudioComponentDescriptionV0A3KitEABSS6effect_tcfc":{"name":"init(effect:)","abstract":"<p>Initialize as an effect with sub-type string</p>","parent_name":"AudioComponentDescription"},"Extensions/AudioComponentDescription.html#/s:SC25AudioComponentDescriptionV0A3KitEABSS5mixer_tcfc":{"name":"init(mixer:)","abstract":"<p>Initialize as a mixer with a sub-type string</p>","parent_name":"AudioComponentDescription"},"Extensions/AudioComponentDescription.html#/s:SC25AudioComponentDescriptionV0A3KitEABSS9generator_tcfc":{"name":"init(generator:)","abstract":"<p>Initialize as a generator with a sub-type string</p>","parent_name":"AudioComponentDescription"},"Extensions/AudioComponentDescription.html#/s:SC25AudioComponentDescriptionV0A3KitEABSS10instrument_tcfc":{"name":"init(instrument:)","abstract":"<p>Initialize as an instrument with a sub-type string</p>","parent_name":"AudioComponentDescription"},"Extensions/OSStatus.html#/s:s5Int32V8AudioKitE5checkyyKF":{"name":"check()","abstract":"<p>Check for and throw an error</p>","parent_name":"OSStatus"},"Extensions/AudioUnit.html#/s:s13OpaquePointerV8AudioKitE8getValuexs6UInt32V11forProperty_tlF":{"name":"getValue(forProperty:)","abstract":"<p>Get value for a property</p>","parent_name":"AudioUnit"},"Extensions/AudioUnit.html#/s:s13OpaquePointerV8AudioKitE8setValueyx5value_s6UInt32V11forPropertytlF":{"name":"setValue(value:forProperty:)","abstract":"<p>Set value for a property</p>","parent_name":"AudioUnit"},"Extensions/AudioUnit.html#/s:s13OpaquePointerV8AudioKitE3addyAC0C20UnitPropertyListenerV8listener_s6UInt32V02toG0tF":{"name":"add(listener:toProperty:)","abstract":"<p>Add a listener to a property</p>","parent_name":"AudioUnit"},"Extensions/AudioUnit.html#/s:s13OpaquePointerV8AudioKitE6removeyAC0C20UnitPropertyListenerV8listener_s6UInt32V04fromG0tF":{"name":"remove(listener:fromProperty:)","abstract":"<p>Remove a listener from a property</p>","parent_name":"AudioUnit"},"Extensions/AudioUnit.html#/s:s13OpaquePointerV8AudioKitE15getPropertyInfos6UInt32V8dataSize_Sb8writabletAF10propertyID_tKF":{"name":"getPropertyInfo(propertyID:)","abstract":"<p>Get property information</p>","parent_name":"AudioUnit"},"Extensions/AudioUnit.html#/s:s13OpaquePointerV8AudioKitE11getPropertyxs6UInt32V10propertyID_AF8dataSizetKlF":{"name":"getProperty(propertyID:dataSize:)","abstract":"<p>Get property</p>","parent_name":"AudioUnit"},"Extensions/AudioUnit.html#/s:s13OpaquePointerV8AudioKitE11setPropertyys6UInt32V10propertyID_AF8dataSizex0J0tKlF":{"name":"setProperty(propertyID:dataSize:data:)","abstract":"<p>Set a property</p>","parent_name":"AudioUnit"},"Extensions/AVAudioUnit.html#/s:So11AVAudioUnitC8AudioKitE9subscriptSds6UInt32Vci":{"name":"subscript(_:)","parent_name":"AVAudioUnit"},"Extensions/ClosedRange.html#/s:s11ClosedRangeV8AudioKitE5clampxxF":{"name":"clamp(_:)","abstract":"<p>Clamp value to the range</p>","parent_name":"ClosedRange"},"Extensions/RangeReplaceableCollection.html#/s:s26RangeReplaceableCollectionP8AudioKitsAARzs27ExpressibleByIntegerLiteral7ElementRpzlExSi5zeros_tcfc":{"name":"init(zeros:)","abstract":"<p>Initialize array with zeros, ~10x faster than append for array of size 4096</p>","parent_name":"RangeReplaceableCollection"},"Extensions/UInt8.html#/s:s5UInt8V8AudioKitE19midiNoteToFrequencyS2dF":{"name":"midiNoteToFrequency(_:)","abstract":"<p>Calculate frequency from a MIDI Note Number</p>","parent_name":"UInt8"},"Extensions/Collection.html#/s:s10CollectionP8AudioKitsAARzSi13IndexDistanceRtzlE06randomD00D0Qzv":{"name":"randomIndex","abstract":"<p>Return a random element from the collection</p>","parent_name":"Collection"},"Extensions/Collection.html#/s:s10CollectionP8AudioKitsAARzSi13IndexDistanceRtzlE13randomElement0G0QzyF":{"name":"randomElement()","abstract":"<p>Retrieve a random element from the collection</p>","parent_name":"Collection"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)samplesCount":{"name":"samplesCount","abstract":"<p>The number of samples can be accessed by .length property,","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)sampleRate":{"name":"sampleRate","abstract":"<p>strange that sampleRate is a Double and not an Integer</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)channelCount":{"name":"channelCount","abstract":"<p>Number of channels, 1 for mono, 2 for stereo</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)duration":{"name":"duration","abstract":"<p>Duration in seconds</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)interleaved":{"name":"interleaved","abstract":"<p>true if Audio Samples are interleaved</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)standard":{"name":"standard","abstract":"<p>true only if file format is <q>deinterleaved native-endian float (AVAudioPCMFormatFloat32)</q></p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)commonFormatString":{"name":"commonFormatString","abstract":"<p>Human-readable version of common format</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)directoryPath":{"name":"directoryPath","abstract":"<p>the directory path as a URL object</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)fileNamePlusExtension":{"name":"fileNamePlusExtension","abstract":"<p>the file name with extension as a String</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)fileName":{"name":"fileName","abstract":"<p>the file name without extension as a String</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)fileExt":{"name":"fileExt","abstract":"<p>the file extension as a String (without <q>.</q>)</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)description":{"name":"description","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(py)mimeType":{"name":"mimeType","abstract":"<p>returns file Mime Type if exists","parent_name":"AVAudioFile"},"Extensions/AVAudioFile.html#/c:@CM@AudioKit@@objc(cs)AVAudioFile(cm)cleanTempDirectory":{"name":"cleanTempDirectory()","abstract":"<p>Static function to delete all audiofiles from Temp directory</p>","parent_name":"AVAudioFile"},"Extensions/AVAudioCommonFormat.html#/s:SC19AVAudioCommonFormatO8AudioKitE11descriptionSSv":{"name":"description","abstract":"<p>Text version of the format</p>","parent_name":"AVAudioCommonFormat"},"Extensions/Double.html#/s:Sd8AudioKitE5valueSdyF":{"name":"value()","abstract":"<p>Get basic value as a double</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE10normalizedSds11ClosedRangeVySdG5range_Sd5tapertF":{"name":"normalized(range:taper:)","abstract":"<p>Return a value on [minimum, maximum] to a [0, 1] range, according to a taper</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE10normalizedS2d7minimum_Sd7maximumSd5tapertF":{"name":"normalized(minimum:maximum:taper:)","abstract":"<p>Return a value on [minimum, maximum] to a [0, 1] range, according to a taper</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE9normalizeySd7minimum_Sd7maximumSd5tapertF":{"name":"normalize(minimum:maximum:taper:)","abstract":"<p>Convert a value on [minimum, maximum] to a [0, 1] range, according to a taper</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE12denormalizedSds11ClosedRangeVySdG5range_Sd5tapertF":{"name":"denormalized(range:taper:)","abstract":"<p>Return a value on [0, 1] to a [minimum, maximum] range, according to a taper</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE12denormalizedS2d7minimum_Sd7maximumSd5tapertF":{"name":"denormalized(minimum:maximum:taper:)","abstract":"<p>Return a value on [0, 1] to a [minimum, maximum] range, according to a taper</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE11denormalizeySd7minimum_Sd7maximumSd5tapertF":{"name":"denormalize(minimum:maximum:taper:)","abstract":"<p>Convert a value on [0, 1] to a [min, max] range, according to a taper</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE19midiNoteToFrequencyS2dF":{"name":"midiNoteToFrequency(_:)","abstract":"<p>Calculate frequency from a floating point MIDI Note Number</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8AudioKitE19frequencyToMIDINoteS2dF":{"name":"frequencyToMIDINote(_:)","abstract":"<p>Calculate MIDI Note Number from a frequency in Hz</p>","parent_name":"Double"},"Extensions/Float.html#/s:Sf8AudioKitE5valueSdyF":{"name":"value()","abstract":"<p>Get basic value as a double</p>","parent_name":"Float"},"Extensions/Int.html#/s:Si8AudioKitE5valueSdyF":{"name":"value()","abstract":"<p>Get basic value as a double</p>","parent_name":"Int"},"Extensions/Int.html#/s:Si8AudioKitE19midiNoteToFrequencyS2dF":{"name":"midiNoteToFrequency(_:)","abstract":"<p>Calculate frequency from a MIDI Note Number</p>","parent_name":"Int"},"Extensions/Int.html#/s:Si8AudioKitE19frequencyToMIDINoteS2dF":{"name":"frequencyToMIDINote(_:)","abstract":"<p>Calculate MIDI Note Number from a frequency in Hz</p>","parent_name":"Int"},"Extensions/AVAudioEngine.html#/c:@CM@AudioKit@@objc(cs)AVAudioEngine(im)connect:to:":{"name":"connect(_:to:)","parent_name":"AVAudioEngine"},"Extensions/AVAudioEngine.html":{"name":"AVAudioEngine","abstract":"<p>Adding connection between nodes with default format</p>"},"Extensions/Int.html":{"name":"Int","abstract":"<p>Numeric extension for integers</p>"},"Extensions/Float.html":{"name":"Float","abstract":"<p>Numeric extension for floats</p>"},"Extensions/Double.html":{"name":"Double","abstract":"<p>Numeric extension for doubles</p>"},"Extensions/AVAudioCommonFormat.html":{"name":"AVAudioCommonFormat","abstract":"<p>Adding description property</p>"},"Extensions/AVAudioFile.html":{"name":"AVAudioFile","abstract":"<p>Helpful additions for using AVAudioFiles within AudioKit</p>"},"Extensions/Collection.html":{"name":"Collection"},"Extensions/UInt8.html":{"name":"UInt8","abstract":"<p>Extension to Int to calculate frequency from a MIDI Note Number</p>"},"Extensions/RangeReplaceableCollection.html":{"name":"RangeReplaceableCollection"},"Extensions/ClosedRange.html":{"name":"ClosedRange"},"Extensions/AVAudioUnit.html":{"name":"AVAudioUnit","abstract":"<p>Adding subscript</p>"},"Extensions/AudioUnit.html":{"name":"AudioUnit","abstract":"<p>Get, set, and listen to properties</p>"},"Extensions/OSStatus.html":{"name":"OSStatus","abstract":"<p>Extension to add a check function</p>"},"Extensions/AudioComponentDescription.html":{"name":"AudioComponentDescription","abstract":"<p>Adding convenience initializers</p>"},"Extensions/NSNotification.html":{"name":"NSNotification"},"Enums/AKTheme.html#/s:8AudioKit7AKThemeO5basicA2CmF":{"name":"basic","parent_name":"AKTheme"},"Enums/AKTheme.html#/s:8AudioKit7AKThemeO8midnightA2CmF":{"name":"midnight","parent_name":"AKTheme"},"Enums/SampleTriggerMode.html#/s:8AudioKit17SampleTriggerModeO4HoldA2CmF":{"name":"Hold","abstract":"<p>Hold</p>","parent_name":"SampleTriggerMode"},"Enums/SampleTriggerMode.html#/s:8AudioKit17SampleTriggerModeO0D0A2CmF":{"name":"Trigger","abstract":"<p>Trigger</p>","parent_name":"SampleTriggerMode"},"Enums/SampleTriggerMode.html#/s:8AudioKit17SampleTriggerModeO4LoopA2CmF":{"name":"Loop","abstract":"<p>Loop</p>","parent_name":"SampleTriggerMode"},"Enums/SampleTriggerMode.html#/s:8AudioKit17SampleTriggerModeO6RepeatA2CmF":{"name":"Repeat","abstract":"<p>Repeat</p>","parent_name":"SampleTriggerMode"},"Enums/AKButtonStyle.html#/s:8AudioKit13AKButtonStyleO8standardA2CmF":{"name":"standard","abstract":"<p>Undocumented</p>","parent_name":"AKButtonStyle"},"Enums/AKButtonStyle.html#/s:8AudioKit13AKButtonStyleO5roundA2CmF":{"name":"round","abstract":"<p>Undocumented</p>","parent_name":"AKButtonStyle"},"Enums/AKPropertySliderStyle.html#/s:8AudioKit21AKPropertySliderStyleO14roundIndicatorA2CmF":{"name":"roundIndicator","abstract":"<p>Undocumented</p>","parent_name":"AKPropertySliderStyle"},"Enums/AKPropertySliderStyle.html#/s:8AudioKit21AKPropertySliderStyleO12tabIndicatorA2CmF":{"name":"tabIndicator","abstract":"<p>Undocumented</p>","parent_name":"AKPropertySliderStyle"},"Enums/AKRotaryKnobStyle.html#/s:8AudioKit17AKRotaryKnobStyleO5roundA2CmF":{"name":"round","abstract":"<p>Undocumented</p>","parent_name":"AKRotaryKnobStyle"},"Enums/AKRotaryKnobStyle.html#/s:8AudioKit17AKRotaryKnobStyleO7polygonACSi13numberOfSides_Sd9curvaturetcACmF":{"name":"polygon","abstract":"<p>Undocumented</p>","parent_name":"AKRotaryKnobStyle"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO6maracaA2CmF":{"name":"maraca","abstract":"<p>Maraca</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO6cabasaA2CmF":{"name":"cabasa","abstract":"<p>Cabasa</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO6sekereA2CmF":{"name":"sekere","abstract":"<p>Sekere</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO10tambourineA2CmF":{"name":"tambourine","abstract":"<p>Tambourine</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO11sleighBellsA2CmF":{"name":"sleighBells","abstract":"<p>Sleigh Bells</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO12bambooChimesA2CmF":{"name":"bambooChimes","abstract":"<p>Bamboo Chimes</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO9sandPaperA2CmF":{"name":"sandPaper","abstract":"<p>Using sand paper</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO7sodaCanA2CmF":{"name":"sodaCan","abstract":"<p>Soda Can</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO6sticksA2CmF":{"name":"sticks","abstract":"<p>Sticks falling</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO6crunchA2CmF":{"name":"crunch","abstract":"<p>Crunching sound</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO8bigRocksA2CmF":{"name":"bigRocks","abstract":"<p>Big rocks hitting each other</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO11littleRocksA2CmF":{"name":"littleRocks","abstract":"<p>Little rocks hitting each other</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO7nextMugA2CmF":{"name":"nextMug","abstract":"<p>NeXT Mug</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO10pennyInMugA2CmF":{"name":"pennyInMug","abstract":"<p>A penny rattling around a mug</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO11nickleInMugA2CmF":{"name":"nickleInMug","abstract":"<p>A nickle rattling around a mug</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO9dimeInMugA2CmF":{"name":"dimeInMug","abstract":"<p>A dime rattling around a mug</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO12quarterInMugA2CmF":{"name":"quarterInMug","abstract":"<p>A quarter rattling around a mug</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO10francInMugA2CmF":{"name":"francInMug","abstract":"<p>A Franc rattling around a mug</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO9pesoInMugA2CmF":{"name":"pesoInMug","abstract":"<p>A Peso rattling around a mug</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO5guiroA2CmF":{"name":"guiro","abstract":"<p>Guiro</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO6wrenchA2CmF":{"name":"wrench","abstract":"<p>Wrench</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO10waterDropsA2CmF":{"name":"waterDrops","abstract":"<p>Water Droplets</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html#/s:8AudioKit12AKShakerTypeO17tunedBambooChimesA2CmF":{"name":"tunedBambooChimes","abstract":"<p>Tuned Bamboo Chimes</p>","parent_name":"AKShakerType"},"Enums/AKShakerType.html":{"name":"AKShakerType","abstract":"<p>Type of shaker to use</p>"},"Enums/AKRotaryKnobStyle.html":{"name":"AKRotaryKnobStyle","abstract":"<p>Undocumented</p>"},"Enums/AKPropertySliderStyle.html":{"name":"AKPropertySliderStyle","abstract":"<p>Undocumented</p>"},"Enums/AKButtonStyle.html":{"name":"AKButtonStyle","abstract":"<p>A button, mainly used for playgrounds, but could be useful in your own projects</p>"},"Enums/SampleTriggerMode.html":{"name":"SampleTriggerMode","abstract":"<p>Type of triggering to use</p>"},"Enums/AKTheme.html":{"name":"AKTheme","abstract":"<p>Class to handle colors, fonts, etc.</p>"},"Other Global Variables.html#/s:8AudioKit12callbackUgenAA08AKCustomD0Cv":{"name":"callbackUgen","abstract":"<p>Metronome Callback Ugen</p>"},"Classes/AKStylist.html#/s:8AudioKit9AKStylistC14sharedInstanceACvZ":{"name":"sharedInstance","parent_name":"AKStylist"},"Classes/AKStylist.html#/s:8AudioKit9AKStylistC7bgColorSo7UIColorCv":{"name":"bgColor","parent_name":"AKStylist"},"Classes/AKStylist.html#/s:8AudioKit9AKStylistC9fontColorSo7UIColorCv":{"name":"fontColor","parent_name":"AKStylist"},"Classes/AKStylist.html#/s:8AudioKit9AKStylistC5themeAA7AKThemeOv":{"name":"theme","parent_name":"AKStylist"},"Classes/AKStylist.html#/s:8AudioKit9AKStylistC9nextColorSo7UIColorCv":{"name":"nextColor","parent_name":"AKStylist"},"Classes/AKStylist.html#/s:8AudioKit9AKStylistC17colorForTrueValueSo7UIColorCv":{"name":"colorForTrueValue","parent_name":"AKStylist"},"Classes/AKStylist.html#/s:8AudioKit9AKStylistC18colorForFalseValueSo7UIColorCv":{"name":"colorForFalseValue","parent_name":"AKStylist"},"Classes/AKAUPresetBuilder.html#/s:8AudioKit17AKAUPresetBuilderC14createAUPresetySo12NSDictionaryC4dict_SS4pathSS14instrumentNameSdSg6attackAJ7releasetFZ":{"name":"createAUPreset(dict:path:instrumentName:attack:release:)","abstract":"<p>Create an AUPreset from a collection of dictionaries.","parent_name":"AKAUPresetBuilder"},"Classes/AKAUPresetBuilder.html#/s:8AudioKit17AKAUPresetBuilderC18generateDictionarySo09NSMutableF0CSi8rootNote_SS8filenameSi05startI0Si03endI0tFZ":{"name":"generateDictionary(rootNote:filename:startNote:endNote:)","abstract":"<p>This functions returns 1 dictionary entry for a particular sample zone. You then add this to an array,","parent_name":"AKAUPresetBuilder"},"Classes/AKAUPresetBuilder.html#/s:8AudioKit17AKAUPresetBuilderC15buildInstrumentS2S4name_SS11connectionsSS9envelopesSS6filterSS4lfosSS5zonesSS8filerefsSS6layerstFZ":{"name":"buildInstrument(name:connections:envelopes:filter:lfos:zones:filerefs:layers:)","abstract":"<p>Build the instrument file</p>","parent_name":"AKAUPresetBuilder"},"Classes/AKScheduledAction.html#/s:8AudioKit17AKScheduledActionCACSd8interval_yyc5blocktcfc":{"name":"init(interval:block:)","parent_name":"AKScheduledAction"},"Classes/AKAudioUnitInstrument.html#/c:@M@AudioKit@objc(cs)AKAudioUnitInstrument(im)initWithAudioUnit:":{"name":"init(audioUnit:)","parent_name":"AKAudioUnitInstrument"},"Classes/AKAudioUnitInstrument.html#/c:@M@AudioKit@objc(cs)AKAudioUnitInstrument(im)playWithNoteNumber:velocity:channel:":{"name":"play(noteNumber:velocity:channel:)","parent_name":"AKAudioUnitInstrument"},"Classes/AKAudioUnitInstrument.html#/c:@M@AudioKit@objc(cs)AKAudioUnitInstrument(im)stopWithNoteNumber:channel:":{"name":"stop(noteNumber:channel:)","parent_name":"AKAudioUnitInstrument"},"Classes/AKTableView.html#/c:@M@AudioKit@objc(cs)AKTableView(im)init:frame:":{"name":"init(_:frame:)","abstract":"<p>Undocumented</p>","parent_name":"AKTableView"},"Classes/AKTableView.html#/c:@M@AudioKit@objc(cs)AKTableView(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Undocumented</p>","parent_name":"AKTableView"},"Classes/AKTableView.html#/c:@M@AudioKit@objc(cs)AKTableView(im)drawRect:":{"name":"draw(_:)","abstract":"<p>Undocumented</p>","parent_name":"AKTableView"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)value":{"name":"value","abstract":"<p>Current value of the slider</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)minimum":{"name":"minimum","abstract":"<p>Minimum, left-most value</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)maximum":{"name":"maximum","abstract":"<p>Maximum, right-most value</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)usesDiscreteValues":{"name":"usesDiscreteValues","abstract":"<p>Undocumented</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)discreteValueStep":{"name":"discreteValueStep","abstract":"<p>Undocumented</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)property":{"name":"property","abstract":"<p>Text shown on the knob</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)format":{"name":"format","abstract":"<p>Format for the number shown on the knob</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)bgColor":{"name":"bgColor","abstract":"<p>Background color</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)knobBorderColor":{"name":"knobBorderColor","abstract":"<p>Knob border color</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)indicatorColor":{"name":"indicatorColor","abstract":"<p>Knob indicator color</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)knobColor":{"name":"knobColor","abstract":"<p>Knob overlay color</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)textColor":{"name":"textColor","abstract":"<p>Text color</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)fontSize":{"name":"fontSize","abstract":"<p>Font size</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)bubbleFontSize":{"name":"bubbleFontSize","abstract":"<p>Bubble font size</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/s:8AudioKit12AKRotaryKnobC9knobStyleAA0cdF0Ov":{"name":"knobStyle","abstract":"<p>Undocumented</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)knobBorderWidth":{"name":"knobBorderWidth","abstract":"<p>Undocumented</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)valueBubbleBorderWidth":{"name":"valueBubbleBorderWidth","abstract":"<p>Undocumented</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)numberOfIndicatorPoints":{"name":"numberOfIndicatorPoints","abstract":"<p>Undocumented</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(py)callback":{"name":"callback","abstract":"<p>Function to call when value changes</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(im)initWithProperty:format:value:minimum:maximum:color:frame:callback:":{"name":"init(property:format:value:minimum:maximum:color:frame:callback:)","abstract":"<p>Initialize the slider</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(im)initWithFrame:":{"name":"init(frame:)","abstract":"<p>Initialization with no details</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialization within Interface Builder</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(im)prepareForInterfaceBuilder":{"name":"prepareForInterfaceBuilder()","abstract":"<p>Actions to perform to make sure the view is renderable in Interface Builder</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(im)randomize":{"name":"randomize()","abstract":"<p>Give the slider a random value</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Handle new touches</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(im)touchesMoved:withEvent:":{"name":"touchesMoved(_:with:)","abstract":"<p>Handle moved touches</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(im)touchesEnded:withEvent:":{"name":"touchesEnded(_:with:)","abstract":"<p>Undocumented</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(im)indicatorColorForTheme":{"name":"indicatorColorForTheme()","abstract":"<p>Undocumented</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(im)knobBorderColorForTheme":{"name":"knobBorderColorForTheme()","abstract":"<p>Undocumented</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(im)textColorForTheme":{"name":"textColorForTheme()","abstract":"<p>Undocumented</p>","parent_name":"AKRotaryKnob"},"Classes/AKRotaryKnob.html#/c:@M@AudioKit@objc(cs)AKRotaryKnob(im)drawRect:":{"name":"draw(_:)","abstract":"<p>Undocumented</p>","parent_name":"AKRotaryKnob"},"Classes/AKAudioUnitManager/Notification.html#/s:8AudioKit18AKAudioUnitManagerC12NotificationO16effectsAvailableSSvZ":{"name":"effectsAvailable","parent_name":"Notification"},"Classes/AKAudioUnitManager/Notification.html#/s:8AudioKit18AKAudioUnitManagerC12NotificationO20instrumentsAvailableSSvZ":{"name":"instrumentsAvailable","parent_name":"Notification"},"Classes/AKAudioUnitManager/Notification.html#/s:8AudioKit18AKAudioUnitManagerC12NotificationO7changedSSvZ":{"name":"changed","parent_name":"Notification"},"Classes/AKAudioUnitManager/Notification.html#/s:8AudioKit18AKAudioUnitManagerC12NotificationO7crashedSSvZ":{"name":"crashed","parent_name":"Notification"},"Classes/AKAudioUnitManager/Notification.html#/s:8AudioKit18AKAudioUnitManagerC12NotificationO5addedSSvZ":{"name":"added","parent_name":"Notification"},"Classes/AKAudioUnitManager/Notification.html":{"name":"Notification","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(cpy)maxInserts":{"name":"maxInserts","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC8delegateAA0cdE8Delegate_pSgXwv":{"name":"delegate","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(py)input":{"name":"input","abstract":"<p>first node in chain, generally a player or instrument</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(py)output":{"name":"output","abstract":"<p>last node in chain, generally a mixer or some kind of output</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/s:8AudioKit18AKAudioUnitManagerC12effectsChainSaySo07AVAudioD6EffectCSgGv":{"name":"effectsChain","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(py)availableEffects":{"name":"availableEffects","abstract":"<p><code>availableEffects</code> is accessed from multiple thread contexts. Use","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(py)availableInstruments":{"name":"availableInstruments","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(py)availableEffects\">availableEffects</a></code> is accessed from multiple thread contexts. Use","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(im)init":{"name":"init()","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(im)requestEffectsWithCompletionHandler:":{"name":"requestEffects(completionHandler:)","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(im)requestInstrumentsWithCompletionHandler:":{"name":"requestInstruments(completionHandler:)","abstract":"<p>request a list of Instruments, will be returned async</p>","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(im)createEffectAudioUnit:completionHandler:":{"name":"createEffectAudioUnit(_:completionHandler:)","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(im)createInstrumentAudioUnit:completionHandler:":{"name":"createInstrumentAudioUnit(_:completionHandler:)","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(im)removeEffectAt:":{"name":"removeEffect(at:)","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(im)insertAudioUnitWithName:at:":{"name":"insertAudioUnit(name:at:)","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(im)createInstrumentWithName:completionHandler:":{"name":"createInstrument(name:completionHandler:)","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(im)resetEffects":{"name":"resetEffects()","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html#/c:@M@AudioKit@objc(cs)AKAudioUnitManager(im)connectEffectsWithFirstNode:lastNode:":{"name":"connectEffects(firstNode:lastNode:)","abstract":"<p>called from client to hook the chain together","parent_name":"AKAudioUnitManager"},"Classes/AKAudioUnitManager.html":{"name":"AKAudioUnitManager"},"Classes/AKRotaryKnob.html":{"name":"AKRotaryKnob","abstract":"<p>Undocumented</p>"},"Classes/AKTableView.html":{"name":"AKTableView","abstract":"<p>Undocumented</p>"},"Classes/AKAudioUnitInstrument.html":{"name":"AKAudioUnitInstrument"},"Classes/AKScheduledAction.html":{"name":"AKScheduledAction"},"Classes/AKAUPresetBuilder.html":{"name":"AKAUPresetBuilder","abstract":"<p>Builds presets for Apple sampler to read from</p>"},"Classes/AKStylist.html":{"name":"AKStylist"},"Classes/MultitouchGestureRecognizer/State.html#/s:8AudioKit27MultitouchGestureRecognizerC5StateO5readyA2EmF":{"name":"ready","abstract":"<p>All touches are ended, and none are being sustained.</p>","parent_name":"State"},"Classes/MultitouchGestureRecognizer/State.html#/s:8AudioKit27MultitouchGestureRecognizerC5StateO4liveA2EmF":{"name":"live","abstract":"<p>One more more touches are currently in progress.</p>","parent_name":"State"},"Classes/MultitouchGestureRecognizer/State.html#/s:8AudioKit27MultitouchGestureRecognizerC5StateO9sustainedA2EmF":{"name":"sustained","abstract":"<p>All touches have ended, but one or more is being retained in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MultitouchGestureRecognizer.html#/c:@M@AudioKit@objc(cs)MultitouchGestureRecognizer(py)touches\">touches</a></code> collection","parent_name":"State"},"Classes/MultitouchGestureRecognizer/Mode.html#/s:8AudioKit27MultitouchGestureRecognizerC4ModeO5stackA2EmF":{"name":"stack","abstract":"<p>The first touch in is the first touch out.</p>","parent_name":"Mode"},"Classes/MultitouchGestureRecognizer/Mode.html#/s:8AudioKit27MultitouchGestureRecognizerC4ModeO5queueA2EmF":{"name":"queue","abstract":"<p>The first touch in is the last touch out.</p>","parent_name":"Mode"},"Classes/MultitouchGestureRecognizer/Mode.html":{"name":"Mode","abstract":"<p>Denotes the way the list of touches is managed.</p>","parent_name":"MultitouchGestureRecognizer"},"Classes/MultitouchGestureRecognizer.html#/s:8AudioKit27MultitouchGestureRecognizerC4modeAC4ModeOv":{"name":"mode","abstract":"<p>The touch management mode.</p>","parent_name":"MultitouchGestureRecognizer"},"Classes/MultitouchGestureRecognizer.html#/c:@M@AudioKit@objc(cs)MultitouchGestureRecognizer(py)count":{"name":"count","abstract":"<p>The maximum number of touches allowed in the stack/queue. Defaults to <code>0</code>, signifying unlimited touches.","parent_name":"MultitouchGestureRecognizer"},"Classes/MultitouchGestureRecognizer.html#/c:@M@AudioKit@objc(cs)MultitouchGestureRecognizer(py)sustain":{"name":"sustain","abstract":"<p>If <code>sustain</code> is set to <code>true</code>, when touches end they will be retained in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MultitouchGestureRecognizer.html#/c:@M@AudioKit@objc(cs)MultitouchGestureRecognizer(py)touches\">touches</a></code> until such time as all","parent_name":"MultitouchGestureRecognizer"},"Classes/MultitouchGestureRecognizer.html#/c:@M@AudioKit@objc(cs)MultitouchGestureRecognizer(py)touches":{"name":"touches","abstract":"<p>The currently tracked collection of touches. May contain touches after they have ended,","parent_name":"MultitouchGestureRecognizer"},"Classes/MultitouchGestureRecognizer/State.html":{"name":"State","abstract":"<p>The current gesture recognizer state, as it pertains to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MultitouchGestureRecognizer.html#/c:@M@AudioKit@objc(cs)MultitouchGestureRecognizer(py)sustain\">sustain</a></code> setting.</p>","parent_name":"MultitouchGestureRecognizer"},"Classes/MultitouchGestureRecognizer.html#/s:8AudioKit27MultitouchGestureRecognizerC15multitouchStateAC0G0Ov":{"name":"multitouchState","abstract":"<p>The current multitouch gesture recognizer state.</p>","parent_name":"MultitouchGestureRecognizer"},"Classes/MultitouchGestureRecognizer.html#/c:@M@AudioKit@objc(cs)MultitouchGestureRecognizer(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Handle new touches</p>","parent_name":"MultitouchGestureRecognizer"},"Classes/MultitouchGestureRecognizer.html#/c:@M@AudioKit@objc(cs)MultitouchGestureRecognizer(im)touchesMoved:withEvent:":{"name":"touchesMoved(_:with:)","abstract":"<p>Handle moved touches</p>","parent_name":"MultitouchGestureRecognizer"},"Classes/MultitouchGestureRecognizer.html#/c:@M@AudioKit@objc(cs)MultitouchGestureRecognizer(im)touchesCancelled:withEvent:":{"name":"touchesCancelled(_:with:)","abstract":"<p>Handle cancelled touches</p>","parent_name":"MultitouchGestureRecognizer"},"Classes/MultitouchGestureRecognizer.html#/c:@M@AudioKit@objc(cs)MultitouchGestureRecognizer(im)touchesEnded:withEvent:":{"name":"touchesEnded(_:with:)","abstract":"<p>Handle ended touches</p>","parent_name":"MultitouchGestureRecognizer"},"Classes/MultitouchGestureRecognizer.html#/s:8AudioKit27MultitouchGestureRecognizerC8centroidSC7CGPointVSgv":{"name":"centroid","abstract":"<p>The average of all touch locations in the current view.</p>","parent_name":"MultitouchGestureRecognizer"},"Classes/MultitouchGestureRecognizer.html#/s:8AudioKit27MultitouchGestureRecognizerC16previousCentroidSC7CGPointVSgv":{"name":"previousCentroid","abstract":"<p>The average of all previous touch locations in the current view.</p>","parent_name":"MultitouchGestureRecognizer"},"Classes/AKTelephoneView.html#/c:@M@AudioKit@objc(cs)AKTelephoneView(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Handle new touches</p>","parent_name":"AKTelephoneView"},"Classes/AKTelephoneView.html#/c:@M@AudioKit@objc(cs)AKTelephoneView(im)touchesEnded:withEvent:":{"name":"touchesEnded(_:with:)","abstract":"<p>Handle new touches</p>","parent_name":"AKTelephoneView"},"Classes/AKTelephoneView.html#/c:@M@AudioKit@objc(cs)AKTelephoneView(im)initWithFrame:callback:":{"name":"init(frame:callback:)","abstract":"<p>Initialize the telephone view</p>","parent_name":"AKTelephoneView"},"Classes/AKTelephoneView.html#/c:@M@AudioKit@objc(cs)AKTelephoneView(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize within Interface Builder</p>","parent_name":"AKTelephoneView"},"Classes/AKTelephoneView.html#/c:@M@AudioKit@objc(cs)AKTelephoneView(im)drawRect:":{"name":"draw(_:)","abstract":"<p>Draw the telephone view</p>","parent_name":"AKTelephoneView"},"Classes/AKTelephoneView.html#/c:@M@AudioKit@objc(cs)AKTelephoneView(cm)drawKeyWithText:numeral:isPressed:":{"name":"drawKey(text:numeral:isPressed:)","abstract":"<p>Draw one key</p>","parent_name":"AKTelephoneView"},"Classes/AKTelephoneView.html#/c:@M@AudioKit@objc(cs)AKTelephoneView(cm)drawCenteredKeyWithNumeral:isPressed:":{"name":"drawCenteredKey(numeral:isPressed:)","abstract":"<p>Draw one key</p>","parent_name":"AKTelephoneView"},"Classes/AKStepper.html#/c:@M@AudioKit@objc(cs)AKStepper(py)text":{"name":"text","abstract":"<p>Text / label to display</p>","parent_name":"AKStepper"},"Classes/AKStepper.html#/c:@M@AudioKit@objc(cs)AKStepper(py)value":{"name":"value","abstract":"<p>Current value</p>","parent_name":"AKStepper"},"Classes/AKStepper.html#/c:@M@AudioKit@objc(cs)AKStepper(py)callback":{"name":"callback","abstract":"<p>Function to call on change</p>","parent_name":"AKStepper"},"Classes/AKStepper.html#/c:@M@AudioKit@objc(cs)AKStepper(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Handle new touches</p>","parent_name":"AKStepper"},"Classes/AKStepper.html#/c:@M@AudioKit@objc(cs)AKStepper(im)initWithText:value:frame:callback:":{"name":"init(text:value:frame:callback:)","abstract":"<p>Initialize the stepper view</p>","parent_name":"AKStepper"},"Classes/AKStepper.html#/c:@M@AudioKit@objc(cs)AKStepper(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize within Interface Builder</p>","parent_name":"AKStepper"},"Classes/AKStepper.html#/c:@M@AudioKit@objc(cs)AKStepper(im)drawRect:":{"name":"draw(_:)","abstract":"<p>Draw the stepper</p>","parent_name":"AKStepper"},"Classes/AKResourcesAudioFileLoaderView.html#/c:@M@AudioKit@objc(cs)AKResourcesAudioFileLoaderView(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Handle touches</p>","parent_name":"AKResourcesAudioFileLoaderView"},"Classes/AKResourcesAudioFileLoaderView.html#/c:@M@AudioKit@objc(cs)AKResourcesAudioFileLoaderView(im)initWithPlayer:filenames:frame:":{"name":"init(player:filenames:frame:)","abstract":"<p>Initialize the resource loader</p>","parent_name":"AKResourcesAudioFileLoaderView"},"Classes/AKResourcesAudioFileLoaderView.html#/c:@M@AudioKit@objc(cs)AKResourcesAudioFileLoaderView(im)drawRect:":{"name":"draw(_:)","abstract":"<p>Draw the resource loader</p>","parent_name":"AKResourcesAudioFileLoaderView"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)value":{"name":"value","abstract":"<p>Current value of the slider</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)minimum":{"name":"minimum","abstract":"<p>Minimum, left-most value</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)maximum":{"name":"maximum","abstract":"<p>Maximum, right-most value</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)property":{"name":"property","abstract":"<p>Text shown on the slider</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)format":{"name":"format","abstract":"<p>Format for the number shown on the slider</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)bgColor":{"name":"bgColor","abstract":"<p>Background color</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)sliderBorderColor":{"name":"sliderBorderColor","abstract":"<p>Slider border color</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)indicatorBorderColor":{"name":"indicatorBorderColor","abstract":"<p>Indicator border color</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)sliderColor":{"name":"sliderColor","abstract":"<p>Slider overlay color</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)textColor":{"name":"textColor","abstract":"<p>Text color</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)fontSize":{"name":"fontSize","abstract":"<p>Font size</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)bubbleFontSize":{"name":"bubbleFontSize","abstract":"<p>Bubble font size</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/s:8AudioKit16AKPropertySliderC11sliderStyleAA0cdF0Ov":{"name":"sliderStyle","abstract":"<p>Undocumented</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)sliderBorderWidth":{"name":"sliderBorderWidth","abstract":"<p>Undocumented</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)showsValueBubble":{"name":"showsValueBubble","abstract":"<p>Undocumented</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)valueBubbleBorderWidth":{"name":"valueBubbleBorderWidth","abstract":"<p>Undocumented</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(py)callback":{"name":"callback","abstract":"<p>Function to call when value changes</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(im)initWithProperty:format:value:minimum:maximum:color:frame:callback:":{"name":"init(property:format:value:minimum:maximum:color:frame:callback:)","abstract":"<p>Initialize the slider</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(im)initWithFrame:":{"name":"init(frame:)","abstract":"<p>Initialization with no details</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialization within Interface Builder</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(im)prepareForInterfaceBuilder":{"name":"prepareForInterfaceBuilder()","abstract":"<p>Actions to perform to make sure the view is renderable in Interface Builder</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(cpy)requiresConstraintBasedLayout":{"name":"requiresConstraintBasedLayout","abstract":"<p>Require constraint-based layout</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Handle new touches</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(im)touchesMoved:withEvent:":{"name":"touchesMoved(_:with:)","abstract":"<p>Handle moved touches</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(im)touchesEnded:withEvent:":{"name":"touchesEnded(_:with:)","abstract":"<p>Undocumented</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(im)randomize":{"name":"randomize()","abstract":"<p>Give the slider a random value</p>","parent_name":"AKPropertySlider"},"Classes/AKPropertySlider.html#/c:@M@AudioKit@objc(cs)AKPropertySlider(im)drawRect:":{"name":"draw(_:)","abstract":"<p>Draw the slider</p>","parent_name":"AKPropertySlider"},"Classes/AKPresetLoaderView.html#/c:@M@AudioKit@objc(cs)AKPresetLoaderView(py)label":{"name":"label","abstract":"<p>Text to display as a label</p>","parent_name":"AKPresetLoaderView"},"Classes/AKPresetLoaderView.html#/c:@M@AudioKit@objc(cs)AKPresetLoaderView(py)presets":{"name":"presets","abstract":"<p>The presets to scroll through</p>","parent_name":"AKPresetLoaderView"},"Classes/AKPresetLoaderView.html#/c:@M@AudioKit@objc(cs)AKPresetLoaderView(py)callback":{"name":"callback","abstract":"<p>Function to call when the preset is changed</p>","parent_name":"AKPresetLoaderView"},"Classes/AKPresetLoaderView.html#/c:@M@AudioKit@objc(cs)AKPresetLoaderView(py)fontSize":{"name":"fontSize","abstract":"<p>Font size</p>","parent_name":"AKPresetLoaderView"},"Classes/AKPresetLoaderView.html#/c:@M@AudioKit@objc(cs)AKPresetLoaderView(py)font":{"name":"font","abstract":"<p>Font</p>","parent_name":"AKPresetLoaderView"},"Classes/AKPresetLoaderView.html#/c:@M@AudioKit@objc(cs)AKPresetLoaderView(im)initWithPresets:frame:font:fontSize:initialIndex:callback:":{"name":"init(presets:frame:font:fontSize:initialIndex:callback:)","abstract":"<p>Initialize the preset loader view</p>","parent_name":"AKPresetLoaderView"},"Classes/AKPresetLoaderView.html#/c:@M@AudioKit@objc(cs)AKPresetLoaderView(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize in Interface Builder</p>","parent_name":"AKPresetLoaderView"},"Classes/AKPresetLoaderView.html#/c:@M@AudioKit@objc(cs)AKPresetLoaderView(im)drawRect:":{"name":"draw(_:)","abstract":"<p>Draw the preset loader</p>","parent_name":"AKPresetLoaderView"},"Classes/AKPresetLoaderView.html#/c:@M@AudioKit@objc(cs)AKPresetLoaderView(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Handle new touches</p>","parent_name":"AKPresetLoaderView"},"Classes/AKPresetLoaderView.html#/c:@M@AudioKit@objc(cs)AKPresetLoaderView(im)touchesMoved:withEvent:":{"name":"touchesMoved(_:with:)","abstract":"<p>Handle moved touches</p>","parent_name":"AKPresetLoaderView"},"Classes/AKPlaygroundView.html#/c:@M@AudioKit@objc(cs)AKPlaygroundView(py)elementHeight":{"name":"elementHeight","abstract":"<p>Default standard element height (buttons, text)</p>","parent_name":"AKPlaygroundView"},"Classes/AKPlaygroundView.html#/c:@M@AudioKit@objc(cs)AKPlaygroundView(py)yPosition":{"name":"yPosition","abstract":"<p>Current Y position</p>","parent_name":"AKPlaygroundView"},"Classes/AKPlaygroundView.html#/c:@M@AudioKit@objc(cs)AKPlaygroundView(py)spacing":{"name":"spacing","abstract":"<p>Spacing height between elements</p>","parent_name":"AKPlaygroundView"},"Classes/AKPlaygroundView.html#/c:@M@AudioKit@objc(cs)AKPlaygroundView(im)initWithFrame:":{"name":"init(frame:)","abstract":"<p>Initialize the playground view</p>","parent_name":"AKPlaygroundView"},"Classes/AKPlaygroundView.html#/c:@M@AudioKit@objc(cs)AKPlaygroundView(im)init":{"name":"init()","abstract":"<p>Initialize with default size</p>","parent_name":"AKPlaygroundView"},"Classes/AKPlaygroundView.html#/c:@M@AudioKit@objc(cs)AKPlaygroundView(im)setup":{"name":"setup()","abstract":"<p>Override this function in subclasses</p>","parent_name":"AKPlaygroundView"},"Classes/AKPlaygroundView.html#/c:@M@AudioKit@objc(cs)AKPlaygroundView(im)addTitle:":{"name":"addTitle(_:)","abstract":"<p>Add a title to the playground view</p>","parent_name":"AKPlaygroundView"},"Classes/AKPlaygroundView.html#/c:@M@AudioKit@objc(cs)AKPlaygroundView(im)addLabel:":{"name":"addLabel(_:)","abstract":"<p>Add label text</p>","parent_name":"AKPlaygroundView"},"Classes/AKPlaygroundView.html#/c:@M@AudioKit@objc(cs)AKPlaygroundView(im)addSubview:":{"name":"addSubview(_:)","abstract":"<p>Add the subview, and move the Y Position down</p>","parent_name":"AKPlaygroundView"},"Classes/AKPlaygroundView.html#/c:@M@AudioKit@objc(cs)AKPlaygroundView(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialization within Interface Builder</p>","parent_name":"AKPlaygroundView"},"Classes/AKPlaygroundLoop.html#/c:@M@AudioKit@objc(cs)AKPlaygroundLoop(im)initWithEvery:handler:":{"name":"init(every:handler:)","abstract":"<p>Repeat this loop at a given period with a code block</p>","parent_name":"AKPlaygroundLoop"},"Classes/AKPlaygroundLoop.html#/c:@M@AudioKit@objc(cs)AKPlaygroundLoop(im)initWithFrequency:handler:":{"name":"init(frequency:handler:)","abstract":"<p>Repeat this loop at a given frequency with a code block</p>","parent_name":"AKPlaygroundLoop"},"Protocols/AKKeyboardDelegate.html#/s:8AudioKit18AKKeyboardDelegateP6noteOnys5UInt8V0E0_tF":{"name":"noteOn(note:)","abstract":"<p>Note on evenets</p>","parent_name":"AKKeyboardDelegate"},"Protocols/AKKeyboardDelegate.html#/s:8AudioKit18AKKeyboardDelegateP7noteOffys5UInt8V0E0_tF":{"name":"noteOff(note:)","abstract":"<p>Note off events</p>","parent_name":"AKKeyboardDelegate"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(py)octaveCount":{"name":"octaveCount","abstract":"<p>Number of octaves displayed at once</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(py)firstOctave":{"name":"firstOctave","abstract":"<p>Lowest octave dispayed</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(py)topKeyHeightRatio":{"name":"topKeyHeightRatio","abstract":"<p>Relative measure of the height of the black keys</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(py)polyphonicButton":{"name":"polyphonicButton","abstract":"<p>Color of the polyphonic toggle button</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(py)whiteKeyOff":{"name":"whiteKeyOff","abstract":"<p>White key color</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(py)blackKeyOff":{"name":"blackKeyOff","abstract":"<p>Black key color</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(py)keyOnColor":{"name":"keyOnColor","abstract":"<p>Activated key color</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/s:8AudioKit14AKKeyboardViewC8delegateAA0C8Delegate_pSgXwv":{"name":"delegate","abstract":"<p>Class to handle user actions</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(py)polyphonicMode":{"name":"polyphonicMode","abstract":"<p>Allows multiple notes to play concurrently</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(im)initWithFrame:":{"name":"init(frame:)","abstract":"<p>Initialize the keyboard with default info</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(im)initWithWidth:height:firstOctave:octaveCount:polyphonic:":{"name":"init(width:height:firstOctave:octaveCount:polyphonic:)","abstract":"<p>Initialize the keyboard</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialization within Interface Builder</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(im)prepareForInterfaceBuilder":{"name":"prepareForInterfaceBuilder()","abstract":"<p>Set up the view for rendering in Interface Builder</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(py)intrinsicContentSize":{"name":"intrinsicContentSize","abstract":"<p>Keyboard view size</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(cpy)requiresConstraintBasedLayout":{"name":"requiresConstraintBasedLayout","abstract":"<p>Require constraints</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(im)drawRect:":{"name":"draw(_:)","abstract":"<p>Draw the view</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Handle new touches</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(im)touchesEnded:withEvent:":{"name":"touchesEnded(_:with:)","abstract":"<p>Handle touches completed</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(im)touchesMoved:withEvent:":{"name":"touchesMoved(_:with:)","abstract":"<p>Handle moved touches</p>","parent_name":"AKKeyboardView"},"Classes/AKKeyboardView.html#/c:@M@AudioKit@objc(cs)AKKeyboardView(im)touchesCancelled:withEvent:":{"name":"touchesCancelled(_:with:)","abstract":"<p>Handle stopped touches</p>","parent_name":"AKKeyboardView"},"Classes/AKBypassButton.html#/c:@M@AudioKit@objc(cs)AKBypassButton(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Hanldes new touches</p>","parent_name":"AKBypassButton"},"Classes/AKBypassButton.html#/s:8AudioKit14AKBypassButtonCAcA12AKToggleable_p4node_SC6CGRectV5frametcfc":{"name":"init(node:frame:)","abstract":"<p>Instatiate the button with a node and a size</p>","parent_name":"AKBypassButton"},"Classes/AKBypassButton.html#/c:@M@AudioKit@objc(cs)AKBypassButton(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Required initializer</p>","parent_name":"AKBypassButton"},"Classes/AKBypassButton.html#/c:@M@AudioKit@objc(cs)AKBypassButton(im)drawRect:":{"name":"draw(_:)","abstract":"<p>Draw the button</p>","parent_name":"AKBypassButton"},"Classes/AKButton.html#/c:@M@AudioKit@objc(cs)AKButton(py)callback":{"name":"callback","abstract":"<p>Undocumented</p>","parent_name":"AKButton"},"Classes/AKButton.html#/c:@M@AudioKit@objc(cs)AKButton(py)title":{"name":"title","abstract":"<p>Text to display on the button</p>","parent_name":"AKButton"},"Classes/AKButton.html#/c:@M@AudioKit@objc(cs)AKButton(py)color":{"name":"color","abstract":"<p>Background color of the button</p>","parent_name":"AKButton"},"Classes/AKButton.html#/c:@M@AudioKit@objc(cs)AKButton(py)borderColor":{"name":"borderColor","abstract":"<p>Button border color</p>","parent_name":"AKButton"},"Classes/AKButton.html#/c:@M@AudioKit@objc(cs)AKButton(py)borderWidth":{"name":"borderWidth","abstract":"<p>Undocumented</p>","parent_name":"AKButton"},"Classes/AKButton.html#/c:@M@AudioKit@objc(cs)AKButton(py)textColor":{"name":"textColor","abstract":"<p>Text color</p>","parent_name":"AKButton"},"Classes/AKButton.html#/s:8AudioKit8AKButtonC5styleAA0C5StyleOv":{"name":"style","abstract":"<p>Undocumented</p>","parent_name":"AKButton"},"Classes/AKButton.html#/c:@M@AudioKit@objc(cs)AKButton(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Handle new touches</p>","parent_name":"AKButton"},"Classes/AKButton.html#/c:@M@AudioKit@objc(cs)AKButton(im)touchesEnded:withEvent:":{"name":"touchesEnded(_:with:)","abstract":"<p>Undocumented</p>","parent_name":"AKButton"},"Classes/AKButton.html#/c:@M@AudioKit@objc(cs)AKButton(im)initWithTitle:color:frame:callback:":{"name":"init(title:color:frame:callback:)","abstract":"<p>Initialize the button</p>","parent_name":"AKButton"},"Classes/AKButton.html#/c:@M@AudioKit@objc(cs)AKButton(im)initWithFrame:":{"name":"init(frame:)","abstract":"<p>Initialization with no details</p>","parent_name":"AKButton"},"Classes/AKButton.html#/c:@M@AudioKit@objc(cs)AKButton(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialization within Interface Builder</p>","parent_name":"AKButton"},"Classes/AKButton.html#/c:@M@AudioKit@objc(cs)AKButton(im)prepareForInterfaceBuilder":{"name":"prepareForInterfaceBuilder()","abstract":"<p>Actions to perform to make sure the view is renderable in Interface Builder</p>","parent_name":"AKButton"},"Classes/AKButton.html#/c:@M@AudioKit@objc(cs)AKButton(cpy)requiresConstraintBasedLayout":{"name":"requiresConstraintBasedLayout","abstract":"<p>Require constraint-based layout</p>","parent_name":"AKButton"},"Classes/AKButton.html#/c:@M@AudioKit@objc(cs)AKButton(im)drawRect:":{"name":"draw(_:)","abstract":"<p>Draw the button</p>","parent_name":"AKButton"},"Classes/AKADSRView.html#/s:8AudioKit10AKADSRViewC12ADSRCallbacka":{"name":"ADSRCallback","abstract":"<p>Type of function to call when values of the ADSR have changed</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack time in seconds, Default: 0.1</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(py)decayDuration":{"name":"decayDuration","abstract":"<p>Decay time in seconds, Default: 0.1</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(py)sustainLevel":{"name":"sustainLevel","abstract":"<p>Sustain Level (0-1), Default: 0.5</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release time in seconds, Default: 0.1</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(py)callback":{"name":"callback","abstract":"<p>Function to call when the values of the ADSR changes</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(py)attackColor":{"name":"attackColor","abstract":"<p>/ Color Declarations","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(py)decayColor":{"name":"decayColor","abstract":"<p>Color in the decay portion of the UI element</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(py)sustainColor":{"name":"sustainColor","abstract":"<p>Color in the sustain portion of the UI element</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(py)releaseColor":{"name":"releaseColor","abstract":"<p>Color in the release portion of the UI element</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(py)bgColor":{"name":"bgColor","abstract":"<p>Background color</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(py)curveStrokeWidth":{"name":"curveStrokeWidth","abstract":"<p>Width of the envelope curve</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(py)curveColor":{"name":"curveColor","abstract":"<p>Color of the envelope curve</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(im)initWithCallback:":{"name":"init(callback:)","abstract":"<p>Initialize the view, usually with a callback</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialization of the view from within interface builder</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(im)prepareForInterfaceBuilder":{"name":"prepareForInterfaceBuilder()","abstract":"<p>Perform necessary operation to allow the view to be rendered in interface builder</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(py)intrinsicContentSize":{"name":"intrinsicContentSize","abstract":"<p>Size of the view</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(cpy)requiresConstraintBasedLayout":{"name":"requiresConstraintBasedLayout","abstract":"<p>Requeire a constraint based layout with interface builder</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Handle new touches</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(im)touchesMoved:withEvent:":{"name":"touchesMoved(_:with:)","abstract":"<p>Handle moving touches</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html#/c:@M@AudioKit@objc(cs)AKADSRView(im)drawRect:":{"name":"draw(_:)","abstract":"<p>Draw the view</p>","parent_name":"AKADSRView"},"Classes/AKADSRView.html":{"name":"AKADSRView","abstract":"<p>A click and draggable view of an ADSR Envelope (Atttack, Decay, Sustain, Release)</p>"},"Classes/AKButton.html":{"name":"AKButton","abstract":"<p>Undocumented</p>"},"Classes/AKBypassButton.html":{"name":"AKBypassButton","abstract":"<p>Button that just access the start/stop feature of an AKNode,"},"Classes/AKKeyboardView.html":{"name":"AKKeyboardView","abstract":"<p>Clickable keyboard mainly used for AudioKit playgrounds</p>"},"Protocols/AKKeyboardDelegate.html":{"name":"AKKeyboardDelegate","abstract":"<p>Delegate for keyboard events</p>"},"Classes/AKPlaygroundLoop.html":{"name":"AKPlaygroundLoop","abstract":"<p>Class to handle updating via CADisplayLink</p>"},"Classes/AKPlaygroundView.html":{"name":"AKPlaygroundView","abstract":"<p>UIView for playgrounds allowing live views to be generated easily</p>"},"Classes/AKPresetLoaderView.html":{"name":"AKPresetLoaderView","abstract":"<p>Preset view scoller</p>"},"Classes/AKPropertySlider.html":{"name":"AKPropertySlider","abstract":"<p>Simple slider interface for AudioKit properties</p>"},"Classes/AKResourcesAudioFileLoaderView.html":{"name":"AKResourcesAudioFileLoaderView","abstract":"<p>View to choose from audio files to use in playgrounds</p>"},"Classes/AKStepper.html":{"name":"AKStepper","abstract":"<p>Incrementor view, normally used for MIDI presets, but could be useful elsehwere</p>"},"Classes/AKTelephoneView.html":{"name":"AKTelephoneView","abstract":"<p>This is primarily for the telephone page in the Synthesis playground</p>"},"Classes/MultitouchGestureRecognizer.html":{"name":"MultitouchGestureRecognizer","abstract":"<p><code>UIGestureRecognizer</code> subclass which tracks the state of individual touches.</p>"},"Classes/AKFFTTap.html#/c:@M@AudioKit@objc(cs)AKFFTTap(py)fftData":{"name":"fftData","abstract":"<p>Array of FFT data</p>","parent_name":"AKFFTTap"},"Classes/AKFFTTap.html#/c:@M@AudioKit@objc(cs)AKFFTTap(im)init:":{"name":"init(_:)","abstract":"<p>Initialze the FFT calculation on a given node</p>","parent_name":"AKFFTTap"},"Classes/AKFFTTap.html#/c:@M@AudioKit@objc(cs)AKFFTTap(im)fft:updatedWithFFTData:bufferSize:":{"name":"fft(_:updatedWithFFTData:bufferSize:)","abstract":"<p>Callback function for FFT computation</p>","parent_name":"AKFFTTap"},"Classes/AKAmplitudeTap.html#/s:8AudioKit14AKAmplitudeTapCAcA6AKNodeCSgcfc":{"name":"init(_:)","abstract":"<p>Intialize the ampltiude tap</p>","parent_name":"AKAmplitudeTap"},"Classes/AKAmplitudeTap.html":{"name":"AKAmplitudeTap","abstract":"<p>Tap to do basic amplitude analysis on any node</p>"},"Classes/AKFFTTap.html":{"name":"AKFFTTap","abstract":"<p>FFT Calculation for any node</p>"},"Classes/AKOutputWaveformPlot.html#/c:@M@AudioKit@objc(cs)AKOutputWaveformPlot(py)isConnected":{"name":"isConnected","parent_name":"AKOutputWaveformPlot"},"Classes/AKOutputWaveformPlot.html#/c:@M@AudioKit@objc(cs)AKOutputWaveformPlot(im)pause":{"name":"pause()","parent_name":"AKOutputWaveformPlot"},"Classes/AKOutputWaveformPlot.html#/c:@M@AudioKit@objc(cs)AKOutputWaveformPlot(im)resume":{"name":"resume()","parent_name":"AKOutputWaveformPlot"},"Classes/AKOutputWaveformPlot.html#/c:@M@AudioKit@objc(cs)AKOutputWaveformPlot(im)initWithFrame:":{"name":"init(frame:)","abstract":"<p>Initialize the plot in a frame</p>","parent_name":"AKOutputWaveformPlot"},"Classes/AKOutputWaveformPlot.html#/c:@M@AudioKit@objc(cs)AKOutputWaveformPlot(im)initWithFrame:bufferSize:":{"name":"init(frame:bufferSize:)","abstract":"<p>Initialize the plot in a frame with a different buffer size</p>","parent_name":"AKOutputWaveformPlot"},"Classes/AKOutputWaveformPlot.html#/c:@M@AudioKit@objc(cs)AKOutputWaveformPlot(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Required coder-based initialization (for use with Interface Builder)</p>","parent_name":"AKOutputWaveformPlot"},"Classes/AKOutputWaveformPlot.html#/c:@M@AudioKit@objc(cs)AKOutputWaveformPlot(cm)createViewWithWidth:height:":{"name":"createView(width:height:)","abstract":"<p>Create a View with the plot (usually for playgrounds)</p>","parent_name":"AKOutputWaveformPlot"},"Classes/AKNodeOutputPlot.html#/c:@M@AudioKit@objc(cs)AKNodeOutputPlot(py)node":{"name":"node","abstract":"<p>The node whose output to graph</p>","parent_name":"AKNodeOutputPlot"},"Classes/AKNodeOutputPlot.html#/c:@M@AudioKit@objc(cs)AKNodeOutputPlot(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Required coder-based initialization (for use with Interface Builder)</p>","parent_name":"AKNodeOutputPlot"},"Classes/AKNodeOutputPlot.html#/c:@M@AudioKit@objc(cs)AKNodeOutputPlot(im)init:frame:bufferSize:":{"name":"init(_:frame:bufferSize:)","abstract":"<p>Initialize the plot with the output from a given node and optional plot size</p>","parent_name":"AKNodeOutputPlot"},"Classes/AKNodeFFTPlot.html#/c:@M@AudioKit@objc(cs)AKNodeFFTPlot(py)node":{"name":"node","abstract":"<p>The node whose output to graph</p>","parent_name":"AKNodeFFTPlot"},"Classes/AKNodeFFTPlot.html#/c:@M@AudioKit@objc(cs)AKNodeFFTPlot(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Required coder-based initialization (for use with Interface Builder)</p>","parent_name":"AKNodeFFTPlot"},"Classes/AKNodeFFTPlot.html#/c:@M@AudioKit@objc(cs)AKNodeFFTPlot(im)init:frame:bufferSize:":{"name":"init(_:frame:bufferSize:)","abstract":"<p>Initialize the plot with the output from a given node and optional plot size</p>","parent_name":"AKNodeFFTPlot"},"Classes/AKNodeFFTPlot.html#/c:@M@AudioKit@objc(cs)AKNodeFFTPlot(im)fft:updatedWithFFTData:bufferSize:":{"name":"fft(_:updatedWithFFTData:bufferSize:)","abstract":"<p>Callback function for FFT data:</p>","parent_name":"AKNodeFFTPlot"},"Classes/AKRollingOutputPlot.html#/c:@M@AudioKit@objc(cs)AKRollingOutputPlot(im)reconnect":{"name":"reconnect()","abstract":"<p>Useful to reconnect after connecting to Audiobus or IAA</p>","parent_name":"AKRollingOutputPlot"},"Classes/AKRollingOutputPlot.html#/c:@M@AudioKit@objc(cs)AKRollingOutputPlot(im)initWithFrame:":{"name":"init(frame:)","abstract":"<p>Initialize the plot in a frame</p>","parent_name":"AKRollingOutputPlot"},"Classes/AKRollingOutputPlot.html#/c:@M@AudioKit@objc(cs)AKRollingOutputPlot(im)initWithFrame:bufferSize:":{"name":"init(frame:bufferSize:)","abstract":"<p>Initialize the plot in a frame with a different buffer size</p>","parent_name":"AKRollingOutputPlot"},"Classes/AKRollingOutputPlot.html#/c:@M@AudioKit@objc(cs)AKRollingOutputPlot(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Required coder-based initialization (for use with Interface Builder)</p>","parent_name":"AKRollingOutputPlot"},"Classes/AKRollingOutputPlot.html#/c:@M@AudioKit@objc(cs)AKRollingOutputPlot(cm)createViewWithWidth:height:":{"name":"createView(width:height:)","abstract":"<p>Create a View with the plot (usually for playgrounds)</p>","parent_name":"AKRollingOutputPlot"},"Classes/AKRollingOutputPlot.html":{"name":"AKRollingOutputPlot","abstract":"<p>Wrapper class for plotting audio from the final mix in a rolling plot</p>"},"Classes/AKNodeFFTPlot.html":{"name":"AKNodeFFTPlot","abstract":"<p>Plot the FFT output from any node in an signal processing graph</p>"},"Classes/AKNodeOutputPlot.html":{"name":"AKNodeOutputPlot","abstract":"<p>Plot the output from any node in an signal processing graph</p>"},"Classes/AKOutputWaveformPlot.html":{"name":"AKOutputWaveformPlot","abstract":"<p>Wrapper class for plotting audio from the final mix in a waveform plot</p>"},"Random Number Generators.html#/s:8AudioKit6randomS2d_SdtF":{"name":"random(_:_:)","abstract":"<p>Random double between bounds</p>"},"Math.html#/s:8AudioKit3absAA11AKOperationCADF":{"name":"abs(_:)","abstract":"<p>Performs absolute value on the operation</p>"},"Math.html#/s:8AudioKit4ceilAA10AKDurationVADF":{"name":"ceil(_:)","abstract":"<p>Upper bound of a duration, in beats</p>"},"Math.html#/s:8AudioKit5floorAA11AKOperationCADF":{"name":"floor(_:)","abstract":"<p>Performs floor calculation on the operation</p>"},"Math.html#/s:8AudioKit5fractAA11AKOperationCADF":{"name":"fract(_:)","abstract":"<p>Returns the fractional part of the operation (as opposed to the integer part)</p>"},"Math.html#/s:8AudioKit3logAA11AKOperationCADF":{"name":"log(_:)","abstract":"<p>Performs natural logarithm on the operation</p>"},"Math.html#/s:8AudioKit5log10AA11AKOperationCADF":{"name":"log10(_:)","abstract":"<p>Performs Base 10 logarithm on the operation</p>"},"Math.html#/s:8AudioKit3maxAA11AKOperationCAA19AKComputedParameter_p_AaE_ptF":{"name":"max(_:_:)","abstract":"<p>Maximum of two operations</p>"},"Math.html#/s:8AudioKit3maxAA11AKOperationCAA19AKComputedParameter_p_AA11AKParameter_ptF":{"name":"max(_:_:)","abstract":"<p>Maximum of an operation and a parameter</p>"},"Math.html#/s:8AudioKit3maxAA11AKOperationCAA11AKParameter_p_AA19AKComputedParameter_ptF":{"name":"max(_:_:)","abstract":"<p>Maximum of an operation and a parameter</p>"},"Math.html#/s:8AudioKit3minAA11AKOperationCAA19AKComputedParameter_p_AaE_ptF":{"name":"min(_:_:)","abstract":"<p>Minimum of two operations</p>"},"Math.html#/s:8AudioKit3minAA11AKOperationCAA19AKComputedParameter_p_AA11AKParameter_ptF":{"name":"min(_:_:)","abstract":"<p>Minimum of an operation and a parameter</p>"},"Math.html#/s:8AudioKit3minAA11AKOperationCAA11AKParameter_p_AA19AKComputedParameter_ptF":{"name":"min(_:_:)","abstract":"<p>Minimum of an operation and a parameter</p>"},"Math.html#/s:8AudioKit5mixerAA11AKOperationCAA11AKParameter_p_AaE_pAaE_p7balancetF":{"name":"mixer(_:_:balance:)","abstract":"<p>Mix together two parameters</p>"},"Math.html#/s:8AudioKit5roundAA11AKOperationCADF":{"name":"round(_:)","abstract":"<p>Rounds the operation to the nearest integer</p>"},"Math.html#/s:8AudioKit1moiAA11AKOperationCAA11AKParameter_p_AaE_ptF":{"name":"*(_:_:)","abstract":"<p>Helper function for Multiplication</p>"},"Math.html#/s:8AudioKit1moiAA17AKStereoOperationCAD_AA11AKParameter_ptF":{"name":"*(_:_:)","abstract":"<p>Helper function for Multiplication</p>"},"Math.html#/s:8AudioKit1moiAA17AKStereoOperationCAA11AKParameter_p_ADtF":{"name":"*(_:_:)","abstract":"<p>Helper function for Multiplication</p>"},"Math.html#/s:8AudioKit1moiSdAA7Numeric_p_AaC_ptF":{"name":"*(_:_:)","abstract":"<p>Multiplication</p>"},"Math.html#/s:8AudioKit1poiAA10AKDurationVAD_ADtF":{"name":"+(_:_:)","abstract":"<p>Adding durations</p>"},"Math.html#/s:8AudioKit1poiSdAA7Numeric_p_AaC_ptF":{"name":"+(_:_:)","abstract":"<p>Addition</p>"},"Math.html#/s:8AudioKit1poiAA11AKOperationCAA11AKParameter_p_AaE_ptF":{"name":"+(_:_:)","abstract":"<p>Helper function for addition</p>"},"Math.html#/s:8AudioKit1poiAA17AKStereoOperationCAD_ADtF":{"name":"+(_:_:)","abstract":"<p>Helper function for addition</p>"},"Math.html#/s:8AudioKit1soiAA11AKOperationCAA11AKParameter_p_AaE_ptF":{"name":"-(_:_:)","abstract":"<p>Helper function for Subtraction</p>"},"Math.html#/s:8AudioKit1soiAA17AKStereoOperationCAD_ADtF":{"name":"-(_:_:)","abstract":"<p>Helper function for subtraction</p>"},"Math.html#/s:8AudioKit1soiAA10AKDurationVAD_ADtF":{"name":"-(_:_:)","abstract":"<p>Subtracting durations</p>"},"Math.html#/s:8AudioKit1soiSdAA7Numeric_p_AaC_ptF":{"name":"-(_:_:)","abstract":"<p>Subtraction</p>"},"Math.html#/s:8AudioKit1doiSdAA7Numeric_p_AaC_ptF":{"name":"/(_:_:)","abstract":"<p>Division</p>"},"Math.html#/s:8AudioKit1doiAA11AKOperationCAA11AKParameter_p_AaE_ptF":{"name":"/(_:_:)","abstract":"<p>Helper function for Division</p>"},"Math.html#/s:8AudioKit1doiAA17AKStereoOperationCAD_AA11AKParameter_ptF":{"name":"/(_:_:)","abstract":"<p>Helper function for Division</p>"},"Math.html#/s:8AudioKit2eeoiSbAA10AKDurationV_ADtF":{"name":"==(_:_:)","abstract":"<p>Duration equality</p>"},"Math.html#/s:8AudioKit2neoiSbAA10AKDurationV_ADtF":{"name":"!=(_:_:)","abstract":"<p>Duration inequality</p>"},"Math.html#/s:8AudioKit1loiSbAA10AKDurationV_ADtF":{"name":"<(_:_:)","abstract":"<p>Duration less than</p>"},"Math.html#/s:8AudioKit2leoiSbAA10AKDurationV_ADtF":{"name":"<=(_:_:)","abstract":"<p>Duration less than or equal to</p>"},"Math.html#/s:8AudioKit1goiSbAA10AKDurationV_ADtF":{"name":">(_:_:)","abstract":"<p>Duration greater than</p>"},"Math.html#/s:8AudioKit2geoiSbAA10AKDurationV_ADtF":{"name":">=(_:_:)","abstract":"<p>Duration greater than or equal to</p>"},"Math.html#/s:8AudioKit1roiAA10AKDurationVAD_ADtF":{"name":"%(_:_:)","abstract":"<p>Modulus of the duration&rsquo;s beats</p>"},"Math.html#/s:8AudioKit2peoiyAA10AKDurationVz_ADtF":{"name":"+=(_:_:)","abstract":"<p>Add to a duration</p>"},"Math.html#/s:8AudioKit2seoiyAA10AKDurationVz_ADtF":{"name":"-=(_:_:)","abstract":"<p>Subtract from a duration</p>"},"Protocols/Numeric.html#/s:8AudioKit7NumericP5valueSdyF":{"name":"value()","abstract":"<p>Raw value of the numeric parameter</p>","parent_name":"Numeric"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationC11descriptionSSv":{"name":"description","abstract":"<p>Redefining description to return the operation string</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationC6toMonoAA11AKOperationCyF":{"name":"toMono()","abstract":"<p>Create a mono signal by dropping the right channel</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationC4leftAA11AKOperationCyF":{"name":"left()","abstract":"<p>Create a mono signal by dropping the right channel</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationC5rightAA11AKOperationCyF":{"name":"right()","abstract":"<p>Create a mono signal by dropping the left channel</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationC8toStereoACyF":{"name":"toStereo()","abstract":"<p>An operation is requiring a parameter to be stereo, which in this case, it is, so just return self</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationC5inputACvZ":{"name":"input","abstract":"<p>Default stereo input to any operation stack</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationCACSScfc":{"name":"init(_:)","abstract":"<p>Initialize the stereo operation with a Sporth string</p>","parent_name":"AKStereoOperation"},"Classes/AKStereoOperation.html#/s:8AudioKit17AKStereoOperationCACSS6module_SS5setupSayAA11AKParameter_pG6inputsdtcfc":{"name":"init(module:setup:inputs:)","abstract":"<p>Initialize the stereo operation</p>","parent_name":"AKStereoOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC11descriptionSSv":{"name":"description","abstract":"<p>Redefining description to return the operation string</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC9leftInputACvZ":{"name":"leftInput","abstract":"<p>Left input to any stereo operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC10rightInputACvZ":{"name":"rightInput","abstract":"<p>Right input to any stereo operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC7triggerACvZ":{"name":"trigger","abstract":"<p>Dummy trigger</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC10parametersSayACGvZ":{"name":"parameters","abstract":"<p>An= array of 14 parameters which may be sent to operations</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC6toMonoACyF":{"name":"toMono()","abstract":"<p>Convert the operation to a mono operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC3absACyF":{"name":"abs()","abstract":"<p>Performs absolute value on the operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5floorACyF":{"name":"floor()","abstract":"<p>Performs floor calculation on the operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5fractACyF":{"name":"fract()","abstract":"<p>Returns the fractional part of the operation (as opposed to the integer part)</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC3logACyF":{"name":"log()","abstract":"<p>Performs natural logarithm on the operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5log10ACyF":{"name":"log10()","abstract":"<p>Performs Base 10 logarithm on the operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5roundACyF":{"name":"round()","abstract":"<p>Rounds the operation to the nearest integer</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC19midiNoteToFrequencyACyF":{"name":"midiNoteToFrequency()","abstract":"<p>Returns a frequency for a given MIDI note number</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationCACSdcfc":{"name":"init(_:)","abstract":"<p>Initialize the operation as a constant value</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationCACSScfc":{"name":"init(_:)","abstract":"<p>Initialize the operation with a Sporth string</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationCACSS6module_SS5setupSayAA11AKParameter_pG6inputsdtcfc":{"name":"init(module:setup:inputs:)","abstract":"<p>Initialize the operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC8sineWaveAcA11AKParameter_p9frequency_AaE_p9amplitudetFZ":{"name":"sineWave(frequency:amplitude:)","abstract":"<p>Standard Sine Wave</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5minusAcA11AKParameter_pF":{"name":"minus(_:)","abstract":"<p>Subtraction of parameters</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC10portamentoAcA11AKParameter_p12halfDuration_tF":{"name":"portamento(halfDuration:)","abstract":"<p>Portamento-style control signal smoothing","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC9metronomeAcA11AKParameter_p9frequency_tFZ":{"name":"metronome(frequency:)","abstract":"<p>Metro produces a series of 1-sample ticks at a regular rate. Typically, this","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC21triggeredWithEnvelopeAcA11AKParameter_p7trigger_AaE_p6attackAaE_p4holdAaE_p7releasetF":{"name":"triggeredWithEnvelope(trigger:attack:hold:release:)","abstract":"<p>Trigger based linear AHD envelope generator</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC17gatedADSREnvelopeAcA11AKParameter_p4gate_AaE_p6attackAaE_p5decayAaE_p7sustainAaE_p7releasetF":{"name":"gatedADSREnvelope(gate:attack:decay:sustain:release:)","abstract":"<p>Gate based linear AHD envelope generator</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC17randomNumberPulseAcA11AKParameter_p7minimum_AaE_p7maximumAaE_p15updateFrequencytFZ":{"name":"randomNumberPulse(minimum:maximum:updateFrequency:)","abstract":"<p>Loosely based off of the Csound opcode randomh. The design is equivalent to","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5timesAcA11AKParameter_pF":{"name":"times(_:)","abstract":"<p>Multiplication of parameters</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC8scaledByAcA11AKParameter_pF":{"name":"scaledBy(_:)","abstract":"<p>Offsetting by way of multiplication</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC10whiteNoiseAcA11AKParameter_p9amplitude_tFZ":{"name":"whiteNoise(amplitude:)","abstract":"<p>White noise generator</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC12fmOscillatorAcA11AKParameter_p13baseFrequency_AaE_p17carrierMultiplierAaE_p010modulatingJ0AaE_p15modulationIndexAaE_p9amplitudetFZ":{"name":"fmOscillator(baseFrequency:carrierMultiplier:modulatingMultiplier:modulationIndex:amplitude:)","abstract":"<p>Classic FM Synthesis audio generation.</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5countAcA11AKParameter_p7maximum_Sb7loopingtF":{"name":"count(maximum:looping:)","abstract":"<p>Keep track of the number of times a trigger has fired</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC10squareWaveAcA11AKParameter_p9frequency_AaE_p9amplitudeAaE_p10pulseWidthtFZ":{"name":"squareWave(frequency:amplitude:pulseWidth:)","abstract":"<p>This is a bandlimited square oscillator ported from the <q>square</q> function","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC13brownianNoiseAcA11AKParameter_p9amplitude_tFZ":{"name":"brownianNoise(amplitude:)","abstract":"<p>Brownian noise generator</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC9incrementAcA11AKParameter_p2on_AaE_p2byAaE_p7minimumAaE_p7maximumtF":{"name":"increment(on:by:minimum:maximum:)","abstract":"<p>Increment a signal by a default value of 1</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC4saveACSi14parameterIndex_tF":{"name":"save(parameterIndex:)","abstract":"<p>Save a value into the parameters array for using outside of the operation</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC10vocalTractAcA11AKParameter_p9frequency_AaE_p14tonguePositionAaE_p0H8DiameterAaE_p9tensenessAaE_p8nasalitytFZ":{"name":"vocalTract(frequency:tonguePosition:tongueDiameter:tenseness:nasality:)","abstract":"<p>Karplus-Strong plucked string instrument.</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC6jitterAcA11AKParameter_p9amplitude_AaE_p16minimumFrequencyAaE_p07maximumH0tFZ":{"name":"jitter(amplitude:minimumFrequency:maximumFrequency:)","abstract":"<p>A signal with random fluctuations","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC6phasorAcA11AKParameter_p9frequency_Sd5phasetFZ":{"name":"phasor(frequency:phase:)","abstract":"<p>Produces a normalized sawtooth wave between the values of 0 and 1. Phasors","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC13pluckedStringA2C7trigger_AA11AKParameter_p9frequencyAaF_p9amplitudeSd15lowestFrequencytFZ":{"name":"pluckedString(trigger:frequency:amplitude:lowestFrequency:)","abstract":"<p>Karplus-Strong plucked string instrument.</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC4plusAcA11AKParameter_pF":{"name":"plus(_:)","abstract":"<p>Addition/Summation of operations</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC8offsetByAcA11AKParameter_pF":{"name":"offsetBy(_:)","abstract":"<p>Offsetting by way of addition</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC18morphingOscillatorAcA11AKParameter_p9frequency_AaE_p9amplitudeAaE_p5indextFZ":{"name":"morphingOscillator(frequency:amplitude:index:)","abstract":"<p>Morphing Oscillator </p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC5scaleAcA11AKParameter_p7minimum_AaE_p7maximumtF":{"name":"scale(minimum:maximum:)","abstract":"<p>This scales from -1 to 1 to a range defined by a minimum and maximum point in the input and output domain.</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC9pinkNoiseAcA11AKParameter_p9amplitude_tFZ":{"name":"pinkNoise(amplitude:)","abstract":"<p>Faust-based pink noise generator</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC9dividedByAcA11AKParameter_pF":{"name":"dividedBy(_:)","abstract":"<p>Division of parameters</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC6squareAcA11AKParameter_p9frequency_AaE_p9amplitudeAaE_p5phasetFZ":{"name":"square(frequency:amplitude:phase:)","abstract":"<p>Simple square oscillator, not-band limited, can be used for LFO or wave,","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC15periodicTriggerAcA11AKParameter_p6period_tFZ":{"name":"periodicTrigger(period:)","abstract":"<p>Produce a set of triggers spaced apart by time.</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC12sawtoothWaveAcA11AKParameter_p9frequency_AaE_p9amplitudetFZ":{"name":"sawtoothWave(frequency:amplitude:)","abstract":"<p>Bandlimited sawtooth oscillator This is a bandlimited sawtooth oscillator","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC11lineSegmentA2C7trigger_AA11AKParameter_p5startAaF_p3endAaF_p8durationtFZ":{"name":"lineSegment(trigger:start:end:duration:)","abstract":"<p>Line Segment to change values over time</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC18exponentialSegmentA2C7trigger_AA11AKParameter_p5startAaF_p3endAaF_p8durationtFZ":{"name":"exponentialSegment(trigger:start:end:duration:)","abstract":"<p>Exponential Segment to change values over time</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC17randomVertexPulseAcA11AKParameter_p7minimum_AaE_p7maximumAaE_p15updateFrequencytFZ":{"name":"randomVertexPulse(minimum:maximum:updateFrequency:)","abstract":"<p>Line segments with vertices at random points</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC12triangleWaveAcA11AKParameter_p9frequency_AaE_p9amplitudetFZ":{"name":"triangleWave(frequency:amplitude:)","abstract":"<p>This is a bandlimited triangle oscillator","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC8sawtoothAcA11AKParameter_p9frequency_AaE_p9amplitudeAaE_p5phasetFZ":{"name":"sawtooth(frequency:amplitude:phase:)","abstract":"<p>Simple sawtooth oscillator, not-band limited, can be used for LFO or wave,","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC15reverseSawtoothAcA11AKParameter_p9frequency_AaE_p9amplitudeAaE_p5phasetFZ":{"name":"reverseSawtooth(frequency:amplitude:phase:)","abstract":"<p>Simple reverse sawtooth oscillator, not-band limited, can be used for LFO or wave.</p>","parent_name":"AKOperation"},"Classes/AKOperation.html#/s:8AudioKit11AKOperationC8triangleAcA11AKParameter_p9frequency_AaE_p9amplitudeAaE_p5phasetFZ":{"name":"triangle(frequency:amplitude:phase:)","abstract":"<p>Simple triangle oscillator, not-band limited, can be used for LFO or wave,","parent_name":"AKOperation"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE10pitchShiftAA11AKOperationCAA11AKParameter_p9semitones_tF":{"name":"pitchShift(semitones:)","abstract":"<p>This will digitally degrade a signal.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE23reverberateWithChowningAA11AKOperationCyF":{"name":"reverberateWithChowning()","abstract":"<p>This is was built using the JC reverb implentation found in FAUST. According","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE15stringResonatorAA11AKOperationCAA11AKParameter_p9frequency_AaG_p8feedbacktF":{"name":"stringResonator(frequency:feedback:)","abstract":"<p>A modal resonance filter used for modal synthesis. Plucked and bell sounds","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE7distortAA11AKOperationCAA11AKParameter_p7pregain_AaG_p8postgainAaG_p012postiveShapeD0AaG_p08negativekD0tF":{"name":"distort(pregain:postgain:postiveShapeParameter:negativeShapeParameter:)","abstract":"<p>Distortion using a modified hyperbolic tangent function.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE14resonantFilterAA11AKOperationCAA11AKParameter_p9frequency_AaG_p9bandwidthtF":{"name":"resonantFilter(frequency:bandwidth:)","abstract":"<p>A second-order resonant filter.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE13variableDelayAA11AKOperationCAA11AKParameter_p4time_AaG_p8feedbackSd07maximumF4TimetF":{"name":"variableDelay(time:feedback:maximumDelayTime:)","abstract":"<p>A delay line with cubic interpolation.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE24lowPassButterworthFilterAA11AKOperationCAA11AKParameter_p15cutoffFrequency_tF":{"name":"lowPassButterworthFilter(cutoffFrequency:)","abstract":"<p>These filters are Butterworth second-order IIR filters. They offer an almost","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE25reverberateWithCombFilterAA11AKOperationCAA11AKParameter_p14reverbDuration_AaG_p04loopL0tF":{"name":"reverberateWithCombFilter(reverbDuration:loopDuration:)","abstract":"<p>This filter reiterates input with an echo density determined by","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE4clipAA11AKOperationCAA11AKParameter_pF":{"name":"clip(_:)","abstract":"<p>Clips a signal to a predefined limit, in a <q>soft</q> manner.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE16trackedAmplitudeAA11AKOperationCAA11AKParameter_pF":{"name":"trackedAmplitude(_:)","abstract":"<p>Panner</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE11smoothDelayAA11AKOperationCAA11AKParameter_p4time_AaG_p8feedbackSi7samplesSd07maximumF4TimetF":{"name":"smoothDelay(time:feedback:samples:maximumDelayTime:)","abstract":"<p>Smooth variable delay line without varispeed pitch.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE16moogLadderFilterAA11AKOperationCAA11AKParameter_p15cutoffFrequency_AaG_p9resonancetF":{"name":"moogLadderFilter(cutoffFrequency:resonance:)","abstract":"<p>Moog Ladder is an new digital implementation of the Moog ladder filter based","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE3panAA17AKStereoOperationCAA11AKParameter_pF":{"name":"pan(_:)","abstract":"<p>Panner</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE17korgLowPassFilterAA11AKOperationCAA11AKParameter_p15cutoffFrequency_AaG_p9resonanceAaG_p10saturationtF":{"name":"korgLowPassFilter(cutoffFrequency:resonance:saturation:)","abstract":"<p>Analogue model of the Korg 35 Lowpass Filter</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE23reverberateWithCostelloAA17AKStereoOperationCAA11AKParameter_p8feedback_AaG_p15cutoffFrequencytF":{"name":"reverberateWithCostello(feedback:cutoffFrequency:)","abstract":"<p>8 delay line stereo FDN reverb, with feedback matrix based upon physical","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE25highPassButterworthFilterAaB_pAA11AKParameter_p15cutoffFrequency_tF":{"name":"highPassButterworthFilter(cutoffFrequency:)","abstract":"<p>These filters are Butterworth second-order IIR filters. They offer an almost","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE14highPassFilterAA11AKOperationCAA11AKParameter_p14halfPowerPoint_tF":{"name":"highPassFilter(halfPowerPoint:)","abstract":"<p>A complement to the AKLowPassFilter.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE7dcBlockAA11AKOperationCyF":{"name":"dcBlock()","abstract":"<p>Implements the DC blocking filter Y[i] = X[i] - X[i-1] + (igain * Y[i-1])","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE22threePoleLowPassFilterAA11AKOperationCAA11AKParameter_p10distortion_AaG_p15cutoffFrequencyAaG_p9resonancetF":{"name":"threePoleLowPassFilter(distortion:cutoffFrequency:resonance:)","abstract":"<p>3-pole (18 db/oct slope) Low-Pass filter with resonance and tanh distortion.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE5delayAA11AKOperationCSd4time_AA11AKParameter_p8feedbacktF":{"name":"delay(time:feedback:)","abstract":"<p>Add a delay to an incoming signal with optional feedback.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE8bitCrushAA11AKOperationCAA11AKParameter_p0E5Depth_AaG_p10sampleRatetF":{"name":"bitCrush(bitDepth:sampleRate:)","abstract":"<p>This will digitally degrade a signal.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE36reverberateWithFlatFrequencyResponseAA11AKOperationCAA11AKParameter_p14reverbDuration_Sd04loopM0tF":{"name":"reverberateWithFlatFrequencyResponse(reverbDuration:loopDuration:)","abstract":"<p>This filter reiterates the input with an echo density determined by loop","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE7autoWahAA11AKOperationCAA11AKParameter_p3wah_AaG_p9amplitudetF":{"name":"autoWah(wah:amplitude:)","abstract":"<p>An automatic wah effect, ported from Guitarix via Faust.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE13lowPassFilterAA11AKOperationCAA11AKParameter_p14halfPowerPoint_tF":{"name":"lowPassFilter(halfPowerPoint:)","abstract":"<p>A first-order recursive low-pass filter with variable frequency response.</p>","parent_name":"AKComputedParameter"},"Protocols/AKComputedParameter.html#/s:8AudioKit19AKComputedParameterPAAE20modalResonanceFilterAA11AKOperationCAA11AKParameter_p9frequency_AaG_p13qualityFactortF":{"name":"modalResonanceFilter(frequency:qualityFactor:)","abstract":"<p>A modal resonance filter used for modal synthesis. Plucked and bell sounds","parent_name":"AKComputedParameter"},"Protocols/AKParameter.html#/s:8AudioKit11AKParameterP6toMonoAA11AKOperationCyF":{"name":"toMono()","abstract":"<p>Require a function to produce a mono operation regarless of the mono/stereo nature of the parameter</p>","parent_name":"AKParameter"},"Protocols/AKParameter.html#/s:8AudioKit11AKParameterP8toStereoAA17AKStereoOperationCyF":{"name":"toStereo()","abstract":"<p>Require a function to produce a stereo operation regardless of the mono/stereo nature of the parameter</p>","parent_name":"AKParameter"},"Protocols/AKParameter.html":{"name":"AKParameter","abstract":"<p>AKParameters are simply arguments that can be passed into AKComputedParameters"},"Protocols/AKComputedParameter.html":{"name":"AKComputedParameter","abstract":"<p>A computed parameter differs from a regular parameter in that it only exists within an operation"},"Classes/AKOperation.html":{"name":"AKOperation","abstract":"<p>An AKOperation is a computed parameter that can be passed to other operations in the same operation node</p>"},"Classes/AKStereoOperation.html":{"name":"AKStereoOperation","abstract":"<p>Stereo version of AKComputedParameter</p>"},"Protocols/Numeric.html":{"name":"Numeric","abstract":"<p>Very simple protoocol for anything with an instrinsic floating point value."},"Classes/AKVariSpeed.html#/c:@M@AudioKit@objc(cs)AKVariSpeed(py)rate":{"name":"rate","abstract":"<p>Rate (rate) ranges form 0.25 to 4.0 (Default: 1.0)</p>","parent_name":"AKVariSpeed"},"Classes/AKVariSpeed.html#/c:@M@AudioKit@objc(cs)AKVariSpeed(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKVariSpeed"},"Classes/AKVariSpeed.html#/c:@M@AudioKit@objc(cs)AKVariSpeed(im)init:rate:":{"name":"init(_:rate:)","abstract":"<p>Initialize the varispeed node</p>","parent_name":"AKVariSpeed"},"Classes/AKVariSpeed.html#/c:@M@AudioKit@objc(cs)AKVariSpeed(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKVariSpeed"},"Classes/AKVariSpeed.html#/c:@M@AudioKit@objc(cs)AKVariSpeed(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKVariSpeed"},"Classes/AKTimePitch.html#/c:@M@AudioKit@objc(cs)AKTimePitch(py)rate":{"name":"rate","abstract":"<p>Rate (rate) ranges from 0.03125 to 32.0 (Default: 1.0)</p>","parent_name":"AKTimePitch"},"Classes/AKTimePitch.html#/c:@M@AudioKit@objc(cs)AKTimePitch(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKTimePitch"},"Classes/AKTimePitch.html#/c:@M@AudioKit@objc(cs)AKTimePitch(py)pitch":{"name":"pitch","abstract":"<p>Pitch (Cents) ranges from -2400 to 2400 (Default: 0.0)</p>","parent_name":"AKTimePitch"},"Classes/AKTimePitch.html#/c:@M@AudioKit@objc(cs)AKTimePitch(py)overlap":{"name":"overlap","abstract":"<p>Overlap (generic) ranges from 3.0 to 32.0 (Default: 8.0)</p>","parent_name":"AKTimePitch"},"Classes/AKTimePitch.html#/c:@M@AudioKit@objc(cs)AKTimePitch(im)init:rate:pitch:overlap:":{"name":"init(_:rate:pitch:overlap:)","abstract":"<p>Initialize the time pitch node</p>","parent_name":"AKTimePitch"},"Classes/AKTimePitch.html#/c:@M@AudioKit@objc(cs)AKTimePitch(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKTimePitch"},"Classes/AKTimePitch.html#/c:@M@AudioKit@objc(cs)AKTimePitch(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKTimePitch"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)samplerUnit":{"name":"samplerUnit","abstract":"<p>Sampler AV Audio Unit</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)tuning":{"name":"tuning","abstract":"<p>Transposition amount in semitones, from -24 to 24, Default: 0</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(im)init":{"name":"init()","abstract":"<p>Initialize the sampler node</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(im)loadWav:error:":{"name":"loadWav(_:)","abstract":"<p>Load a wav file</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(im)loadEXS24:error:":{"name":"loadEXS24(_:)","abstract":"<p>Load an EXS24 sample data file</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(im)loadAudioFile:error:":{"name":"loadAudioFile(_:)","abstract":"<p>Load an AKAudioFile</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(im)loadAudioFiles:error:":{"name":"loadAudioFiles(_:)","abstract":"<p>Load an array of AKAudioFiles</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(im)loadPath:":{"name":"loadPath(_:)","abstract":"<p>Load a file path</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)amplitude":{"name":"amplitude","abstract":"<p>Output Amplitude. Range: -90.0 -&gt; +12 db, Default: 0 db</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)volume":{"name":"volume","abstract":"<p>Normalized Output Volume. Range: 0 -&gt; 1, Default: 1</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(py)pan":{"name":"pan","abstract":"<p>Pan. Range: -1 -&gt; 1, Default: 0</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(im)playWithNoteNumber:velocity:channel:":{"name":"play(noteNumber:velocity:channel:)","abstract":"<p>Play a MIDI Note</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@M@AudioKit@objc(cs)AKSampler(im)stopWithNoteNumber:channel:":{"name":"stop(noteNumber:channel:)","abstract":"<p>Stop a MIDI Note</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@CM@AudioKit@objc(cs)AKSampler(im)loadSoundFont:preset:bank:error:":{"name":"loadSoundFont(_:preset:bank:)","abstract":"<p>Load a Bank from a SoundFont SF2 sample data file</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@CM@AudioKit@objc(cs)AKSampler(im)loadMelodicSoundFont:preset:error:":{"name":"loadMelodicSoundFont(_:preset:)","abstract":"<p>Load a Melodic SoundFont SF2 sample data file</p>","parent_name":"AKSampler"},"Classes/AKSampler.html#/c:@CM@AudioKit@objc(cs)AKSampler(im)loadPercussiveSoundFont:preset:error:":{"name":"loadPercussiveSoundFont(_:preset:)","abstract":"<p>Load a Percussive SoundFont SF2 sample data file</p>","parent_name":"AKSampler"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)startPoint":{"name":"startPoint","abstract":"<p>startPoint in samples - where to start playing the sample from</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)endPoint":{"name":"endPoint","abstract":"<p>endPoint - this is where the sample will play to before stopping.","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)rate":{"name":"rate","abstract":"<p>playback rate - A value of 1 is normal, 2 is double speed, 0.5 is halfspeed, etc.</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)volume":{"name":"volume","abstract":"<p>Volume - amplitude adjustment</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)loopEnabled":{"name":"loopEnabled","abstract":"<p>Loop Enabled - if enabled, the sample will loop back to the startpoint when the endpoint is reached.","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)size":{"name":"size","abstract":"<p>Number of sample in the audio stored in memory</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)normalizedPosition":{"name":"normalizedPosition","abstract":"<p>Position in the audio file from 0 - 1</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)position":{"name":"position","abstract":"<p>Position in the audio in samples, but represented as a double since","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(im)initWithFile:startPoint:endPoint:rate:volume:completionHandler:":{"name":"init(file:startPoint:endPoint:rate:volume:completionHandler:)","abstract":"<p>Initialize this SamplePlayer node</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(im)playFrom:":{"name":"play(from:)","abstract":"<p>Play from a certain sample</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(im)playFrom:length:":{"name":"play(from:length:)","abstract":"<p>Play from a certain sample for a certain number of samples</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(im)playFrom:to:":{"name":"play(from:to:)","abstract":"<p>Play from a certain sample to an end sample</p>","parent_name":"AKSamplePlayer"},"Classes/AKSamplePlayer.html#/c:@M@AudioKit@objc(cs)AKSamplePlayer(im)loadSoundWithFile:":{"name":"loadSound(file:)","abstract":"<p>Load a new audio file into memory</p>","parent_name":"AKSamplePlayer"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(py)position":{"name":"position","abstract":"<p>Position in time. When non-changing it will do a spectral freeze of a the current point in time.</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude.</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(py)pitchRatio":{"name":"pitchRatio","abstract":"<p>Pitch ratio. A value of 1 is normal, 2 is double speed, 0.5 is halfspeed, etc.</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(im)initWithFile:position:amplitude:pitchRatio:":{"name":"init(file:position:amplitude:pitchRatio:)","abstract":"<p>Initialize this Phase-Locked Vocoder node</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKPhaseLockedVocoder.html#/c:@M@AudioKit@objc(cs)AKPhaseLockedVocoder(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPhaseLockedVocoder"},"Classes/AKMetronome.html#/c:@M@AudioKit@objc(cs)AKMetronome(py)tempo":{"name":"tempo","abstract":"<p>BPM</p>","parent_name":"AKMetronome"},"Classes/AKMetronome.html#/c:@M@AudioKit@objc(cs)AKMetronome(py)subdivision":{"name":"subdivision","abstract":"<p>Number of clicks in one measure</p>","parent_name":"AKMetronome"},"Classes/AKMetronome.html#/c:@M@AudioKit@objc(cs)AKMetronome(py)frequency1":{"name":"frequency1","abstract":"<p>First click sound frequency</p>","parent_name":"AKMetronome"},"Classes/AKMetronome.html#/c:@M@AudioKit@objc(cs)AKMetronome(py)frequency2":{"name":"frequency2","abstract":"<p>Non-first click sound frequency</p>","parent_name":"AKMetronome"},"Classes/AKMetronome.html#/c:@M@AudioKit@objc(cs)AKMetronome(py)currentBeat":{"name":"currentBeat","abstract":"<p>The value of the current beat</p>","parent_name":"AKMetronome"},"Classes/AKMetronome.html#/c:@M@AudioKit@objc(cs)AKMetronome(py)callback":{"name":"callback","abstract":"<p>Function to perform on every tick</p>","parent_name":"AKMetronome"},"Classes/AKMetronome.html#/c:@M@AudioKit@objc(cs)AKMetronome(im)init":{"name":"init()","abstract":"<p>Initialize the metronome</p>","parent_name":"AKMetronome"},"Classes/AKMetronome.html#/c:@M@AudioKit@objc(cs)AKMetronome(im)reset":{"name":"reset()","abstract":"<p>Reset the metronome</p>","parent_name":"AKMetronome"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)audioFileBuffer":{"name":"audioFileBuffer","abstract":"<p>Buffer to be palyed</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)completionHandler":{"name":"completionHandler","abstract":"<p>Will be triggered when AKAudioPlayer has finished to play.","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)looping":{"name":"looping","abstract":"<p>Boolean indicating whether or not to loop the playback (Default false)</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)reversed":{"name":"reversed","abstract":"<p>Boolean indicating to play the buffer in reverse</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)fadeInTime":{"name":"fadeInTime","abstract":"<p>Fade in duration</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)fadeOutTime":{"name":"fadeOutTime","abstract":"<p>Fade out duration</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)audioFile":{"name":"audioFile","abstract":"<p>The current played AKAudioFile</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)path":{"name":"path","abstract":"<p>Path to the currently loaded AKAudioFile</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)duration":{"name":"duration","abstract":"<p>Total duration of one loop through of the file</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)volume":{"name":"volume","abstract":"<p>Output Volume (Default 1)</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)isStarted":{"name":"isStarted","abstract":"<p>Whether or not the audio player is currently started</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)currentTime":{"name":"currentTime","abstract":"<p>Current playback time (in seconds)</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)playhead":{"name":"playhead","abstract":"<p>Time within the audio file at the current time</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)pan":{"name":"pan","abstract":"<p>Pan (Default Center = 0)</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)startTime":{"name":"startTime","abstract":"<p>sets the start time, If it is playing, player will","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)endTime":{"name":"endTime","abstract":"<p>sets the end time, If it is playing, player will","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)scheduledTime":{"name":"scheduledTime","abstract":"<p>Sets the time in the future when playback will commence. Recommend using play(from:to:avTime) instead.","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(py)scheduledAVTime":{"name":"scheduledAVTime","abstract":"<p>Sheduled time</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)initWithFile:looping:error:completionHandler:":{"name":"init(file:looping:completionHandler:)","abstract":"<p>Initialize the audio player</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)start":{"name":"start()","abstract":"<p>Start playback</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)stop":{"name":"stop()","abstract":"<p>Stop playback</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)pause":{"name":"pause()","abstract":"<p>Pause playback</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)resume":{"name":"resume()","abstract":"<p>Restart playback from current position</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)reloadFileAndReturnError:":{"name":"reloadFile()","abstract":"<p>resets in and out times for playing</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)replaceWithFile:error:":{"name":"replace(file:)","abstract":"<p>Replace player&rsquo;s file with a new AKAudioFile file</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)play":{"name":"play()","abstract":"<p>Default play that will use the previously set startTime and endTime properties or the full file if both are 0</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)playFrom:to:":{"name":"play(from:to:)","abstract":"<p>Play from startTime to endTime</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)playFrom:to:when:":{"name":"play(from:to:when:)","abstract":"<p>Play the file back from a certain time, to an end time (if set).","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)playFrom:to:avTime:":{"name":"play(from:to:avTime:)","abstract":"<p>Play the file back from a certain time, to an end time (if set). You can optionally set a scheduled time","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(cm)secondsToAVAudioTimeWithHostTime:time:":{"name":"secondsToAVAudioTime(hostTime:time:)","abstract":"<p>Convert to AVAudioTime</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)stopAtNextLoopEnd":{"name":"stopAtNextLoopEnd()","abstract":"<p>Stop playback after next loop completes</p>","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html#/c:@M@AudioKit@objc(cs)AKAudioPlayer(im)disconnect":{"name":"disconnect()","parent_name":"AKAudioPlayer"},"Classes/AKAudioPlayer.html":{"name":"AKAudioPlayer","abstract":"<p>Not so simple audio playback class</p>"},"Classes/AKMetronome.html":{"name":"AKMetronome","abstract":"<p>Useful metronome class that you can utilize for your own projects</p>"},"Classes/AKPhaseLockedVocoder.html":{"name":"AKPhaseLockedVocoder","abstract":"<p>This is a phase locked vocoder. It has the ability to play back an audio"},"Classes/AKSamplePlayer.html":{"name":"AKSamplePlayer","abstract":"<p>Audio player that loads a sample into memory</p>"},"Classes/AKSampler.html":{"name":"AKSampler","abstract":"<p>Sampler audio generation.</p>"},"Classes/AKTimePitch.html":{"name":"AKTimePitch","abstract":"<p>AudioKit version of Apple&rsquo;s TimePitch Audio Unit</p>"},"Classes/AKVariSpeed.html":{"name":"AKVariSpeed","abstract":"<p>AudioKit version of Apple&rsquo;s VariSpeed Audio Unit</p>"},"Classes/AKStereoFieldLimiter.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKStereoFieldLimiter"},"Classes/AKStereoFieldLimiter.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKStereoFieldLimiter"},"Classes/AKStereoFieldLimiter.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiter(py)amount":{"name":"amount","abstract":"<p>Limiting Factor</p>","parent_name":"AKStereoFieldLimiter"},"Classes/AKStereoFieldLimiter.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKStereoFieldLimiter"},"Classes/AKStereoFieldLimiter.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiter(im)init:amount:":{"name":"init(_:amount:)","abstract":"<p>Initialize this stereo field limiter node</p>","parent_name":"AKStereoFieldLimiter"},"Classes/AKStereoFieldLimiter.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKStereoFieldLimiter"},"Classes/AKStereoFieldLimiter.html#/c:@M@AudioKit@objc(cs)AKStereoFieldLimiter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKStereoFieldLimiter"},"Classes/AKPanner.html#/c:@M@AudioKit@objc(cs)AKPanner(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPanner"},"Classes/AKPanner.html#/c:@M@AudioKit@objc(cs)AKPanner(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKPanner"},"Classes/AKPanner.html#/c:@M@AudioKit@objc(cs)AKPanner(py)pan":{"name":"pan","abstract":"<p>Panning. A value of -1 is hard left, and a value of 1 is hard right, and 0 is center.</p>","parent_name":"AKPanner"},"Classes/AKPanner.html#/c:@M@AudioKit@objc(cs)AKPanner(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPanner"},"Classes/AKPanner.html#/c:@M@AudioKit@objc(cs)AKPanner(im)init:pan:":{"name":"init(_:pan:)","abstract":"<p>Initialize this panner node</p>","parent_name":"AKPanner"},"Classes/AKPanner.html#/c:@M@AudioKit@objc(cs)AKPanner(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPanner"},"Classes/AKPanner.html#/c:@M@AudioKit@objc(cs)AKPanner(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPanner"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(py)volume":{"name":"volume","abstract":"<p>Output Volume (Default 1)</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(py)isStarted":{"name":"isStarted","abstract":"<p>Determine if the mixer is serving any output or if it is stopped.</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(im)init":{"name":"init()","abstract":"<p>Initialize the mixer node with no inputs, to be connected later</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/s:8AudioKit7AKMixerCACSayAA6AKNodeCSgGd_tcfc":{"name":"init(_:)","abstract":"<p>Initialize the mixer node with multiple inputs</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(im)init:":{"name":"init(_:)","abstract":"<p>Initialize the mixer node with multiple inputs</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/s:8AudioKit7AKMixerC7connectyAA6AKNodeCSg_SiSg3bustF":{"name":"connect(_:bus:)","abstract":"<p>Connnect another input after initialization</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKMixer"},"Classes/AKMixer.html#/c:@M@AudioKit@objc(cs)AKMixer(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKMixer"},"Classes/AKDryWetMixer.html#/c:@M@AudioKit@objc(cs)AKDryWetMixer(py)balance":{"name":"balance","abstract":"<p>Balance (Default 0.5)</p>","parent_name":"AKDryWetMixer"},"Classes/AKDryWetMixer.html#/c:@M@AudioKit@objc(cs)AKDryWetMixer(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDryWetMixer"},"Classes/AKDryWetMixer.html#/c:@M@AudioKit@objc(cs)AKDryWetMixer(im)init::balance:":{"name":"init(_:_:balance:)","abstract":"<p>Initialize this dry wet mixer node</p>","parent_name":"AKDryWetMixer"},"Classes/AKDryWetMixer.html#/c:@M@AudioKit@objc(cs)AKDryWetMixer(im)disconnect":{"name":"disconnect()","parent_name":"AKDryWetMixer"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(py)gain":{"name":"gain","abstract":"<p>Amplification Factor</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(py)leftGain":{"name":"leftGain","abstract":"<p>Left Channel Amplification Factor</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(py)rightGain":{"name":"rightGain","abstract":"<p>Right Channel Amplification Factor</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(py)dB":{"name":"dB","abstract":"<p>Amplification Factor in db</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(im)init:gain:":{"name":"init(_:gain:)","abstract":"<p>Initialize this booster node</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKBooster"},"Classes/AKBooster.html#/c:@M@AudioKit@objc(cs)AKBooster(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKBooster"},"Classes/AKBalancer.html#/c:@M@AudioKit@objc(cs)AKBalancer(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKBalancer"},"Classes/AKBalancer.html#/c:@M@AudioKit@objc(cs)AKBalancer(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKBalancer"},"Classes/AKBalancer.html#/c:@M@AudioKit@objc(cs)AKBalancer(im)init:comparator:":{"name":"init(_:comparator:)","abstract":"<p>Initialize this balance node</p>","parent_name":"AKBalancer"},"Classes/AKBalancer.html#/c:@M@AudioKit@objc(cs)AKBalancer(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKBalancer"},"Classes/AKBalancer.html#/c:@M@AudioKit@objc(cs)AKBalancer(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKBalancer"},"Classes/AK3DPanner.html#/c:@M@AudioKit@objc(cs)AK3DPanner(py)x":{"name":"x","abstract":"<p>Position of sound source along x-axis</p>","parent_name":"AK3DPanner"},"Classes/AK3DPanner.html#/c:@M@AudioKit@objc(cs)AK3DPanner(py)y":{"name":"y","abstract":"<p>Position of sound source along y-axis</p>","parent_name":"AK3DPanner"},"Classes/AK3DPanner.html#/c:@M@AudioKit@objc(cs)AK3DPanner(py)z":{"name":"z","abstract":"<p>Position of sound source along z-axis</p>","parent_name":"AK3DPanner"},"Classes/AK3DPanner.html#/c:@M@AudioKit@objc(cs)AK3DPanner(im)init:x:y:z:":{"name":"init(_:x:y:z:)","abstract":"<p>Initialize the panner node</p>","parent_name":"AK3DPanner"},"Classes/AK3DPanner.html":{"name":"AK3DPanner","abstract":"<p>3-D Spatialization of the input</p>"},"Classes/AKBalancer.html":{"name":"AKBalancer","abstract":"<p>This node outputs a version of the audio source, amplitude-modified so"},"Classes/AKBooster.html":{"name":"AKBooster","abstract":"<p>Stereo Booster</p>"},"Classes/AKDryWetMixer.html":{"name":"AKDryWetMixer","abstract":"<p>Balanceable Mix between two signals, usually used for a dry signal and wet signal</p>"},"Classes/AKMixer.html":{"name":"AKMixer","abstract":"<p>AudioKit version of Apple&rsquo;s Mixer Node</p>"},"Classes/AKPanner.html":{"name":"AKPanner","abstract":"<p>Stereo Panner</p>"},"Classes/AKStereoFieldLimiter.html":{"name":"AKStereoFieldLimiter","abstract":"<p>Stereo Field Limiter</p>"},"Classes/AKStereoInput.html#/c:@M@AudioKit@objc(cs)AKStereoInput(py)volume":{"name":"volume","abstract":"<p>Output Volume (Default 1)</p>","parent_name":"AKStereoInput"},"Classes/AKStereoInput.html#/c:@M@AudioKit@objc(cs)AKStereoInput(py)isStarted":{"name":"isStarted","abstract":"<p>Determine if the microphone is currently on.</p>","parent_name":"AKStereoInput"},"Classes/AKStereoInput.html#/c:@M@AudioKit@objc(cs)AKStereoInput(im)init":{"name":"init()","abstract":"<p>Initialize the microphone</p>","parent_name":"AKStereoInput"},"Classes/AKStereoInput.html#/c:@M@AudioKit@objc(cs)AKStereoInput(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKStereoInput"},"Classes/AKStereoInput.html#/c:@M@AudioKit@objc(cs)AKStereoInput(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKStereoInput"},"Classes/AKMicrophone.html#/c:@M@AudioKit@objc(cs)AKMicrophone(py)volume":{"name":"volume","abstract":"<p>Output Volume (Default 1)</p>","parent_name":"AKMicrophone"},"Classes/AKMicrophone.html#/c:@M@AudioKit@objc(cs)AKMicrophone(im)setDevice:error:":{"name":"setDevice(_:)","abstract":"<p>Set the actual microphone device</p>","parent_name":"AKMicrophone"},"Classes/AKMicrophone.html#/c:@M@AudioKit@objc(cs)AKMicrophone(py)isStarted":{"name":"isStarted","abstract":"<p>Determine if the microphone is currently on.</p>","parent_name":"AKMicrophone"},"Classes/AKMicrophone.html#/c:@M@AudioKit@objc(cs)AKMicrophone(im)init":{"name":"init()","abstract":"<p>Initialize the microphone</p>","parent_name":"AKMicrophone"},"Classes/AKMicrophone.html#/c:@M@AudioKit@objc(cs)AKMicrophone(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKMicrophone"},"Classes/AKMicrophone.html#/c:@M@AudioKit@objc(cs)AKMicrophone(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKMicrophone"},"Classes/AKMicrophone.html":{"name":"AKMicrophone","abstract":"<p>Audio from the standard input</p>"},"Classes/AKStereoInput.html":{"name":"AKStereoInput","abstract":"<p>Audio from a standard stereo input (very useful for making filters that use Audiobus or IAA as their input source)</p>"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(py)frequency":{"name":"frequency","abstract":"<p>Glottal frequency.</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(py)tonguePosition":{"name":"tonguePosition","abstract":"<p>Tongue position (0-1)</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(py)tongueDiameter":{"name":"tongueDiameter","abstract":"<p>Tongue diameter (0-1)</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(py)tenseness":{"name":"tenseness","abstract":"<p>Vocal tenseness. 0 = all breath. 1=fully saturated.</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(py)nasality":{"name":"nasality","abstract":"<p>Sets the velum size. Larger values of this creates more nasally sounds.</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(im)initWithFrequency:tonguePosition:tongueDiameter:tenseness:nasality:":{"name":"init(frequency:tonguePosition:tongueDiameter:tenseness:nasality:)","abstract":"<p>Initialize this vocal tract node</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKVocalTract"},"Classes/AKVocalTract.html#/c:@M@AudioKit@objc(cs)AKVocalTract(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKVocalTract"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(py)frequency":{"name":"frequency","abstract":"<p>Variable frequency. Values less than the initial frequency will be doubled until it is greater than that.</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(im)initWithFrequency:amplitude:":{"name":"init(frequency:amplitude:)","abstract":"<p>Initialize the STK TubularBells model</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(im)triggerWithFrequency:amplitude:":{"name":"trigger(frequency:amplitude:)","abstract":"<p>Trigger the sound with an optional set of parameters</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKTubularBells"},"Classes/AKTubularBells.html#/c:@M@AudioKit@objc(cs)AKTubularBells(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKTubularBells"},"Classes/AKSynthSnare.html#/c:@M@AudioKit@objc(cs)AKSynthSnare(im)initWithDuration:resonance:":{"name":"init(duration:resonance:)","abstract":"<p>Create the synth snare voice</p>","parent_name":"AKSynthSnare"},"Classes/AKSynthSnare.html#/c:@M@AudioKit@objc(cs)AKSynthSnare(im)playWithNoteNumber:velocity:":{"name":"play(noteNumber:velocity:)","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKSynthSnare"},"Classes/AKSynthSnare.html#/c:@M@AudioKit@objc(cs)AKSynthSnare(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Unneeded stop function since the sounds all decay quickly</p>","parent_name":"AKSynthSnare"},"Classes/AKSynthKick.html#/c:@M@AudioKit@objc(cs)AKSynthKick(im)init":{"name":"init()","abstract":"<p>Create the synth kick voice</p>","parent_name":"AKSynthKick"},"Classes/AKSynthKick.html#/c:@M@AudioKit@objc(cs)AKSynthKick(im)playWithNoteNumber:velocity:":{"name":"play(noteNumber:velocity:)","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKSynthKick"},"Classes/AKSynthKick.html#/c:@M@AudioKit@objc(cs)AKSynthKick(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Unneeded stop function since the sounds all decay quickly</p>","parent_name":"AKSynthKick"},"Classes/AKShaker.html#/c:@M@AudioKit@objc(cs)AKShaker(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/c:@M@AudioKit@objc(cs)AKShaker(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/s:8AudioKit8AKShakerC4typeAA0C4TypeOv":{"name":"type","abstract":"<p>Type of shaker to use</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/c:@M@AudioKit@objc(cs)AKShaker(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/c:@M@AudioKit@objc(cs)AKShaker(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/s:8AudioKit8AKShakerCAcA0C4TypeO4type_Sd9amplitudetcfc":{"name":"init(type:amplitude:)","abstract":"<p>Initialize the STK Shaker model</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/c:@M@AudioKit@objc(cs)AKShaker(im)triggerWithAmplitude:":{"name":"trigger(amplitude:)","abstract":"<p>Trigger the sound with an optional set of parameters</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/c:@M@AudioKit@objc(cs)AKShaker(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKShaker"},"Classes/AKShaker.html#/c:@M@AudioKit@objc(cs)AKShaker(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKShaker"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(py)frequency":{"name":"frequency","abstract":"<p>Variable frequency. Values less than the initial frequency will be doubled until it is greater than that.</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(im)initWithFrequency:amplitude:":{"name":"init(frequency:amplitude:)","abstract":"<p>Initialize the STK RhodesPiano model</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(im)triggerWithFrequency:amplitude:":{"name":"trigger(frequency:amplitude:)","abstract":"<p>Trigger the sound with an optional set of parameters</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKRhodesPiano"},"Classes/AKRhodesPiano.html#/c:@M@AudioKit@objc(cs)AKRhodesPiano(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKRhodesPiano"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(py)frequency":{"name":"frequency","abstract":"<p>Variable frequency. Values less than the initial frequency will be doubled until it is greater than that.</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(im)initWithFrequency:amplitude:lowestFrequency:":{"name":"init(frequency:amplitude:lowestFrequency:)","abstract":"<p>Initialize this pluck node</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(im)triggerWithFrequency:amplitude:":{"name":"trigger(frequency:amplitude:)","abstract":"<p>Trigger the sound with an optional set of parameters</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPluckedString"},"Classes/AKPluckedString.html#/c:@M@AudioKit@objc(cs)AKPluckedString(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPluckedString"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)leftBoundaryCondition":{"name":"leftBoundaryCondition","abstract":"<p>Boundary condition at left end of bar. 1 = clamped, 2 = pivoting, 3 = free</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)rightBoundaryCondition":{"name":"rightBoundaryCondition","abstract":"<p>Boundary condition at right end of bar. 1 = clamped, 2 = pivoting, 3 = free</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)decayDuration":{"name":"decayDuration","abstract":"<p>30db decay time (in seconds).</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)scanSpeed":{"name":"scanSpeed","abstract":"<p>Speed of scanning the output location.</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)position":{"name":"position","abstract":"<p>Position along bar that strike occurs.</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)strikeVelocity":{"name":"strikeVelocity","abstract":"<p>Normalized strike velocity</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)strikeWidth":{"name":"strikeWidth","abstract":"<p>Spatial width of strike.</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(im)initWithLeftBoundaryCondition:rightBoundaryCondition:decayDuration:scanSpeed:position:strikeVelocity:strikeWidth:stiffness:highFrequencyDamping:":{"name":"init(leftBoundaryCondition:rightBoundaryCondition:decayDuration:scanSpeed:position:strikeVelocity:strikeWidth:stiffness:highFrequencyDamping:)","abstract":"<p>Initialize this Bar node</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(im)trigger":{"name":"trigger()","abstract":"<p>Trigger the sound with an optional set of parameters</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKMetalBar"},"Classes/AKMetalBar.html#/c:@M@AudioKit@objc(cs)AKMetalBar(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKMetalBar"},"Classes/AKMandolin.html#/c:@M@AudioKit@objc(cs)AKMandolin(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@M@AudioKit@objc(cs)AKMandolin(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@M@AudioKit@objc(cs)AKMandolin(py)detune":{"name":"detune","abstract":"<p>Detuning of second string in the course (1=Unison (deault), 2=Octave)</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@M@AudioKit@objc(cs)AKMandolin(py)bodySize":{"name":"bodySize","abstract":"<p>Relative size of the mandoline (Default: 1, ranges ~ 0.5 - 2)</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@M@AudioKit@objc(cs)AKMandolin(im)initWithDetune:bodySize:":{"name":"init(detune:bodySize:)","abstract":"<p>Initialize the 4 course (string-pair) Mandolin</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@M@AudioKit@objc(cs)AKMandolin(im)prepareChord::::":{"name":"prepareChord(_:_:_:_:)","abstract":"<p>Virutally pressing fingers on all the strings of the mandolin</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@M@AudioKit@objc(cs)AKMandolin(im)fretWithNoteNumber:course:":{"name":"fret(noteNumber:course:)","abstract":"<p>Pressing a finger on a course of the mandolin</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@M@AudioKit@objc(cs)AKMandolin(im)pluckWithCourse:position:velocity:":{"name":"pluck(course:position:velocity:)","abstract":"<p>Pluck an individual course</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@M@AudioKit@objc(cs)AKMandolin(im)strum:velocity:":{"name":"strum(_:velocity:)","abstract":"<p>Strum all strings of the mandolin</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@CM@AudioKit@objc(cs)AKMandolin(im)presetLargeResonantMandolin":{"name":"presetLargeResonantMandolin()","abstract":"<p>Large Resonant Mandolin</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@CM@AudioKit@objc(cs)AKMandolin(im)presetOctaveUpMandolin":{"name":"presetOctaveUpMandolin()","abstract":"<p>Preset with Strings pairs separated by an octave</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@CM@AudioKit@objc(cs)AKMandolin(im)presetElectricGuitarMandolin":{"name":"presetElectricGuitarMandolin()","abstract":"<p>A mandolin that sounds a bit like an electric guitar</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@CM@AudioKit@objc(cs)AKMandolin(im)presetSmallBodiedDistortedMandolin":{"name":"presetSmallBodiedDistortedMandolin()","abstract":"<p>Small, distorted mandolin</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@CM@AudioKit@objc(cs)AKMandolin(im)presetAcidMandolin":{"name":"presetAcidMandolin()","abstract":"<p>A strangly tuned, psychedelic mandolin</p>","parent_name":"AKMandolin"},"Classes/AKMandolin.html#/c:@CM@AudioKit@objc(cs)AKMandolin(im)printCurrentValuesAsPreset":{"name":"printCurrentValuesAsPreset()","abstract":"<p>Print out current values in case you want to save it as a preset</p>","parent_name":"AKMandolin"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(py)frequency":{"name":"frequency","abstract":"<p>Variable frequency. Values less than the initial frequency will be doubled until it is greater than that.</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(im)initWithFrequency:amplitude:":{"name":"init(frequency:amplitude:)","abstract":"<p>Initialize the STK Flute model</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(im)triggerWithFrequency:amplitude:":{"name":"trigger(frequency:amplitude:)","abstract":"<p>Trigger the sound with an optional set of parameters</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKFlute"},"Classes/AKFlute.html#/c:@M@AudioKit@objc(cs)AKFlute(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKFlute"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)intensity":{"name":"intensity","abstract":"<p>The intensity of the dripping sound.</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)dampingFactor":{"name":"dampingFactor","abstract":"<p>The damping factor. Maximum value is 2.0.</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)energyReturn":{"name":"energyReturn","abstract":"<p>The amount of energy to add back into the system.</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)mainResonantFrequency":{"name":"mainResonantFrequency","abstract":"<p>Main resonant frequency.</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)firstResonantFrequency":{"name":"firstResonantFrequency","abstract":"<p>The first resonant frequency.</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)secondResonantFrequency":{"name":"secondResonantFrequency","abstract":"<p>The second resonant frequency.</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude.</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(im)init":{"name":"init()","abstract":"<p>Initialize the drip with defaults</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(im)initWithIntensity:dampingFactor:energyReturn:mainResonantFrequency:firstResonantFrequency:secondResonantFrequency:amplitude:":{"name":"init(intensity:dampingFactor:energyReturn:mainResonantFrequency:firstResonantFrequency:secondResonantFrequency:amplitude:)","abstract":"<p>Initialize this drip node</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(im)trigger":{"name":"trigger()","abstract":"<p>Trigger the sound with an optional set of parameters</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDrip"},"Classes/AKDrip.html#/c:@M@AudioKit@objc(cs)AKDrip(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDrip"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(py)frequency":{"name":"frequency","abstract":"<p>Variable frequency. Values less than the initial frequency will be doubled until it is greater than that.</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(im)initWithFrequency:amplitude:":{"name":"init(frequency:amplitude:)","abstract":"<p>Initialize the STK Clarinet model</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(im)triggerWithFrequency:amplitude:":{"name":"trigger(frequency:amplitude:)","abstract":"<p>Trigger the sound with an optional set of parameters</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html#/c:@M@AudioKit@objc(cs)AKClarinet(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKClarinet"},"Classes/AKClarinet.html":{"name":"AKClarinet","abstract":"<p>STK Clarinet</p>"},"Classes/AKDrip.html":{"name":"AKDrip","abstract":"<p>Physical model of the sound of dripping water. When triggered, it will"},"Classes/AKFlute.html":{"name":"AKFlute","abstract":"<p>STK Flutee</p>"},"Classes/AKMandolin.html":{"name":"AKMandolin","abstract":"<p>Physical model of a 4 course mandolin</p>"},"Classes/AKMetalBar.html":{"name":"AKMetalBar","abstract":"<p>Metal Bar Physical Model</p>"},"Classes/AKPluckedString.html":{"name":"AKPluckedString","abstract":"<p>Karplus-Strong plucked string instrument.</p>"},"Classes/AKRhodesPiano.html":{"name":"AKRhodesPiano","abstract":"<p>STK RhodesPiano</p>"},"Classes/AKShaker.html":{"name":"AKShaker","abstract":"<p>STK Shaker</p>"},"Classes/AKSynthKick.html":{"name":"AKSynthKick","abstract":"<p>Kick Drum Synthesizer Instrument</p>"},"Classes/AKSynthSnare.html":{"name":"AKSynthSnare","abstract":"<p>Snare Drum Synthesizer Instrument</p>"},"Classes/AKTubularBells.html":{"name":"AKTubularBells","abstract":"<p>STK TubularBells</p>"},"Classes/AKVocalTract.html":{"name":"AKVocalTract","abstract":"<p>Based on the Pink Trombone algorithm by Neil Thapen, this implements a"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)pulseWidth":{"name":"pulseWidth","abstract":"<p>Duty cycle width (range 0-1).</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack time</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)decayDuration":{"name":"decayDuration","abstract":"<p>Decay time</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)sustainLevel":{"name":"sustainLevel","abstract":"<p>Sustain Level</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release time</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)detuningOffset":{"name":"detuningOffset","abstract":"<p>Frequency offset in Hz.</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(py)detuningMultiplier":{"name":"detuningMultiplier","abstract":"<p>Frequency detuning multiplier</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(im)initWithPulseWidth:attackDuration:decayDuration:sustainLevel:releaseDuration:detuningOffset:detuningMultiplier:":{"name":"init(pulseWidth:attackDuration:decayDuration:sustainLevel:releaseDuration:detuningOffset:detuningMultiplier:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(im)playWithNoteNumber:velocity:frequency:":{"name":"play(noteNumber:velocity:frequency:)","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPWMOscillatorBank(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPWMOscillatorBank"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(py)frequency":{"name":"frequency","abstract":"<p>In cycles per second, or Hz.</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(py)amplitude":{"name":"amplitude","abstract":"<p>Output amplitude</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(py)detuningOffset":{"name":"detuningOffset","abstract":"<p>Frequency offset in Hz.</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(py)detuningMultiplier":{"name":"detuningMultiplier","abstract":"<p>Frequency detuning multiplier</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(py)pulseWidth":{"name":"pulseWidth","abstract":"<p>Duty cycle width (range 0-1).</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(im)initWithFrequency:amplitude:pulseWidth:detuningOffset:detuningMultiplier:":{"name":"init(frequency:amplitude:pulseWidth:detuningOffset:detuningMultiplier:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPWMOscillator"},"Classes/AKPWMOscillator.html#/c:@M@AudioKit@objc(cs)AKPWMOscillator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPWMOscillator"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)phaseDistortion":{"name":"phaseDistortion","abstract":"<p>Duty cycle width (range -1 - 1).</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack time</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)decayDuration":{"name":"decayDuration","abstract":"<p>Decay time</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)sustainLevel":{"name":"sustainLevel","abstract":"<p>Sustain Level</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release time</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)detuningOffset":{"name":"detuningOffset","abstract":"<p>Frequency offset in Hz.</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(py)detuningMultiplier":{"name":"detuningMultiplier","abstract":"<p>Frequency detuning multiplier</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(im)initWithWaveform:phaseDistortion:attackDuration:decayDuration:sustainLevel:releaseDuration:detuningOffset:detuningMultiplier:":{"name":"init(waveform:phaseDistortion:attackDuration:decayDuration:sustainLevel:releaseDuration:detuningOffset:detuningMultiplier:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(im)playWithNoteNumber:velocity:frequency:":{"name":"play(noteNumber:velocity:frequency:)","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillatorBank(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPhaseDistortionOscillatorBank"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(py)frequency":{"name":"frequency","abstract":"<p>In cycles per second, or Hz.</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(py)amplitude":{"name":"amplitude","abstract":"<p>Output amplitude</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(py)detuningOffset":{"name":"detuningOffset","abstract":"<p>Frequency offset in Hz.</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(py)detuningMultiplier":{"name":"detuningMultiplier","abstract":"<p>Frequency detuning multiplier</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(py)phaseDistortion":{"name":"phaseDistortion","abstract":"<p>Duty cycle width (range -1 - 1).</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(im)initWithWaveform:frequency:amplitude:phaseDistortion:detuningOffset:detuningMultiplier:":{"name":"init(waveform:frequency:amplitude:phaseDistortion:detuningOffset:detuningMultiplier:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKPhaseDistortionOscillator.html#/c:@M@AudioKit@objc(cs)AKPhaseDistortionOscillator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPhaseDistortionOscillator"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)waveform":{"name":"waveform","abstract":"<p>Waveform of the oscillator</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack time</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)decayDuration":{"name":"decayDuration","abstract":"<p>Decay time</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)sustainLevel":{"name":"sustainLevel","abstract":"<p>Sustain Level</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release time</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)detuningOffset":{"name":"detuningOffset","abstract":"<p>Frequency offset in Hz.</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(py)detuningMultiplier":{"name":"detuningMultiplier","abstract":"<p>Frequency detuning multiplier</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(im)initWithWaveform:attackDuration:decayDuration:sustainLevel:releaseDuration:detuningOffset:detuningMultiplier:":{"name":"init(waveform:attackDuration:decayDuration:sustainLevel:releaseDuration:detuningOffset:detuningMultiplier:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(im)playWithNoteNumber:velocity:frequency:":{"name":"play(noteNumber:velocity:frequency:)","parent_name":"AKOscillatorBank"},"Classes/AKOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKOscillatorBank(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKOscillatorBank"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(py)frequency":{"name":"frequency","abstract":"<p>In cycles per second, or Hz.</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(py)amplitude":{"name":"amplitude","abstract":"<p>Output Amplitude.</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(py)detuningOffset":{"name":"detuningOffset","abstract":"<p>Frequency offset in Hz.</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(py)detuningMultiplier":{"name":"detuningMultiplier","abstract":"<p>Frequency detuning multiplier</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(im)initWithWaveform:frequency:amplitude:detuningOffset:detuningMultiplier:":{"name":"init(waveform:frequency:amplitude:detuningOffset:detuningMultiplier:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKOscillator"},"Classes/AKOscillator.html#/c:@M@AudioKit@objc(cs)AKOscillator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKOscillator"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)waveformArray":{"name":"waveformArray","abstract":"<p>An array of tables to morph between</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack time</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)decayDuration":{"name":"decayDuration","abstract":"<p>Decay time</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)sustainLevel":{"name":"sustainLevel","abstract":"<p>Sustain Level</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release time</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)detuningOffset":{"name":"detuningOffset","abstract":"<p>Frequency offset in Hz.</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(py)detuningMultiplier":{"name":"detuningMultiplier","abstract":"<p>Frequency detuning multiplier</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(im)initWithWaveformArray:index:attackDuration:decayDuration:sustainLevel:releaseDuration:detuningOffset:detuningMultiplier:":{"name":"init(waveformArray:index:attackDuration:decayDuration:sustainLevel:releaseDuration:detuningOffset:detuningMultiplier:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(im)reset":{"name":"reset()","abstract":"<p>stops all notes</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(im)playWithNoteNumber:velocity:frequency:":{"name":"play(noteNumber:velocity:frequency:)","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillatorBank(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKMorphingOscillatorBank"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(py)frequency":{"name":"frequency","abstract":"<p>In cycles per second, or Hz.</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(py)amplitude":{"name":"amplitude","abstract":"<p>Output Amplitude.</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(py)detuningOffset":{"name":"detuningOffset","abstract":"<p>Frequency offset in Hz.</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(py)detuningMultiplier":{"name":"detuningMultiplier","abstract":"<p>Frequency detuning multiplier</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(im)initWithWaveformArray:frequency:amplitude:index:detuningOffset:detuningMultiplier:phase:":{"name":"init(waveformArray:frequency:amplitude:index:detuningOffset:detuningMultiplier:phase:)","abstract":"<p>Initialize this Morpher node</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKMorphingOscillator"},"Classes/AKMorphingOscillator.html#/c:@M@AudioKit@objc(cs)AKMorphingOscillator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKMorphingOscillator"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)waveform":{"name":"waveform","abstract":"<p>Waveform of the oscillator</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)carrierMultiplier":{"name":"carrierMultiplier","abstract":"<p>This multiplied by the baseFrequency gives the carrier frequency.</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)modulatingMultiplier":{"name":"modulatingMultiplier","abstract":"<p>This multiplied by the baseFrequency gives the modulating frequency.</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)modulationIndex":{"name":"modulationIndex","abstract":"<p>This multiplied by the modulating frequency gives the modulation amplitude.</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack time</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)decayDuration":{"name":"decayDuration","abstract":"<p>Decay time</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)sustainLevel":{"name":"sustainLevel","abstract":"<p>Sustain Level</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release time</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)detuningOffset":{"name":"detuningOffset","abstract":"<p>Frequency offset in Hz.</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(py)detuningMultiplier":{"name":"detuningMultiplier","abstract":"<p>Frequency detuning multiplier</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(im)initWithWaveform:carrierMultiplier:modulatingMultiplier:modulationIndex:attackDuration:decayDuration:sustainLevel:releaseDuration:detuningOffset:detuningMultiplier:":{"name":"init(waveform:carrierMultiplier:modulatingMultiplier:modulationIndex:attackDuration:decayDuration:sustainLevel:releaseDuration:detuningOffset:detuningMultiplier:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(im)playWithNoteNumber:velocity:frequency:":{"name":"play(noteNumber:velocity:frequency:)","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillatorBank.html#/c:@M@AudioKit@objc(cs)AKFMOscillatorBank(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKFMOscillatorBank"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)internalAU":{"name":"internalAU","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)baseFrequency":{"name":"baseFrequency","abstract":"<p>In cycles per second, or Hz, this is the common denominator for the carrier and modulating frequencies.</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)carrierMultiplier":{"name":"carrierMultiplier","abstract":"<p>This multiplied by the baseFrequency gives the carrier frequency.</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)modulatingMultiplier":{"name":"modulatingMultiplier","abstract":"<p>This multiplied by the baseFrequency gives the modulating frequency.</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)modulationIndex":{"name":"modulationIndex","abstract":"<p>This multiplied by the modulating frequency gives the modulation amplitude.</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)amplitude":{"name":"amplitude","abstract":"<p>Output Amplitude.</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(im)init":{"name":"init()","abstract":"<p>Initialize the oscillator with defaults</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(im)initWithWaveform:baseFrequency:carrierMultiplier:modulatingMultiplier:modulationIndex:amplitude:":{"name":"init(waveform:baseFrequency:carrierMultiplier:modulatingMultiplier:modulationIndex:amplitude:)","abstract":"<p>Initialize this oscillator node</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@M@AudioKit@objc(cs)AKFMOscillator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@CM@AudioKit@objc(cs)AKFMOscillator(im)presetStunRay":{"name":"presetStunRay()","abstract":"<p>Stun Ray Preset</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@CM@AudioKit@objc(cs)AKFMOscillator(im)presetFogHorn":{"name":"presetFogHorn()","abstract":"<p>Fog Horn Preset</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@CM@AudioKit@objc(cs)AKFMOscillator(im)presetBuzzer":{"name":"presetBuzzer()","abstract":"<p>Buzzer Preset</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@CM@AudioKit@objc(cs)AKFMOscillator(im)presetSpiral":{"name":"presetSpiral()","abstract":"<p>Spiral Preset</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html#/c:@CM@AudioKit@objc(cs)AKFMOscillator(im)presetWobble":{"name":"presetWobble()","abstract":"<p>Wobble Preset</p>","parent_name":"AKFMOscillator"},"Classes/AKFMOscillator.html":{"name":"AKFMOscillator","abstract":"<p>Classic FM Synthesis audio generation.</p>"},"Classes/AKFMOscillatorBank.html":{"name":"AKFMOscillatorBank","abstract":"<p>Frequency Modulation Polyphonic Oscillator</p>"},"Classes/AKMorphingOscillator.html":{"name":"AKMorphingOscillator","abstract":"<p>This is an oscillator with linear interpolation that is capable of morphing"},"Classes/AKMorphingOscillatorBank.html":{"name":"AKMorphingOscillatorBank","abstract":"<p>This is an oscillator with linear interpolation that is capable of morphing"},"Classes/AKOscillator.html":{"name":"AKOscillator","abstract":"<p>Reads from the table sequentially and repeatedly at given frequency. Linear"},"Classes/AKOscillatorBank.html":{"name":"AKOscillatorBank","abstract":"<p>Reads from the table sequentially and repeatedly at given frequency. Linear"},"Classes/AKPhaseDistortionOscillator.html":{"name":"AKPhaseDistortionOscillator","abstract":"<p>Phase Distortion Oscillator</p>"},"Classes/AKPhaseDistortionOscillatorBank.html":{"name":"AKPhaseDistortionOscillatorBank","abstract":"<p>Phase Distortion Oscillator Bank</p>"},"Classes/AKPWMOscillator.html":{"name":"AKPWMOscillator","abstract":"<p>Pulse-Width Modulating Oscillator</p>"},"Classes/AKPWMOscillatorBank.html":{"name":"AKPWMOscillatorBank","abstract":"<p>Pulse-Width Modulating Oscillator Bank</p>"},"Classes/AKWhiteNoise.html#/c:@M@AudioKit@objc(cs)AKWhiteNoise(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/c:@M@AudioKit@objc(cs)AKWhiteNoise(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/c:@M@AudioKit@objc(cs)AKWhiteNoise(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude. (Value between 0-1).</p>","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/c:@M@AudioKit@objc(cs)AKWhiteNoise(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/c:@M@AudioKit@objc(cs)AKWhiteNoise(im)initWithAmplitude:":{"name":"init(amplitude:)","abstract":"<p>Initialize this noise node</p>","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/c:@M@AudioKit@objc(cs)AKWhiteNoise(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKWhiteNoise"},"Classes/AKWhiteNoise.html#/c:@M@AudioKit@objc(cs)AKWhiteNoise(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKWhiteNoise"},"Classes/AKPinkNoise.html#/c:@M@AudioKit@objc(cs)AKPinkNoise(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/c:@M@AudioKit@objc(cs)AKPinkNoise(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/c:@M@AudioKit@objc(cs)AKPinkNoise(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude. (Value between 0-1).</p>","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/c:@M@AudioKit@objc(cs)AKPinkNoise(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/c:@M@AudioKit@objc(cs)AKPinkNoise(im)initWithAmplitude:":{"name":"init(amplitude:)","abstract":"<p>Initialize this noise node</p>","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/c:@M@AudioKit@objc(cs)AKPinkNoise(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPinkNoise"},"Classes/AKPinkNoise.html#/c:@M@AudioKit@objc(cs)AKPinkNoise(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPinkNoise"},"Classes/AKBrownianNoise.html#/c:@M@AudioKit@objc(cs)AKBrownianNoise(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/c:@M@AudioKit@objc(cs)AKBrownianNoise(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/c:@M@AudioKit@objc(cs)AKBrownianNoise(py)amplitude":{"name":"amplitude","abstract":"<p>Amplitude. (Value between 0-1).</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/c:@M@AudioKit@objc(cs)AKBrownianNoise(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/c:@M@AudioKit@objc(cs)AKBrownianNoise(im)initWithAmplitude:":{"name":"init(amplitude:)","abstract":"<p>Initialize this noise node</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/c:@M@AudioKit@objc(cs)AKBrownianNoise(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html#/c:@M@AudioKit@objc(cs)AKBrownianNoise(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKBrownianNoise"},"Classes/AKBrownianNoise.html":{"name":"AKBrownianNoise","abstract":"<p>Faust-based pink noise generator</p>"},"Classes/AKPinkNoise.html":{"name":"AKPinkNoise","abstract":"<p>Faust-based pink noise generator</p>"},"Classes/AKWhiteNoise.html":{"name":"AKWhiteNoise","abstract":"<p>White noise generator</p>"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)predelay":{"name":"predelay","abstract":"<p>Delay in ms before reverberation begins.</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)crossoverFrequency":{"name":"crossoverFrequency","abstract":"<p>Crossover frequency separating low and middle frequencies (Hz).</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)lowReleaseTime":{"name":"lowReleaseTime","abstract":"<p>Time (in seconds) to decay 60db in low-frequency band.</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)midReleaseTime":{"name":"midReleaseTime","abstract":"<p>Time (in seconds) to decay 60db in mid-frequency band.</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)dampingFrequency":{"name":"dampingFrequency","abstract":"<p>Frequency (Hz) at which the high-frequency T60 is half the middle-band&rsquo;s T60.</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)equalizerFrequency1":{"name":"equalizerFrequency1","abstract":"<p>Center frequency of second-order Regalia Mitra peaking equalizer section 1.</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)equalizerLevel1":{"name":"equalizerLevel1","abstract":"<p>Peak level in dB of second-order Regalia-Mitra peaking equalizer section 1</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)equalizerFrequency2":{"name":"equalizerFrequency2","abstract":"<p>Center frequency of second-order Regalia Mitra peaking equalizer section 2.</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)equalizerLevel2":{"name":"equalizerLevel2","abstract":"<p>Peak level in dB of second-order Regalia-Mitra peaking equalizer section 2</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>0 = all dry, 1 = all wet</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(im)init:predelay:crossoverFrequency:lowReleaseTime:midReleaseTime:dampingFrequency:equalizerFrequency1:equalizerLevel1:equalizerFrequency2:equalizerLevel2:dryWetMix:":{"name":"init(_:predelay:crossoverFrequency:lowReleaseTime:midReleaseTime:dampingFrequency:equalizerFrequency1:equalizerLevel1:equalizerFrequency2:equalizerLevel2:dryWetMix:)","abstract":"<p>Initialize this reverb node</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKZitaReverb"},"Classes/AKZitaReverb.html#/c:@M@AudioKit@objc(cs)AKZitaReverb(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKZitaReverb"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry Wet Mix (CrossFade) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)gain":{"name":"gain","abstract":"<p>Gain (Decibels) ranges from -20 to 20 (Default: 0)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)minDelayTime":{"name":"minDelayTime","abstract":"<p>Min Delay Time (Secs) ranges from 0.0001 to 1.0 (Default: 0.008)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)maxDelayTime":{"name":"maxDelayTime","abstract":"<p>Max Delay Time (Secs) ranges from 0.0001 to 1.0 (Default: 0.050)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)decayTimeAt0Hz":{"name":"decayTimeAt0Hz","abstract":"<p>Decay Time At0 Hz (Secs) ranges from 0.001 to 20.0 (Default: 1.0)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)decayTimeAtNyquist":{"name":"decayTimeAtNyquist","abstract":"<p>Decay Time At Nyquist (Secs) ranges from 0.001 to 20.0 (Default: 0.5)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)randomizeReflections":{"name":"randomizeReflections","abstract":"<p>Randomize Reflections (Integer) ranges from 1 to 1000 (Default: 1)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(im)init:dryWetMix:gain:minDelayTime:maxDelayTime:decayTimeAt0Hz:decayTimeAtNyquist:randomizeReflections:":{"name":"init(_:dryWetMix:gain:minDelayTime:maxDelayTime:decayTimeAt0Hz:decayTimeAtNyquist:randomizeReflections:)","abstract":"<p>Initialize the reverb2 node</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKReverb2"},"Classes/AKReverb2.html#/c:@M@AudioKit@objc(cs)AKReverb2(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKReverb2"},"Classes/AKReverb.html#/c:@M@AudioKit@objc(cs)AKReverb(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 0.5)</p>","parent_name":"AKReverb"},"Classes/AKReverb.html#/c:@M@AudioKit@objc(cs)AKReverb(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKReverb"},"Classes/AKReverb.html#/c:@M@AudioKit@objc(cs)AKReverb(im)init:dryWetMix:":{"name":"init(_:dryWetMix:)","abstract":"<p>Initialize the reverb node</p>","parent_name":"AKReverb"},"Classes/AKReverb.html#/c:@M@AudioKit@objc(cs)AKReverb(im)loadFactoryPreset:":{"name":"loadFactoryPreset(_:)","abstract":"<p>Load an Apple Factory Preset</p>","parent_name":"AKReverb"},"Classes/AKReverb.html#/c:@M@AudioKit@objc(cs)AKReverb(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKReverb"},"Classes/AKReverb.html#/c:@M@AudioKit@objc(cs)AKReverb(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverb(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverb(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverb(py)reverbDuration":{"name":"reverbDuration","abstract":"<p>The duration in seconds for a signal to decay to 1/1000, or 60dB down from its original amplitude.</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverb(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverb(im)init:reverbDuration:loopDuration:":{"name":"init(_:reverbDuration:loopDuration:)","abstract":"<p>Initialize this reverb node</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverb(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKFlatFrequencyResponseReverb.html#/c:@M@AudioKit@objc(cs)AKFlatFrequencyResponseReverb(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKFlatFrequencyResponseReverb"},"Classes/AKConvolution.html#/c:@M@AudioKit@objc(cs)AKConvolution(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKConvolution"},"Classes/AKConvolution.html#/c:@M@AudioKit@objc(cs)AKConvolution(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKConvolution"},"Classes/AKConvolution.html#/c:@M@AudioKit@objc(cs)AKConvolution(im)init:impulseResponseFileURL:partitionLength:":{"name":"init(_:impulseResponseFileURL:partitionLength:)","abstract":"<p>Initialize this convolution node</p>","parent_name":"AKConvolution"},"Classes/AKConvolution.html#/c:@M@AudioKit@objc(cs)AKConvolution(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKConvolution"},"Classes/AKConvolution.html#/c:@M@AudioKit@objc(cs)AKConvolution(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKConvolution"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(py)feedback":{"name":"feedback","abstract":"<p>Feedback level in the range 0 to 1. 0.6 gives a good small &lsquo;live&rsquo; room sound, 0.8 a small hall, and 0.9 a","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Low-pass cutoff frequency.</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(im)init:feedback:cutoffFrequency:":{"name":"init(_:feedback:cutoffFrequency:)","abstract":"<p>Initialize this reverb node</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@M@AudioKit@objc(cs)AKCostelloReverb(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@CM@AudioKit@objc(cs)AKCostelloReverb(im)presetShortTailCostelloReverb":{"name":"presetShortTailCostelloReverb()","abstract":"<p>Short Tail Reverb</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@CM@AudioKit@objc(cs)AKCostelloReverb(im)presetLowRingingLongTailCostelloReverb":{"name":"presetLowRingingLongTailCostelloReverb()","abstract":"<p>Low Ringing Long Tail Reverb</p>","parent_name":"AKCostelloReverb"},"Classes/AKCostelloReverb.html#/c:@CM@AudioKit@objc(cs)AKCostelloReverb(im)printCurrentValuesAsPreset":{"name":"printCurrentValuesAsPreset()","abstract":"<p>Print out current values in case you want to save it as a preset</p>","parent_name":"AKCostelloReverb"},"Classes/AKChowningReverb.html#/c:@M@AudioKit@objc(cs)AKChowningReverb(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKChowningReverb"},"Classes/AKChowningReverb.html#/c:@M@AudioKit@objc(cs)AKChowningReverb(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKChowningReverb"},"Classes/AKChowningReverb.html#/c:@M@AudioKit@objc(cs)AKChowningReverb(im)init:":{"name":"init(_:)","abstract":"<p>Initialize this reverb node</p>","parent_name":"AKChowningReverb"},"Classes/AKChowningReverb.html#/c:@M@AudioKit@objc(cs)AKChowningReverb(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKChowningReverb"},"Classes/AKChowningReverb.html#/c:@M@AudioKit@objc(cs)AKChowningReverb(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKChowningReverb"},"Classes/AKChowningReverb.html":{"name":"AKChowningReverb","abstract":"<p>This is was built using the JC reverb implentation found in FAUST. According"},"Classes/AKCostelloReverb.html":{"name":"AKCostelloReverb","abstract":"<p>8 delay line stereo FDN reverb, with feedback matrix based upon physical"},"Classes/AKConvolution.html":{"name":"AKConvolution","abstract":"<p>This module will perform partitioned convolution on an input signal using an"},"Classes/AKFlatFrequencyResponseReverb.html":{"name":"AKFlatFrequencyResponseReverb","abstract":"<p>This filter reiterates the input with an echo density determined by loop"},"Classes/AKReverb.html":{"name":"AKReverb","abstract":"<p>AudioKit version of Apple&rsquo;s Reverb Audio Unit</p>"},"Classes/AKReverb2.html":{"name":"AKReverb2","abstract":"<p>AudioKit version of Apple&rsquo;s Reverb2 Audio Unit</p>"},"Classes/AKZitaReverb.html":{"name":"AKZitaReverb","abstract":"<p>8 FDN stereo zitareverb algorithm, imported from Faust.</p>"},"Classes/AKToneComplementFilter.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilter(py)halfPowerPoint":{"name":"halfPowerPoint","abstract":"<p>Half-Power Point in Hertz. Half power is defined as peak power / square root of 2.</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilter(im)init:halfPowerPoint:":{"name":"init(_:halfPowerPoint:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneComplementFilter.html#/c:@M@AudioKit@objc(cs)AKToneComplementFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKToneComplementFilter"},"Classes/AKToneFilter.html#/c:@M@AudioKit@objc(cs)AKToneFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/c:@M@AudioKit@objc(cs)AKToneFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/c:@M@AudioKit@objc(cs)AKToneFilter(py)halfPowerPoint":{"name":"halfPowerPoint","abstract":"<p>The response curve&rsquo;s half-power point, in Hertz. Half power is defined as peak power / root 2.</p>","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/c:@M@AudioKit@objc(cs)AKToneFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/c:@M@AudioKit@objc(cs)AKToneFilter(im)init:halfPowerPoint:":{"name":"init(_:halfPowerPoint:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/c:@M@AudioKit@objc(cs)AKToneFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKToneFilter"},"Classes/AKToneFilter.html#/c:@M@AudioKit@objc(cs)AKToneFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKToneFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(py)distortion":{"name":"distortion","abstract":"<p>Distortion amount.  Zero gives a clean output. Greater than zero adds tanh distortion controlled by the","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Filter cutoff frequency in Hertz.</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(py)resonance":{"name":"resonance","abstract":"<p>Resonance. Usually a value in the range 0-1. A value of 1.0 will self oscillate at the cutoff frequency.","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(im)init:distortion:cutoffFrequency:resonance:":{"name":"init(_:distortion:cutoffFrequency:resonance:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKThreePoleLowpassFilter.html#/c:@M@AudioKit@objc(cs)AKThreePoleLowpassFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKThreePoleLowpassFilter"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(py)fundamentalFrequency":{"name":"fundamentalFrequency","abstract":"<p>Fundamental frequency of string.</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(py)feedback":{"name":"feedback","abstract":"<p>Feedback amount (value between 0-1). A value close to 1 creates a slower decay and a more pronounced resonance.","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(im)init:fundamentalFrequency:feedback:":{"name":"init(_:fundamentalFrequency:feedback:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKStringResonator"},"Classes/AKStringResonator.html#/c:@M@AudioKit@objc(cs)AKStringResonator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKStringResonator"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Cutoff frequency. (in Hertz)</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(py)resonance":{"name":"resonance","abstract":"<p>Resonance, generally &lt; 1, but not limited to it. Higher than 1 resonance values might cause aliasing,","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(py)distortion":{"name":"distortion","abstract":"<p>Distortion. Value is typically 2.0; deviation from this can cause stability issues.</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(py)resonanceAsymmetry":{"name":"resonanceAsymmetry","abstract":"<p>Asymmetry of resonance. Value is between 0-1</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(im)init:cutoffFrequency:resonance:distortion:resonanceAsymmetry:":{"name":"init(_:cutoffFrequency:resonance:distortion:resonanceAsymmetry:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKRolandTB303Filter.html#/c:@M@AudioKit@objc(cs)AKRolandTB303Filter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKRolandTB303Filter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(py)frequency":{"name":"frequency","abstract":"<p>Center frequency of the filter, or frequency position of the peak response.</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(py)bandwidth":{"name":"bandwidth","abstract":"<p>Bandwidth of the filter.</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(im)init:frequency:bandwidth:":{"name":"init(_:frequency:bandwidth:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKResonantFilter"},"Classes/AKResonantFilter.html#/c:@M@AudioKit@objc(cs)AKResonantFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKResonantFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(py)centerFrequency":{"name":"centerFrequency","abstract":"<p>Center frequency.</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(py)gain":{"name":"gain","abstract":"<p>Amount at which the center frequency value shall be increased or decreased. A value of 1 is a flat response.</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(py)q":{"name":"q","abstract":"<p>Q of the filter. sqrt(0.5) is no resonance.</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(im)init:centerFrequency:gain:q:":{"name":"init(_:centerFrequency:gain:q:)","abstract":"<p>Initialize this equalizer node</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKPeakingParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKPeakingParametricEqualizerFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPeakingParametricEqualizerFilter"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Filter cutoff frequency.</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(py)resonance":{"name":"resonance","abstract":"<p>Resonance, generally &lt; 1, but not limited to it. Higher than 1 resonance values might cause aliasing,","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(im)init:cutoffFrequency:resonance:":{"name":"init(_:cutoffFrequency:resonance:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@M@AudioKit@objc(cs)AKMoogLadder(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@CM@AudioKit@objc(cs)AKMoogLadder(im)presetFogMoogLadder":{"name":"presetFogMoogLadder()","abstract":"<p>Blurry, foggy filter</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@CM@AudioKit@objc(cs)AKMoogLadder(im)presetDullNoiseMoogLadder":{"name":"presetDullNoiseMoogLadder()","abstract":"<p>Dull noise filter</p>","parent_name":"AKMoogLadder"},"Classes/AKMoogLadder.html#/c:@CM@AudioKit@objc(cs)AKMoogLadder(im)printCurrentValuesAsPreset":{"name":"printCurrentValuesAsPreset()","abstract":"<p>Print out current values in case you want to save it as a preset</p>","parent_name":"AKMoogLadder"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(py)frequency":{"name":"frequency","abstract":"<p>Resonant frequency of the filter.</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(py)qualityFactor":{"name":"qualityFactor","abstract":"<p>Quality factor of the filter. Roughly equal to Q/frequency.</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(im)init:frequency:qualityFactor:":{"name":"init(_:frequency:qualityFactor:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKModalResonanceFilter.html#/c:@M@AudioKit@objc(cs)AKModalResonanceFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKModalResonanceFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(py)cornerFrequency":{"name":"cornerFrequency","abstract":"<p>Corner frequency.</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(py)gain":{"name":"gain","abstract":"<p>Amount at which the corner frequency value shall be increased or decreased. A value of 1 is a flat response.</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(py)q":{"name":"q","abstract":"<p>Q of the filter. sqrt(0.5) is no resonance.</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(im)init:cornerFrequency:gain:q:":{"name":"init(_:cornerFrequency:gain:q:)","abstract":"<p>Initialize this equalizer node</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfParametricEqualizerFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKLowShelfParametricEqualizerFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Cutoff Frequency (Hz) ranges from 10 to 200 (Default: 80)</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(py)gain":{"name":"gain","abstract":"<p>Gain (dB) ranges from -40 to 40 (Default: 0)</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 100)</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(im)init:cutoffFrequency:gain:":{"name":"init(_:cutoffFrequency:gain:)","abstract":"<p>Initialize the low shelf filter node</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowShelfFilter.html#/c:@M@AudioKit@objc(cs)AKLowShelfFilter(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKLowShelfFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Cutoff Frequency (Hz) ranges from 10 to 22050 (Default: 6900)</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(py)resonance":{"name":"resonance","abstract":"<p>Resonance (dB) ranges from -20 to 40 (Default: 0)</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 100)</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(im)init:cutoffFrequency:resonance:":{"name":"init(_:cutoffFrequency:resonance:)","abstract":"<p>Initialize the low pass filter node</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassFilter(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKLowPassFilter"},"Classes/AKLowPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Cutoff frequency. (in Hertz)</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilter(im)init:cutoffFrequency:":{"name":"init(_:cutoffFrequency:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKLowPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKLowPassButterworthFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKLowPassButterworthFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Filter cutoff</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(py)resonance":{"name":"resonance","abstract":"<p>Filter resonance (should be between 0-2)</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(py)saturation":{"name":"saturation","abstract":"<p>Filter saturation.</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(im)init:cutoffFrequency:resonance:saturation:":{"name":"init(_:cutoffFrequency:resonance:saturation:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKKorgLowPassFilter.html#/c:@M@AudioKit@objc(cs)AKKorgLowPassFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKKorgLowPassFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(py)centerFrequency":{"name":"centerFrequency","abstract":"<p>Corner frequency.</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(py)gain":{"name":"gain","abstract":"<p>Amount at which the corner frequency value shall be increased or decreased. A value of 1 is a flat response.</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(py)q":{"name":"q","abstract":"<p>Q of the filter. sqrt(0.5) is no resonance.</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(im)init:centerFrequency:gain:q:":{"name":"init(_:centerFrequency:gain:q:)","abstract":"<p>Initialize this equalizer node</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfParametricEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfParametricEqualizerFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKHighShelfParametricEqualizerFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Cut Off Frequency (Hz) ranges from 10000 to 22050 (Default: 10000)</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(py)gain":{"name":"gain","abstract":"<p>Gain (dB) ranges from -40 to 40 (Default: 0)</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 100)</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(im)init:cutOffFrequency:gain:":{"name":"init(_:cutOffFrequency:gain:)","abstract":"<p>Initialize the high shelf filter node</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighShelfFilter.html#/c:@M@AudioKit@objc(cs)AKHighShelfFilter(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKHighShelfFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Cutoff Frequency (Hz) ranges from 10 to 22050 (Default: 6900)</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(py)resonance":{"name":"resonance","abstract":"<p>Resonance (dB) ranges from -20 to 40 (Default: 0)</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default: 100)</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(im)init:cutoffFrequency:resonance:":{"name":"init(_:cutoffFrequency:resonance:)","abstract":"<p>Initialize the high pass filter node</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassFilter(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKHighPassFilter"},"Classes/AKHighPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilter(py)cutoffFrequency":{"name":"cutoffFrequency","abstract":"<p>Cutoff frequency. (in Hertz)</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilter(im)init:cutoffFrequency:":{"name":"init(_:cutoffFrequency:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKHighPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKHighPassButterworthFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKHighPassButterworthFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(py)x":{"name":"x","abstract":"<p>x</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(py)y":{"name":"y","abstract":"<p>y</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(im)init:x:y:":{"name":"init(_:x:y:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKFormantFilter"},"Classes/AKFormantFilter.html#/c:@M@AudioKit@objc(cs)AKFormantFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKFormantFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(py)centerFrequency":{"name":"centerFrequency","abstract":"<p>Center frequency. (in Hertz)</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(py)bandwidth":{"name":"bandwidth","abstract":"<p>The peak/notch bandwidth in Hertz</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(py)gain":{"name":"gain","abstract":"<p>The peak/notch gain</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(im)init:centerFrequency:bandwidth:gain:":{"name":"init(_:centerFrequency:bandwidth:gain:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKEqualizerFilter"},"Classes/AKEqualizerFilter.html#/c:@M@AudioKit@objc(cs)AKEqualizerFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKEqualizerFilter"},"Classes/AKDCBlock.html#/c:@M@AudioKit@objc(cs)AKDCBlock(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKDCBlock"},"Classes/AKDCBlock.html#/c:@M@AudioKit@objc(cs)AKDCBlock(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDCBlock"},"Classes/AKDCBlock.html#/c:@M@AudioKit@objc(cs)AKDCBlock(im)init:":{"name":"init(_:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKDCBlock"},"Classes/AKDCBlock.html#/c:@M@AudioKit@objc(cs)AKDCBlock(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDCBlock"},"Classes/AKDCBlock.html#/c:@M@AudioKit@objc(cs)AKDCBlock(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDCBlock"},"Classes/AKCombFilterReverb.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverb(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKCombFilterReverb"},"Classes/AKCombFilterReverb.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverb(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKCombFilterReverb"},"Classes/AKCombFilterReverb.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverb(py)reverbDuration":{"name":"reverbDuration","abstract":"<p>The time in seconds for a signal to decay to 1/1000, or 60dB from its original amplitude. (aka RT-60).</p>","parent_name":"AKCombFilterReverb"},"Classes/AKCombFilterReverb.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverb(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKCombFilterReverb"},"Classes/AKCombFilterReverb.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverb(im)init:reverbDuration:loopDuration:":{"name":"init(_:reverbDuration:loopDuration:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKCombFilterReverb"},"Classes/AKCombFilterReverb.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverb(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKCombFilterReverb"},"Classes/AKCombFilterReverb.html#/c:@M@AudioKit@objc(cs)AKCombFilterReverb(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKCombFilterReverb"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(py)centerFrequency":{"name":"centerFrequency","abstract":"<p>Center frequency. (in Hertz)</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(py)bandwidth":{"name":"bandwidth","abstract":"<p>Bandwidth. (in Hertz)</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(im)init:centerFrequency:bandwidth:":{"name":"init(_:centerFrequency:bandwidth:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandRejectButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandRejectButterworthFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKBandRejectButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(py)centerFrequency":{"name":"centerFrequency","abstract":"<p>Center frequency. (in Hertz)</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(py)bandwidth":{"name":"bandwidth","abstract":"<p>Bandwidth. (in Hertz)</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(im)init:centerFrequency:bandwidth:":{"name":"init(_:centerFrequency:bandwidth:)","abstract":"<p>Initialize this filter node</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKBandPassButterworthFilter.html#/c:@M@AudioKit@objc(cs)AKBandPassButterworthFilter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKBandPassButterworthFilter"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(py)wah":{"name":"wah","abstract":"<p>Wah Amount</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(py)mix":{"name":"mix","abstract":"<p>Dry/Wet Mix</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(py)amplitude":{"name":"amplitude","abstract":"<p>Overall level</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(im)init:wah:mix:amplitude:":{"name":"init(_:wah:mix:amplitude:)","abstract":"<p>Initialize this autoWah node</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html#/c:@M@AudioKit@objc(cs)AKAutoWah(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKAutoWah"},"Classes/AKAutoWah.html":{"name":"AKAutoWah","abstract":"<p>An automatic wah effect, ported from Guitarix via Faust.</p>"},"Classes/AKBandPassButterworthFilter.html":{"name":"AKBandPassButterworthFilter","abstract":"<p>These filters are Butterworth second-order IIR filters. They offer an almost"},"Classes/AKBandRejectButterworthFilter.html":{"name":"AKBandRejectButterworthFilter","abstract":"<p>These filters are Butterworth second-order IIR filters. They offer an almost"},"Classes/AKCombFilterReverb.html":{"name":"AKCombFilterReverb","abstract":"<p>This filter reiterates input with an echo density determined by"},"Classes/AKDCBlock.html":{"name":"AKDCBlock","abstract":"<p>Implements the DC blocking filter Y[i] = X[i] - X[i-1] + (igain * Y[i-1])"},"Classes/AKEqualizerFilter.html":{"name":"AKEqualizerFilter","abstract":"<p>A 2nd order tunable equalization filter that provides a peak/notch filter"},"Classes/AKFormantFilter.html":{"name":"AKFormantFilter","abstract":"<p>When fed with a pulse train, it will generate a series of overlapping"},"Classes/AKHighPassButterworthFilter.html":{"name":"AKHighPassButterworthFilter","abstract":"<p>These filters are Butterworth second-order IIR filters. They offer an almost"},"Classes/AKHighPassFilter.html":{"name":"AKHighPassFilter","abstract":"<p>AudioKit version of Apple&rsquo;s HighPassFilter Audio Unit</p>"},"Classes/AKHighShelfFilter.html":{"name":"AKHighShelfFilter","abstract":"<p>AudioKit version of Apple&rsquo;s HighShelfFilter Audio Unit</p>"},"Classes/AKHighShelfParametricEqualizerFilter.html":{"name":"AKHighShelfParametricEqualizerFilter","abstract":"<p>This is an implementation of Zoelzer&rsquo;s parametric equalizer filter.</p>"},"Classes/AKKorgLowPassFilter.html":{"name":"AKKorgLowPassFilter","abstract":"<p>Analog model of the Korg 35 Lowpass Filter</p>"},"Classes/AKLowPassButterworthFilter.html":{"name":"AKLowPassButterworthFilter","abstract":"<p>These filters are Butterworth second-order IIR filters. They offer an almost"},"Classes/AKLowPassFilter.html":{"name":"AKLowPassFilter","abstract":"<p>AudioKit version of Apple&rsquo;s LowPassFilter Audio Unit</p>"},"Classes/AKLowShelfFilter.html":{"name":"AKLowShelfFilter","abstract":"<p>AudioKit version of Apple&rsquo;s LowShelfFilter Audio Unit</p>"},"Classes/AKLowShelfParametricEqualizerFilter.html":{"name":"AKLowShelfParametricEqualizerFilter","abstract":"<p>This is an implementation of Zoelzer&rsquo;s parametric equalizer filter.</p>"},"Classes/AKModalResonanceFilter.html":{"name":"AKModalResonanceFilter","abstract":"<p>A modal resonance filter used for modal synthesis. Plucked and bell sounds"},"Classes/AKMoogLadder.html":{"name":"AKMoogLadder","abstract":"<p>Moog Ladder is an new digital implementation of the Moog ladder filter based"},"Classes/AKPeakingParametricEqualizerFilter.html":{"name":"AKPeakingParametricEqualizerFilter","abstract":"<p>This is an implementation of Zoelzer&rsquo;s parametric equalizer filter.</p>"},"Classes/AKResonantFilter.html":{"name":"AKResonantFilter","abstract":"<p>The output for reson appears to be very hot, so take caution when using this"},"Classes/AKRolandTB303Filter.html":{"name":"AKRolandTB303Filter","abstract":"<p>Emulation of the Roland TB-303 filter</p>"},"Classes/AKStringResonator.html":{"name":"AKStringResonator","abstract":"<p>AKStringResonator passes the input through a network composed of comb,"},"Classes/AKThreePoleLowpassFilter.html":{"name":"AKThreePoleLowpassFilter","abstract":"<p>3-pole (18 db/oct slope) Low-Pass filter with resonance and tanh distortion.</p>"},"Classes/AKToneFilter.html":{"name":"AKToneFilter","abstract":"<p>A first-order recursive low-pass filter with variable frequency response.</p>"},"Classes/AKToneComplementFilter.html":{"name":"AKToneComplementFilter","abstract":"<p>A complement to the AKLowPassFilter.</p>"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(py)frequency":{"name":"frequency","abstract":"<p>Frequency (Hz)</p>","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(py)depth":{"name":"depth","abstract":"<p>Depth</p>","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(im)init:frequency:depth:waveform:":{"name":"init(_:frequency:depth:waveform:)","abstract":"<p>Initialize this tremolo node</p>","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKTremolo"},"Classes/AKTremolo.html#/c:@M@AudioKit@objc(cs)AKTremolo(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKTremolo"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(py)attackDuration":{"name":"attackDuration","abstract":"<p>Attack time</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(py)decayDuration":{"name":"decayDuration","abstract":"<p>Decay time</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(py)sustainLevel":{"name":"sustainLevel","abstract":"<p>Sustain Level</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(py)releaseDuration":{"name":"releaseDuration","abstract":"<p>Release time</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(im)init:attackDuration:decayDuration:sustainLevel:releaseDuration:":{"name":"init(_:attackDuration:decayDuration:sustainLevel:releaseDuration:)","abstract":"<p>Initialize this envelope node</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html#/c:@M@AudioKit@objc(cs)AKAmplitudeEnvelope(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKAmplitudeEnvelope"},"Classes/AKAmplitudeEnvelope.html":{"name":"AKAmplitudeEnvelope","abstract":"<p>Triggerable classic ADSR envelope</p>"},"Classes/AKTremolo.html":{"name":"AKTremolo","abstract":"<p>Table-lookup tremolo with linear interpolation</p>"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(py)shift":{"name":"shift","abstract":"<p>Pitch shift (in semitones)</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(py)windowSize":{"name":"windowSize","abstract":"<p>Window size (in samples)</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(py)crossfade":{"name":"crossfade","abstract":"<p>Crossfade (in samples)</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(im)init:shift:windowSize:crossfade:":{"name":"init(_:shift:windowSize:crossfade:)","abstract":"<p>Initialize this pitchshifter node</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPitchShifter"},"Classes/AKPitchShifter.html#/c:@M@AudioKit@objc(cs)AKPitchShifter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPitchShifter"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)notchMinimumFrequency":{"name":"notchMinimumFrequency","abstract":"<p>Notch Minimum Frequency</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)notchMaximumFrequency":{"name":"notchMaximumFrequency","abstract":"<p>Notch Maximum Frequency</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)notchWidth":{"name":"notchWidth","abstract":"<p>Between 10 and 5000</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)notchFrequency":{"name":"notchFrequency","abstract":"<p>Between 1.1 and 4</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)vibratoMode":{"name":"vibratoMode","abstract":"<p>1 or 0</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)depth":{"name":"depth","abstract":"<p>Between 0 and 1</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)feedback":{"name":"feedback","abstract":"<p>Between 0 and 1</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)inverted":{"name":"inverted","abstract":"<p>1 or 0</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)lfoBPM":{"name":"lfoBPM","abstract":"<p>Between 24 and 360</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(im)init:notchMinimumFrequency:notchMaximumFrequency:notchWidth:notchFrequency:vibratoMode:depth:feedback:inverted:lfoBPM:":{"name":"init(_:notchMinimumFrequency:notchMaximumFrequency:notchWidth:notchFrequency:vibratoMode:depth:feedback:inverted:lfoBPM:)","abstract":"<p>Initialize this phaser node</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPhaser"},"Classes/AKPhaser.html#/c:@M@AudioKit@objc(cs)AKPhaser(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPhaser"},"Classes/AKOperationEffect.html#/c:@M@AudioKit@objc(cs)AKOperationEffect(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/c:@M@AudioKit@objc(cs)AKOperationEffect(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/c:@M@AudioKit@objc(cs)AKOperationEffect(py)parameters":{"name":"parameters","abstract":"<p>Parameters for changing internal operations</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/s:8AudioKit17AKOperationEffectCAcA6AKNodeCSg_Si16numberOfChannelsSayAA0C0CGAA17AKStereoOperationC_AJtc10operationstcfc":{"name":"init(_:numberOfChannels:operations:)","abstract":"<p>Initialize the generator for stereo (2 channels)</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/s:8AudioKit17AKOperationEffectCAcA6AKNodeCSg_AA19AKComputedParameter_pAA17AKStereoOperationC_SayAA0C0CGtc9operationtcfc":{"name":"init(_:operation:)","abstract":"<p>Initialize the generator for stereo (2 channels)</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/c:@M@AudioKit@objc(cs)AKOperationEffect(im)init:sporth:customUgens:":{"name":"init(_:sporth:customUgens:)","abstract":"<p>Initialize the effect with an input and a valid Sporth string</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/c:@M@AudioKit@objc(cs)AKOperationEffect(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html#/c:@M@AudioKit@objc(cs)AKOperationEffect(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKOperationEffect"},"Classes/AKOperationEffect.html":{"name":"AKOperationEffect","abstract":"<p>Operation-based effect</p>"},"Classes/AKPhaser.html":{"name":"AKPhaser","abstract":"<p>A stereo phaser This is a stereo phaser, generated from Faust code taken"},"Classes/AKPitchShifter.html":{"name":"AKPitchShifter","abstract":"<p>Faust-based pitch shfiter</p>"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(py)attackTime":{"name":"attackTime","abstract":"<p>Attack Time (Secs) ranges from 0.001 to 0.03 (Default: 0.012)</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(py)decayTime":{"name":"decayTime","abstract":"<p>Decay Time (Secs) ranges from 0.001 to 0.06 (Default: 0.024)</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(py)preGain":{"name":"preGain","abstract":"<p>Pre Gain (dB) ranges from -40 to 40 (Default: 0)</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 100)</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(im)init:attackTime:decayTime:preGain:":{"name":"init(_:attackTime:decayTime:preGain:)","abstract":"<p>Initialize the peak limiter node</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKPeakLimiter"},"Classes/AKPeakLimiter.html#/c:@M@AudioKit@objc(cs)AKPeakLimiter(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKPeakLimiter"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)expansionRatio":{"name":"expansionRatio","abstract":"<p>Expansion Ratio (rate) ranges from 1 to 50.0 (Default: 2)</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)expansionThreshold":{"name":"expansionThreshold","abstract":"<p>Expansion Threshold (rate) ranges from 1 to 50.0 (Default: 2)</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)attackTime":{"name":"attackTime","abstract":"<p>Attack Time (secs) ranges from 0.0001 to 0.2 (Default: 0.001)</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)releaseTime":{"name":"releaseTime","abstract":"<p>Release Time (secs) ranges from 0.01 to 3 (Default: 0.05)</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)masterGain":{"name":"masterGain","abstract":"<p>Master Gain (dB) ranges from -40 to 40 (Default: 0)</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)compressionAmount":{"name":"compressionAmount","abstract":"<p>Compression Amount (dB) read only</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)inputAmplitude":{"name":"inputAmplitude","abstract":"<p>Input Amplitude (dB) read only</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)outputAmplitude":{"name":"outputAmplitude","abstract":"<p>Output Amplitude (dB) read only</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 100)</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(im)init:threshold:headRoom:expansionRatio:expansionThreshold:attackTime:releaseTime:masterGain:compressionAmount:inputAmplitude:outputAmplitude:":{"name":"init(_:threshold:headRoom:expansionRatio:expansionThreshold:attackTime:releaseTime:masterGain:compressionAmount:inputAmplitude:outputAmplitude:)","abstract":"<p>Initialize the dynamics processor node</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKExpander"},"Classes/AKExpander.html#/c:@M@AudioKit@objc(cs)AKExpander(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKExpander"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(py)ratio":{"name":"ratio","abstract":"<p>Ratio to compress with, a value &gt; 1 will compress</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(py)threshold":{"name":"threshold","abstract":"<p>Threshold (in dB) 0 = max</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(py)attackTime":{"name":"attackTime","abstract":"<p>Attack time</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(py)releaseTime":{"name":"releaseTime","abstract":"<p>Release time</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(im)init:ratio:threshold:attackTime:releaseTime:":{"name":"init(_:ratio:threshold:attackTime:releaseTime:)","abstract":"<p>Initialize this compressor node</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicRangeCompressor.html#/c:@M@AudioKit@objc(cs)AKDynamicRangeCompressor(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDynamicRangeCompressor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)threshold":{"name":"threshold","abstract":"<p>Threshold (dB) ranges from -40 to 20 (Default: -20)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)headRoom":{"name":"headRoom","abstract":"<p>Head Room (dB) ranges from 0.1 to 40.0 (Default: 5)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)expansionRatio":{"name":"expansionRatio","abstract":"<p>Expansion Ratio (rate) ranges from 1 to 50.0 (Default: 2)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)expansionThreshold":{"name":"expansionThreshold","abstract":"<p>Expansion Threshold (rate) ranges from 1 to 50.0 (Default: 2)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)attackTime":{"name":"attackTime","abstract":"<p>Attack Time (secs) ranges from 0.0001 to 0.2 (Default: 0.001)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)releaseTime":{"name":"releaseTime","abstract":"<p>Release Time (secs) ranges from 0.01 to 3 (Default: 0.05)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)masterGain":{"name":"masterGain","abstract":"<p>Master Gain (dB) ranges from -40 to 40 (Default: 0)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)compressionAmount":{"name":"compressionAmount","abstract":"<p>Compression Amount (dB) read only</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)inputAmplitude":{"name":"inputAmplitude","abstract":"<p>Input Amplitude (dB) read only</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)outputAmplitude":{"name":"outputAmplitude","abstract":"<p>Output Amplitude (dB) read only</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 100)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(im)init:threshold:headRoom:expansionRatio:expansionThreshold:attackTime:releaseTime:masterGain:compressionAmount:inputAmplitude:outputAmplitude:":{"name":"init(_:threshold:headRoom:expansionRatio:expansionThreshold:attackTime:releaseTime:masterGain:compressionAmount:inputAmplitude:outputAmplitude:)","abstract":"<p>Initialize the dynamics processor node</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKDynamicsProcessor.html#/c:@M@AudioKit@objc(cs)AKDynamicsProcessor(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKDynamicsProcessor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)threshold":{"name":"threshold","abstract":"<p>Threshold (dB) ranges from -40 to 20 (Default: -20)</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)headRoom":{"name":"headRoom","abstract":"<p>Head Room (dB) ranges from 0.1 to 40.0 (Default: 5)</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)attackTime":{"name":"attackTime","abstract":"<p>Attack Time (secs) ranges from 0.0001 to 0.2 (Default: 0.001)</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)releaseTime":{"name":"releaseTime","abstract":"<p>Release Time (secs) ranges from 0.01 to 3 (Default: 0.05)</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)compressionAmount":{"name":"compressionAmount","abstract":"<p>Compression Amount (dB) read only</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)inputAmplitude":{"name":"inputAmplitude","abstract":"<p>Input Amplitude (dB) read only</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)outputAmplitude":{"name":"outputAmplitude","abstract":"<p>Output Amplitude (dB) read only</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)masterGain":{"name":"masterGain","abstract":"<p>Master Gain (dB) ranges from -40 to 40 (Default: 0)</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Default 100)</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(im)init:threshold:headRoom:attackTime:releaseTime:masterGain:":{"name":"init(_:threshold:headRoom:attackTime:releaseTime:masterGain:)","abstract":"<p>Initialize the dynamics processor node</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html#/c:@M@AudioKit@objc(cs)AKCompressor(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKCompressor"},"Classes/AKCompressor.html":{"name":"AKCompressor","abstract":"<p>AudioKit Compressor based on Apple&rsquo;s DynamicsProcessor Audio Unit</p>"},"Classes/AKDynamicsProcessor.html":{"name":"AKDynamicsProcessor","abstract":"<p>AudioKit version of Apple&rsquo;s DynamicsProcessor Audio Unit</p>"},"Classes/AKDynamicRangeCompressor.html":{"name":"AKDynamicRangeCompressor","abstract":"<p>Dynamic range compressor from Faust</p>"},"Classes/AKExpander.html":{"name":"AKExpander","abstract":"<p>AudioKit Expander based on Apple&rsquo;s DynamicsProcessor Audio Unit</p>"},"Classes/AKPeakLimiter.html":{"name":"AKPeakLimiter","abstract":"<p>AudioKit version of Apple&rsquo;s PeakLimiter Audio Unit</p>"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(py)pregain":{"name":"pregain","abstract":"<p>Determines the amount of gain applied to the signal before waveshaping. A value of 1 gives slight distortion.</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(py)postgain":{"name":"postgain","abstract":"<p>Gain applied after waveshaping</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(py)postiveShapeParameter":{"name":"postiveShapeParameter","abstract":"<p>Shape of the positive part of the signal. A value of 0 gets a flat clip.</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(py)negativeShapeParameter":{"name":"negativeShapeParameter","abstract":"<p>Like the positive shape parameter, only for the negative part.</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(im)init:pregain:postgain:postiveShapeParameter:negativeShapeParameter:":{"name":"init(_:pregain:postgain:postiveShapeParameter:negativeShapeParameter:)","abstract":"<p>Initialize this distortion node</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKTanhDistortion"},"Classes/AKTanhDistortion.html#/c:@M@AudioKit@objc(cs)AKTanhDistortion(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKTanhDistortion"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(py)frequency1":{"name":"frequency1","abstract":"<p>Frequency1 (Hertz) ranges from 0.5 to 8000 (Default: 100)</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(py)frequency2":{"name":"frequency2","abstract":"<p>Frequency2 (Hertz) ranges from 0.5 to 8000 (Default: 100)</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(py)balance":{"name":"balance","abstract":"<p>Ring Mod Balance (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(py)mix":{"name":"mix","abstract":"<p>Mix (Normalized Value) ranges from 0 to 1 (Default: 1)</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(im)init:frequency1:frequency2:balance:mix:":{"name":"init(_:frequency1:frequency2:balance:mix:)","abstract":"<p>Initialize the ring modulator node</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKRingModulator"},"Classes/AKRingModulator.html#/c:@M@AudioKit@objc(cs)AKRingModulator(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKRingModulator"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)delay":{"name":"delay","abstract":"<p>Delay (Milliseconds) ranges from 0.1 to 500 (Default: 0.1)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)decay":{"name":"decay","abstract":"<p>Decay (Rate) ranges from 0.1 to 50 (Default: 1.0)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)delayMix":{"name":"delayMix","abstract":"<p>Delay Mix (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)decimation":{"name":"decimation","abstract":"<p>Decimation (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)rounding":{"name":"rounding","abstract":"<p>Rounding (Normalized Value) ranges from 0 to 1 (Default: 0.0)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)decimationMix":{"name":"decimationMix","abstract":"<p>Decimation Mix (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)linearTerm":{"name":"linearTerm","abstract":"<p>Linear Term (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)squaredTerm":{"name":"squaredTerm","abstract":"<p>Squared Term (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)cubicTerm":{"name":"cubicTerm","abstract":"<p>Cubic Term (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)polynomialMix":{"name":"polynomialMix","abstract":"<p>Polynomial Mix (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)ringModFreq1":{"name":"ringModFreq1","abstract":"<p>Ring Mod Freq1 (Hertz) ranges from 0.5 to 8000 (Default: 100)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)ringModFreq2":{"name":"ringModFreq2","abstract":"<p>Ring Mod Freq2 (Hertz) ranges from 0.5 to 8000 (Default: 100)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)ringModBalance":{"name":"ringModBalance","abstract":"<p>Ring Mod Balance (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)ringModMix":{"name":"ringModMix","abstract":"<p>Ring Mod Mix (Normalized Value) ranges from 0 to 1 (Default: 0.0)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)softClipGain":{"name":"softClipGain","abstract":"<p>Soft Clip Gain (dB) ranges from -80 to 20 (Default: -6)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)finalMix":{"name":"finalMix","abstract":"<p>Final Mix (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(im)init:delay:decay:delayMix:decimation:rounding:decimationMix:linearTerm:squaredTerm:cubicTerm:polynomialMix:ringModFreq1:ringModFreq2:ringModBalance:ringModMix:softClipGain:finalMix:":{"name":"init(_:delay:decay:delayMix:decimation:rounding:decimationMix:linearTerm:squaredTerm:cubicTerm:polynomialMix:ringModFreq1:ringModFreq2:ringModBalance:ringModMix:softClipGain:finalMix:)","abstract":"<p>Initialize the distortion node</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@M@AudioKit@objc(cs)AKDistortion(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@CM@AudioKit@objc(cs)AKDistortion(im)presetInfiniteDistortionWall":{"name":"presetInfiniteDistortionWall()","abstract":"<p>Massive Distortion</p>","parent_name":"AKDistortion"},"Classes/AKDistortion.html#/c:@CM@AudioKit@objc(cs)AKDistortion(im)printCurrentValuesAsPreset":{"name":"printCurrentValuesAsPreset()","abstract":"<p>Print out current values in case you want to save it as a preset</p>","parent_name":"AKDistortion"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(py)decimation":{"name":"decimation","abstract":"<p>Decimation (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(py)rounding":{"name":"rounding","abstract":"<p>Rounding (Normalized Value) ranges from 0 to 1 (Default: 0)</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(py)mix":{"name":"mix","abstract":"<p>Mix (Normalized Value) ranges from 0 to 1 (Default: 1)</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(im)init:decimation:rounding:mix:":{"name":"init(_:decimation:rounding:mix:)","abstract":"<p>Initialize the decimator node</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDecimator"},"Classes/AKDecimator.html#/c:@M@AudioKit@objc(cs)AKDecimator(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKDecimator"},"Classes/AKClipper.html#/c:@M@AudioKit@objc(cs)AKClipper(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKClipper"},"Classes/AKClipper.html#/c:@M@AudioKit@objc(cs)AKClipper(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKClipper"},"Classes/AKClipper.html#/c:@M@AudioKit@objc(cs)AKClipper(py)limit":{"name":"limit","abstract":"<p>Threshold / limiting value.</p>","parent_name":"AKClipper"},"Classes/AKClipper.html#/c:@M@AudioKit@objc(cs)AKClipper(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKClipper"},"Classes/AKClipper.html#/c:@M@AudioKit@objc(cs)AKClipper(im)init:limit:":{"name":"init(_:limit:)","abstract":"<p>Initialize this clipper node</p>","parent_name":"AKClipper"},"Classes/AKClipper.html#/c:@M@AudioKit@objc(cs)AKClipper(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKClipper"},"Classes/AKClipper.html#/c:@M@AudioKit@objc(cs)AKClipper(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKClipper"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(py)bitDepth":{"name":"bitDepth","abstract":"<p>The bit depth of signal output. Typically in range (1-24). Non-integer values are OK.</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(py)sampleRate":{"name":"sampleRate","abstract":"<p>The sample rate of signal output.</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(im)init:bitDepth:sampleRate:":{"name":"init(_:bitDepth:sampleRate:)","abstract":"<p>Initialize this bitcrusher node</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html#/c:@M@AudioKit@objc(cs)AKBitCrusher(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKBitCrusher"},"Classes/AKBitCrusher.html":{"name":"AKBitCrusher","abstract":"<p>This will digitally degrade a signal.</p>"},"Classes/AKClipper.html":{"name":"AKClipper","abstract":"<p>Clips a signal to a predefined limit, in a <q>soft</q> manner, using one of three"},"Classes/AKDecimator.html":{"name":"AKDecimator","abstract":"<p>AudioKit version of Apple&rsquo;s Decimator from the Distortion Audio Unit</p>"},"Classes/AKDistortion.html":{"name":"AKDistortion","abstract":"<p>AudioKit version of Apple&rsquo;s Distortion Audio Unit</p>"},"Classes/AKRingModulator.html":{"name":"AKRingModulator","abstract":"<p>AudioKit version of Apple&rsquo;s Ring Modulator from the Distortion Audio Unit</p>"},"Classes/AKTanhDistortion.html":{"name":"AKTanhDistortion","abstract":"<p>Distortion using a modified hyperbolic tangent function.</p>"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(py)rampTime":{"name":"rampTime","abstract":"<p>Ramp Time represents the speed at which parameters are allowed to change</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(py)time":{"name":"time","abstract":"<p>Delay time (in seconds) that can be changed at any point. This value must not exceed the maximum delay time.</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(py)feedback":{"name":"feedback","abstract":"<p>Feedback amount. Should be a value between 0-1.</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(im)init:time:feedback:maximumDelayTime:":{"name":"init(_:time:feedback:maximumDelayTime:)","abstract":"<p>Initialize this delay node</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKVariableDelay"},"Classes/AKVariableDelay.html#/c:@M@AudioKit@objc(cs)AKVariableDelay(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKVariableDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(py)time":{"name":"time","abstract":"<p>Delay time in seconds (Default: 1)</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(py)feedback":{"name":"feedback","abstract":"<p>Feedback (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(py)lowPassCutoff":{"name":"lowPassCutoff","abstract":"<p>Low pass cut-off frequency in Hertz (Default: 15000)</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(py)dryWetMix":{"name":"dryWetMix","abstract":"<p>Dry/Wet Mix (Normalized Value) ranges from 0 to 1 (Default: 0.5)</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(im)init:time:feedback:lowPassCutoff:dryWetMix:":{"name":"init(_:time:feedback:lowPassCutoff:dryWetMix:)","abstract":"<p>Initialize the delay node</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@M@AudioKit@objc(cs)AKDelay(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@CM@AudioKit@objc(cs)AKDelay(im)presetShortDelay":{"name":"presetShortDelay()","abstract":"<p>Short Delay</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@CM@AudioKit@objc(cs)AKDelay(im)presetDenseLongDelay":{"name":"presetDenseLongDelay()","abstract":"<p>Long, dense delay</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@CM@AudioKit@objc(cs)AKDelay(im)presetElectricCircuitsDelay":{"name":"presetElectricCircuitsDelay()","abstract":"<p>Electrical Circuits, Robotic Delay Effect</p>","parent_name":"AKDelay"},"Classes/AKDelay.html#/c:@CM@AudioKit@objc(cs)AKDelay(im)printCurrentValuesAsPreset":{"name":"printCurrentValuesAsPreset()","abstract":"<p>Print out current values in case you want to save it as a preset</p>","parent_name":"AKDelay"},"Classes/AKDelay.html":{"name":"AKDelay","abstract":"<p>AudioKit version of Apple&rsquo;s Delay Audio Unit</p>"},"Classes/AKVariableDelay.html":{"name":"AKVariableDelay","abstract":"<p>A delay line with cubic interpolation.</p>"},"Classes/AKFrequencyTracker.html#/c:@M@AudioKit@objc(cs)AKFrequencyTracker(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKFrequencyTracker"},"Classes/AKFrequencyTracker.html#/c:@M@AudioKit@objc(cs)AKFrequencyTracker(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKFrequencyTracker"},"Classes/AKFrequencyTracker.html#/c:@M@AudioKit@objc(cs)AKFrequencyTracker(py)amplitude":{"name":"amplitude","abstract":"<p>Detected Amplitude (Use AKAmplitude tracker if you don&rsquo;t need frequency)</p>","parent_name":"AKFrequencyTracker"},"Classes/AKFrequencyTracker.html#/c:@M@AudioKit@objc(cs)AKFrequencyTracker(py)frequency":{"name":"frequency","abstract":"<p>Detected frequency</p>","parent_name":"AKFrequencyTracker"},"Classes/AKFrequencyTracker.html#/c:@M@AudioKit@objc(cs)AKFrequencyTracker(im)init:hopSize:peakCount:":{"name":"init(_:hopSize:peakCount:)","abstract":"<p>Initialize this Pitch-tracker node</p>","parent_name":"AKFrequencyTracker"},"Classes/AKFrequencyTracker.html#/c:@M@AudioKit@objc(cs)AKFrequencyTracker(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKFrequencyTracker"},"Classes/AKFrequencyTracker.html#/c:@M@AudioKit@objc(cs)AKFrequencyTracker(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKFrequencyTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(py)amplitude":{"name":"amplitude","abstract":"<p>Detected amplitude</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(py)threshold":{"name":"threshold","abstract":"<p>Threshold amplitude</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(im)init:halfPowerPoint:threshold:thresholdCallback:":{"name":"init(_:halfPowerPoint:threshold:thresholdCallback:)","abstract":"<p>Initialize this amplitude tracker node</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html#/c:@M@AudioKit@objc(cs)AKAmplitudeTracker(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKAmplitudeTracker"},"Classes/AKAmplitudeTracker.html":{"name":"AKAmplitudeTracker","abstract":"<p>Performs a <q>root-mean-square</q> on a signal to get overall amplitude of a"},"Classes/AKFrequencyTracker.html":{"name":"AKFrequencyTracker","abstract":"<p>This is based on an algorithm originally created by Miller Puckette.</p>"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(py)isStarted":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(py)sporth":{"name":"sporth","abstract":"<p>Sporth language snippet</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(py)parameters":{"name":"parameters","abstract":"<p>Parameters for changing internal operations</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/s:8AudioKit20AKOperationGeneratorCAcA19AKComputedParameter_pSayAA0C0CGc9operation_tcfc":{"name":"init(operation:)","abstract":"<p>Initialize with a mono or stereo operation</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/s:8AudioKit20AKOperationGeneratorCACSi16numberOfChannels_SayAA0C0CGAGc10operationstcfc":{"name":"init(numberOfChannels:operations:)","abstract":"<p>Initialize the generator for stereo (2 channels)</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(im)initWithSporth:customUgens:":{"name":"init(sporth:customUgens:)","abstract":"<p>Initialize this generator node with a generic sporth stack and a triggering flag</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(im)trigger:":{"name":"trigger(_:)","abstract":"<p>Trigger the sound with current parameters</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKOperationGenerator"},"Classes/AKOperationGenerator.html#/c:@M@AudioKit@objc(cs)AKOperationGenerator(im)restart":{"name":"restart()","abstract":"<p>Restart from scratch</p>","parent_name":"AKOperationGenerator"},"Protocols/AKToggleable.html#/s:8AudioKit12AKToggleableP9isStartedSbv":{"name":"isStarted","abstract":"<p>Tells whether the node is processing (ie. started, playing, or active)</p>","parent_name":"AKToggleable"},"Protocols/AKToggleable.html#/s:8AudioKit12AKToggleableP5startyyF":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKToggleable"},"Protocols/AKToggleable.html#/s:8AudioKit12AKToggleableP4stopyyF":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKToggleable"},"Protocols/AKToggleable.html#/s:8AudioKit12AKToggleablePAAE9isPlayingSbv":{"name":"isPlaying","abstract":"<p>Synonym for isStarted that may make more sense with musical instruments</p>","parent_name":"AKToggleable"},"Protocols/AKToggleable.html#/s:8AudioKit12AKToggleablePAAE9isStoppedSbv":{"name":"isStopped","abstract":"<p>Antonym for isStarted</p>","parent_name":"AKToggleable"},"Protocols/AKToggleable.html#/s:8AudioKit12AKToggleablePAAE10isBypassedSbv":{"name":"isBypassed","abstract":"<p>Antonym for isStarted that may make more sense with effects</p>","parent_name":"AKToggleable"},"Protocols/AKToggleable.html#/s:8AudioKit12AKToggleablePAAE4playyyF":{"name":"play()","abstract":"<p>Synonym to start that may more more sense with musical instruments</p>","parent_name":"AKToggleable"},"Protocols/AKToggleable.html#/s:8AudioKit12AKToggleablePAAE6bypassyyF":{"name":"bypass()","abstract":"<p>Synonym for stop that may make more sense with effects</p>","parent_name":"AKToggleable"},"Classes/AKPolyphonicNode.html#/c:@M@AudioKit@objc(cs)AKPolyphonicNode(cpy)tuningTable":{"name":"tuningTable","abstract":"<p>Global tuning table used by AKPolyphonicNode (AKNode classes adopting AKPolyphonic protocol)</p>","parent_name":"AKPolyphonicNode"},"Classes/AKPolyphonicNode.html#/c:@M@AudioKit@objc(cs)AKPolyphonicNode(py)midiInstrument":{"name":"midiInstrument","parent_name":"AKPolyphonicNode"},"Classes/AKPolyphonicNode.html#/c:@M@AudioKit@objc(cs)AKPolyphonicNode(im)playWithNoteNumber:velocity:frequency:":{"name":"play(noteNumber:velocity:frequency:)","abstract":"<p>Play a sound corresponding to a MIDI note with frequency</p>","parent_name":"AKPolyphonicNode"},"Classes/AKPolyphonicNode.html#/c:@M@AudioKit@objc(cs)AKPolyphonicNode(im)playWithNoteNumber:velocity:":{"name":"play(noteNumber:velocity:)","abstract":"<p>Play a sound corresponding to a MIDI note</p>","parent_name":"AKPolyphonicNode"},"Classes/AKPolyphonicNode.html#/c:@M@AudioKit@objc(cs)AKPolyphonicNode(im)stopWithNoteNumber:":{"name":"stop(noteNumber:)","abstract":"<p>Stop a sound corresponding to a MIDI note</p>","parent_name":"AKPolyphonicNode"},"Protocols/AKPolyphonic.html#/s:8AudioKit12AKPolyphonicP4playys5UInt8V10noteNumber_AF8velocitySd9frequencytF":{"name":"play(noteNumber:velocity:frequency:)","abstract":"<p>Play a sound corresponding to a MIDI note</p>","parent_name":"AKPolyphonic"},"Protocols/AKPolyphonic.html#/s:8AudioKit12AKPolyphonicP4playys5UInt8V10noteNumber_AF8velocitytF":{"name":"play(noteNumber:velocity:)","abstract":"<p>Play a sound corresponding to a MIDI note</p>","parent_name":"AKPolyphonic"},"Protocols/AKPolyphonic.html#/s:8AudioKit12AKPolyphonicP4stopys5UInt8V10noteNumber_tF":{"name":"stop(noteNumber:)","abstract":"<p>Stop a sound corresponding to a MIDI note</p>","parent_name":"AKPolyphonic"},"Classes/AKNode.html#/c:@M@AudioKit@objc(cs)AKNode(py)avAudioNode":{"name":"avAudioNode","abstract":"<p>The internal AVAudioEngine AVAudioNode</p>","parent_name":"AKNode"},"Classes/AKNode.html#/c:@M@AudioKit@objc(cs)AKNode(im)init":{"name":"init()","abstract":"<p>Create the node</p>","parent_name":"AKNode"},"Classes/AKNode.html#/c:@M@AudioKit@objc(cs)AKNode(im)initWithAvAudioNode:attach:":{"name":"init(avAudioNode:attach:)","abstract":"<p>Initialize the node</p>","parent_name":"AKNode"},"Classes/AKNode.html#/c:@M@AudioKit@objc(cs)AKNode(im)addConnectionPoint:bus:":{"name":"addConnectionPoint(_:bus:)","abstract":"<p>Connect this node to another</p>","parent_name":"AKNode"},"Classes/AKNode.html#/c:@M@AudioKit@objc(cs)AKNode(im)disconnect":{"name":"disconnect()","abstract":"<p>Disconnect the node</p>","parent_name":"AKNode"},"Classes/AKNode.html#/c:@M@AudioKit@objc(cs)AKNode(im)disconnectWithNodes:":{"name":"disconnect(nodes:)","abstract":"<p>Disconnect an array of nodes</p>","parent_name":"AKNode"},"Classes/AKNode.html":{"name":"AKNode","abstract":"<p>Parent class for all nodes in AudioKit</p>"},"Protocols/AKPolyphonic.html":{"name":"AKPolyphonic","abstract":"<p>Protocol for responding to play and stop of MIDI notes</p>"},"Classes/AKPolyphonicNode.html":{"name":"AKPolyphonicNode","abstract":"<p>Bare bones implementation of AKPolyphonic protocol</p>"},"Protocols/AKToggleable.html":{"name":"AKToggleable","abstract":"<p>Protocol for dictating that a node can be in a started or stopped state</p>"},"Classes/AKOperationGenerator.html":{"name":"AKOperationGenerator","abstract":"<p>Operation-based generator</p>"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC013internalMusicD0s13OpaquePointerVSgv":{"name":"internalMusicTrack","abstract":"<p>The representation of Apple&rsquo;s underlying music track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC09initMusicD0s13OpaquePointerVSgv":{"name":"initMusicTrack","abstract":"<p>A copy of the original track at init</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC9sequencerAA11AKSequencerCv":{"name":"sequencer","abstract":"<p>Sequencer this music track is part of</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC12trackPointerSpys06OpaqueF0VGv":{"name":"trackPointer","abstract":"<p>Pointer to the Music Track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC04initD7PointerSpys06OpaqueF0VGv":{"name":"initTrackPointer","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC10isNotEmptySbv":{"name":"isNotEmpty","abstract":"<p>Nicer function for not empty</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC6lengthSdv":{"name":"length","abstract":"<p>Total duration of the music track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC10initLengthSdv":{"name":"initLength","abstract":"<p>Total duration of the music track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackCACSS4name_tcfc":{"name":"init(name:)","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackCACs13OpaquePointerV05musicD0_SS4nametcfc":{"name":"init(musicTrack:name:)","abstract":"<p>Initialize with a music track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackCACs13OpaquePointerV05musicD0_AA11AKSequencerC9sequencertcfc":{"name":"init(musicTrack:sequencer:)","abstract":"<p>Initialize with a music track and the AKSequence</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC13setNodeOutputys5Int32VF":{"name":"setNodeOutput(_:)","abstract":"<p>Set the Node Output</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC11setLoopInfoyAA10AKDurationV_Si13numberOfLoopstF":{"name":"setLoopInfo(_:numberOfLoops:)","abstract":"<p>Set loop info</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC9setLengthyAA10AKDurationVF":{"name":"setLength(_:)","abstract":"<p>Set length","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC13setLengthSoftyAA10AKDurationVF":{"name":"setLengthSoft(_:)","abstract":"<p>A less destructive and simpler way to set the length</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC5clearyyF":{"name":"clear()","abstract":"<p>Clear all events from the track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC9clearNoteys5UInt8VF":{"name":"clearNote(_:)","abstract":"<p>Clear a specific note</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC7isEmptySbv":{"name":"isEmpty","abstract":"<p>Determine if the sequence is empty</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC10clearRangeyAA10AKDurationV5start_AF8durationtF":{"name":"clearRange(start:duration:)","abstract":"<p>Clear some events from the track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC3addys5UInt8V10noteNumber_AF8velocityAA10AKDurationV8positionAJ8durationAF7channeltF":{"name":"add(noteNumber:velocity:position:duration:channel:)","abstract":"<p>Add Note to sequence</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC13addControllerys5UInt8V_AF5valueAA10AKDurationV8positionAF7channeltF":{"name":"addController(_:value:position:channel:)","abstract":"<p>Add Controller change to sequence</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC8addSysexySays5UInt8VG_AA10AKDurationV8positiontF":{"name":"addSysex(_:position:)","abstract":"<p>Add Sysex message to sequence</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC12addPitchBendySi_AA10AKDurationV8positions5UInt8V7channeltF":{"name":"addPitchBend(_:position:channel:)","abstract":"<p>Add Pitch Bend change to sequence</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC14resetPitchBendyAA10AKDurationV8position_s5UInt8V7channeltF":{"name":"resetPitchBend(position:channel:)","abstract":"<p>Add Pitch Bend reset to sequence</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC14copyAndMergeToyAC05musicD0_tF":{"name":"copyAndMergeTo(musicTrack:)","abstract":"<p>Copy this track to another track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC6copyOfACyF":{"name":"copyOf()","abstract":"<p>Copy this track to another track</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC11resetToInityyF":{"name":"resetToInit()","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC13setMIDIOutputys6UInt32VF":{"name":"setMIDIOutput(_:)","abstract":"<p>Set the MIDI Ouput</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC5debugyyF":{"name":"debug()","abstract":"<p>Debug by showing the track pointer.</p>","parent_name":"AKMusicTrack"},"Classes/AKMusicTrack.html#/s:8AudioKit12AKMusicTrackC09debugInitD0yyF":{"name":"debugInitTrack()","parent_name":"AKMusicTrack"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV5beatsSdv":{"name":"beats","abstract":"<p>Duration in beats</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV10sampleRateSdv":{"name":"sampleRate","abstract":"<p>Samples per second</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV5tempoSdv":{"name":"tempo","abstract":"<p>Tempo in BPM (beats per minute)</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV7samplesSiv":{"name":"samples","abstract":"<p>While samples is the most accurate, they blow up too fast, so using beat as standard</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV7secondsSdv":{"name":"seconds","abstract":"<p>Regular time measurement</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV7minutesSdv":{"name":"minutes","abstract":"<p>Useful for math using tempo in BPM (beats per minute)</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV14musicTimeStampSdv":{"name":"musicTimeStamp","abstract":"<p>Music time stamp for the duration in beats</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationV11descriptionSSv":{"name":"description","abstract":"<p>Pretty printout</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationVACSi7samples_Sd10sampleRateSd5tempotcfc":{"name":"init(samples:sampleRate:tempo:)","abstract":"<p>Initialize with samples</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationVACSd5beats_Sd5tempotcfc":{"name":"init(beats:tempo:)","abstract":"<p>Initialize from a beat perspective</p>","parent_name":"AKDuration"},"Structs/AKDuration.html#/s:8AudioKit10AKDurationVACSd7seconds_Sd10sampleRateSd5tempotcfc":{"name":"init(seconds:sampleRate:tempo:)","abstract":"<p>Initialize from a normal time perspective</p>","parent_name":"AKDuration"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC8sequences13OpaquePointerVSgv":{"name":"sequence","abstract":"<p>Music sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC15sequencePointerSpys06OpaqueE0VGSgv":{"name":"sequencePointer","abstract":"<p>Pointer to Music Sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC6tracksSayAA12AKMusicTrackCGv":{"name":"tracks","abstract":"<p>Array of AudioKit Music Tracks</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC11loopEnabledSbv":{"name":"loopEnabled","abstract":"<p>Loop control</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerCACycfc":{"name":"init()","abstract":"<p>Sequencer Initialization</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerCACSS8filename_tcfc":{"name":"init(filename:)","abstract":"<p>Initialize the sequence with a MIDI file</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC7prerollyyF":{"name":"preroll()","abstract":"<p>Preroll for the music player</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC10toggleLoopyyF":{"name":"toggleLoop()","abstract":"<p>Set loop functionality of entire sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC13enableLoopingyyF":{"name":"enableLooping()","abstract":"<p>Enable looping for all tracks - loops entire sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC13enableLoopingyAA10AKDurationVF":{"name":"enableLooping(_:)","abstract":"<p>Enable looping for all tracks with specified length</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC14disableLoopingyyF":{"name":"disableLooping()","abstract":"<p>Disable looping for all tracks</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC11setLoopInfoyAA10AKDurationV_Si13numberOfLoopstF":{"name":"setLoopInfo(_:numberOfLoops:)","abstract":"<p>Set looping duration and count for all tracks</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC9setLengthyAA10AKDurationVF":{"name":"setLength(_:)","abstract":"<p>Set length of all tracks</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC6lengthAA10AKDurationVv":{"name":"length","abstract":"<p>Length of longest track in the sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC7setRateySdF":{"name":"setRate(_:)","abstract":"<p>Set the rate of the sequencer</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC4rateSdv":{"name":"rate","abstract":"<p>Rate relative to the default tempo (BPM) of the track</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC8setTempoySdF":{"name":"setTempo(_:)","abstract":"<p>Set the tempo of the sequencer</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC15addTempoEventAtySd5tempo_AA10AKDurationV8positiontF":{"name":"addTempoEventAt(tempo:position:)","abstract":"<p>Add a  tempo change to the score</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC5tempoSdv":{"name":"tempo","abstract":"<p>Tempo retrieved from the sequencer</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC8durationAA10AKDurationVSd7seconds_tF":{"name":"duration(seconds:)","abstract":"<p>Convert seconds into AKDuration</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC7secondsSdAA10AKDurationV8duration_tF":{"name":"seconds(duration:)","abstract":"<p>Convert beats into seconds</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC4playyyF":{"name":"play()","abstract":"<p>Play the sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC4stopyyF":{"name":"stop()","abstract":"<p>Stop the sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC6rewindyyF":{"name":"rewind()","abstract":"<p>Rewind the sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC9isPlayingSbv":{"name":"isPlaying","abstract":"<p>Wheter or not the sequencer is currently playing</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC15currentPositionAA10AKDurationVv":{"name":"currentPosition","abstract":"<p>Current Time</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC23currentRelativePositionAA10AKDurationVv":{"name":"currentRelativePosition","abstract":"<p>Current Time relative to sequencer length</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC10trackCountSiv":{"name":"trackCount","abstract":"<p>Track count</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC12loadMIDIFileySSF":{"name":"loadMIDIFile(_:)","abstract":"<p>Load a MIDI file</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC8newTrackAA07AKMusicE0CSgSSF":{"name":"newTrack(_:)","abstract":"<p>Get a new track</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC10clearRangeyAA10AKDurationV5start_AF8durationtF":{"name":"clearRange(start:duration:)","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC7setTimeySdF":{"name":"setTime(_:)","abstract":"<p>Set the music player time directly</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC7genData10Foundation0E0VSgyF":{"name":"genData()","abstract":"<p>Generate NSData from the sequence</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC5debugyyF":{"name":"debug()","abstract":"<p>Print sequence to console</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC19setGlobalMIDIOutputys6UInt32VF":{"name":"setGlobalMIDIOutput(_:)","abstract":"<p>Set the midi output for all tracks</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC24nearestQuantizedPositionAA10AKDurationVSd19quantizationInBeats_tF":{"name":"nearestQuantizedPosition(quantizationInBeats:)","abstract":"<p>Nearest time of quantized beat</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC25previousQuantizedPositionAA10AKDurationVSd19quantizationInBeats_tF":{"name":"previousQuantizedPosition(quantizationInBeats:)","abstract":"<p>The last quantized beat</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html#/s:8AudioKit11AKSequencerC21nextQuantizedPositionAA10AKDurationVSd19quantizationInBeats_tF":{"name":"nextQuantizedPosition(quantizationInBeats:)","abstract":"<p>Next quantized beat</p>","parent_name":"AKSequencer"},"Classes/AKSequencer.html":{"name":"AKSequencer","abstract":"<p>Sequencer based on tried-and-true CoreAudio/MIDI Sequencing</p>"},"Structs/AKDuration.html":{"name":"AKDuration","abstract":"<p>Container for the notion of time in sequencing</p>"},"Classes/AKMusicTrack.html":{"name":"AKMusicTrack","abstract":"<p>Wrapper for internal Apple MusicTrack</p>"},"Classes/AKCallbackInstrument.html#/s:8AudioKit20AKCallbackInstrumentC8callbackyAA12AKMIDIStatusO_s5UInt8VAHtcSgv":{"name":"callback","abstract":"<p>All callbacks that will get triggered by MIDI events</p>","parent_name":"AKCallbackInstrument"},"Classes/AKCallbackInstrument.html#/s:8AudioKit20AKCallbackInstrumentCACyAA12AKMIDIStatusO_s5UInt8VAGtcSg8callback_tcfc":{"name":"init(callback:)","abstract":"<p>Initialize the callback instrument</p>","parent_name":"AKCallbackInstrument"},"Classes/AKCallbackInstrument.html#/c:@M@AudioKit@objc(cs)AKCallbackInstrument(im)startWithNoteNumber:velocity:channel:":{"name":"start(noteNumber:velocity:channel:)","abstract":"<p>Will trigger in response to any noteOn Message</p>","parent_name":"AKCallbackInstrument"},"Classes/AKCallbackInstrument.html#/c:@M@AudioKit@objc(cs)AKCallbackInstrument(im)stopWithNoteNumber:channel:":{"name":"stop(noteNumber:channel:)","abstract":"<p>Will trigger in response to any noteOff Message</p>","parent_name":"AKCallbackInstrument"},"Classes/AKBluetoothMIDIButton.html#/c:@M@AudioKit@objc(cs)AKBluetoothMIDIButton(im)touchesEnded:withEvent:":{"name":"touchesEnded(_:with:)","abstract":"<p>Handle touches</p>","parent_name":"AKBluetoothMIDIButton"},"Extensions/MIDIPacketList.html#/s:s8SequenceP12makeIterator0C0QzyF":{"name":"makeIterator()","parent_name":"MIDIPacketList"},"Extensions/MIDIPacket.html#/s:SC10MIDIPacketV8AudioKitE12makeIterators03AnyE0VyAC11AKMIDIEventVGyF":{"name":"makeIterator()","abstract":"<p>Generate a MIDI packet</p>","parent_name":"MIDIPacket"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO4noneA2CmF":{"name":"none","abstract":"<p>Trivial Case of None</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO5sysexA2CmF":{"name":"sysex","abstract":"<p>System Exclusive</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO12songPositionA2CmF":{"name":"songPosition","abstract":"<p>Song Position</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO10songSelectA2CmF":{"name":"songSelect","abstract":"<p>Song Selection</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO11tuneRequestA2CmF":{"name":"tuneRequest","abstract":"<p>Request Tune</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO8sysexEndA2CmF":{"name":"sysexEnd","abstract":"<p>End System Exclusive</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO5clockA2CmF":{"name":"clock","abstract":"<p>Clock</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO5startA2CmF":{"name":"start","abstract":"<p>Start</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO8continueA2CmF":{"name":"continue","abstract":"<p>Continue</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO4stopA2CmF":{"name":"stop","abstract":"<p>Stop</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO13activeSensingA2CmF":{"name":"activeSensing","abstract":"<p>Active Sensing</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDISystemCommand.html#/s:8AudioKit19AKMIDISystemCommandO8sysResetA2CmF":{"name":"sysReset","abstract":"<p>System Reset</p>","parent_name":"AKMIDISystemCommand"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO7nothingA2CmF":{"name":"nothing","abstract":"<p>Default empty status</p>","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO7noteOffA2CmF":{"name":"noteOff","abstract":"<p>Note off is something resembling a keyboard key release</p>","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO6noteOnA2CmF":{"name":"noteOn","abstract":"<p>Note on is triggered when a new note is created, or a keyboard key press</p>","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO20polyphonicAftertouchA2CmF":{"name":"polyphonicAftertouch","abstract":"<p>Polyphonic aftertouch is a rare MIDI control on controllers in which","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO16controllerChangeA2CmF":{"name":"controllerChange","abstract":"<p>Controller changes represent a wide range of control types including volume,","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO13programChangeA2CmF":{"name":"programChange","abstract":"<p>Program change messages are associated with changing the basic character of the sound preset</p>","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO17channelAftertouchA2CmF":{"name":"channelAftertouch","abstract":"<p>A single aftertouch for all notes on a given channel","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO10pitchWheelA2CmF":{"name":"pitchWheel","abstract":"<p>A pitch wheel is a common keyboard control that allow for a pitch to be","parent_name":"AKMIDIStatus"},"Enums/AKMIDIStatus.html#/s:8AudioKit12AKMIDIStatusO13systemCommandA2CmF":{"name":"systemCommand","abstract":"<p>System commands differ from system to system</p>","parent_name":"AKMIDIStatus"},"Classes/AKMIDISampler.html#/c:@M@AudioKit@objc(cs)AKMIDISampler(py)midiIn":{"name":"midiIn","abstract":"<p>MIDI Input</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/c:@M@AudioKit@objc(cs)AKMIDISampler(py)name":{"name":"name","abstract":"<p>Name of the instrument</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/c:@M@AudioKit@objc(cs)AKMIDISampler(im)init":{"name":"init()","abstract":"<p>Initialize the MIDI Sampler</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/c:@M@AudioKit@objc(cs)AKMIDISampler(im)enableMIDI:name:":{"name":"enableMIDI(_:name:)","abstract":"<p>Enable MIDI input from a given MIDI client","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/c:@M@AudioKit@objc(cs)AKMIDISampler(im)receivedMIDINoteOnNoteNumber:velocity:channel:":{"name":"receivedMIDINoteOn(noteNumber:velocity:channel:)","abstract":"<p>Handle MIDI commands that come in externally</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/c:@M@AudioKit@objc(cs)AKMIDISampler(im)midiCC:value:channel:":{"name":"midiCC(_:value:channel:)","abstract":"<p>Handle MIDI CC that come in externally</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/c:@M@AudioKit@objc(cs)AKMIDISampler(im)playWithNoteNumber:velocity:channel:":{"name":"play(noteNumber:velocity:channel:)","abstract":"<p>Start a note</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/c:@M@AudioKit@objc(cs)AKMIDISampler(im)stopWithNoteNumber:channel:":{"name":"stop(noteNumber:channel:)","abstract":"<p>Stop a note</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDISampler.html#/c:@M@AudioKit@objc(cs)AKMIDISampler(im)destroyEndpoint":{"name":"destroyEndpoint()","abstract":"<p>Discard all virtual ports</p>","parent_name":"AKMIDISampler"},"Classes/AKMIDINode.html#/c:@M@AudioKit@objc(cs)AKMIDINode(py)midiIn":{"name":"midiIn","abstract":"<p>MIDI Input</p>","parent_name":"AKMIDINode"},"Classes/AKMIDINode.html#/c:@M@AudioKit@objc(cs)AKMIDINode(py)name":{"name":"name","abstract":"<p>Name of the instrument</p>","parent_name":"AKMIDINode"},"Classes/AKMIDINode.html#/c:@M@AudioKit@objc(cs)AKMIDINode(im)initWithNode:":{"name":"init(node:)","abstract":"<p>Initialize the MIDI node</p>","parent_name":"AKMIDINode"},"Classes/AKMIDINode.html#/c:@M@AudioKit@objc(cs)AKMIDINode(im)enableMIDI:name:":{"name":"enableMIDI(_:name:)","abstract":"<p>Enable MIDI input from a given MIDI client</p>","parent_name":"AKMIDINode"},"Classes/AKMIDINode.html#/c:@M@AudioKit@objc(cs)AKMIDINode(im)receivedMIDINoteOn:velocity:channel:":{"name":"receivedMIDINoteOn(_:velocity:channel:)","abstract":"<p>Handle MIDI commands that come in externally</p>","parent_name":"AKMIDINode"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP18receivedMIDINoteOnys5UInt8V10noteNumber_AF8velocityAF7channeltF":{"name":"receivedMIDINoteOn(noteNumber:velocity:channel:)","abstract":"<p>Receive the MIDI note on event</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP19receivedMIDINoteOffys5UInt8V10noteNumber_AF8velocityAF7channeltF":{"name":"receivedMIDINoteOff(noteNumber:velocity:channel:)","abstract":"<p>Receive the MIDI note off event</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP22receivedMIDIControllerys5UInt8V_AF5valueAF7channeltF":{"name":"receivedMIDIController(_:value:channel:)","abstract":"<p>Receive a generic controller value</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP22receivedMIDIAftertouchys5UInt8V10noteNumber_AF8pressureAF7channeltF":{"name":"receivedMIDIAftertouch(noteNumber:pressure:channel:)","abstract":"<p>Receive single note based aftertouch event</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP22receivedMIDIAfterTouchys5UInt8V_AF7channeltF":{"name":"receivedMIDIAfterTouch(_:channel:)","abstract":"<p>Receive global aftertouch</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP22receivedMIDIPitchWheelys6UInt16V_s5UInt8V7channeltF":{"name":"receivedMIDIPitchWheel(_:channel:)","abstract":"<p>Receive pitch wheel value</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP25receivedMIDIProgramChangeys5UInt8V_AF7channeltF":{"name":"receivedMIDIProgramChange(_:channel:)","abstract":"<p>Receive program change</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP25receivedMIDISystemCommandySays5UInt8VGF":{"name":"receivedMIDISystemCommand(_:)","abstract":"<p>Receive a MIDI system command (such as clock, sysex, etc)</p>","parent_name":"AKMIDIListener"},"Protocols/AKMIDIListener.html#/s:8AudioKit14AKMIDIListenerP23receivedMIDISetupChangeyyF":{"name":"receivedMIDISetupChange()","abstract":"<p>MIDI Setup has changed</p>","parent_name":"AKMIDIListener"},"Classes/AKMIDIInstrument.html#/c:@M@AudioKit@objc(cs)AKMIDIInstrument(py)midiIn":{"name":"midiIn","abstract":"<p>MIDI Input</p>","parent_name":"AKMIDIInstrument"},"Classes/AKMIDIInstrument.html#/c:@M@AudioKit@objc(cs)AKMIDIInstrument(py)name":{"name":"name","abstract":"<p>Name of the instrument</p>","parent_name":"AKMIDIInstrument"},"Classes/AKMIDIInstrument.html#/c:@M@AudioKit@objc(cs)AKMIDIInstrument(im)init":{"name":"init()","abstract":"<p>Initialize the MIDI Instrument</p>","parent_name":"AKMIDIInstrument"},"Classes/AKMIDIInstrument.html#/c:@M@AudioKit@objc(cs)AKMIDIInstrument(im)enableMIDI:name:":{"name":"enableMIDI(_:name:)","abstract":"<p>Enable MIDI input from a given MIDI client</p>","parent_name":"AKMIDIInstrument"},"Classes/AKMIDIInstrument.html#/c:@M@AudioKit@objc(cs)AKMIDIInstrument(im)receivedMIDINoteOn:velocity:channel:":{"name":"receivedMIDINoteOn(_:velocity:channel:)","abstract":"<p>Handle MIDI commands that come in externally</p>","parent_name":"AKMIDIInstrument"},"Classes/AKMIDIInstrument.html#/c:@M@AudioKit@objc(cs)AKMIDIInstrument(im)receivedMIDINoteOffWithNoteNumber:velocity:channel:":{"name":"receivedMIDINoteOff(noteNumber:velocity:channel:)","abstract":"<p>Handle MIDI commands that come in externally</p>","parent_name":"AKMIDIInstrument"},"Classes/AKMIDIInstrument.html#/c:@M@AudioKit@objc(cs)AKMIDIInstrument(im)startWithNoteNumber:velocity:channel:":{"name":"start(noteNumber:velocity:channel:)","abstract":"<p>Start a note</p>","parent_name":"AKMIDIInstrument"},"Classes/AKMIDIInstrument.html#/c:@M@AudioKit@objc(cs)AKMIDIInstrument(im)stopWithNoteNumber:channel:":{"name":"stop(noteNumber:channel:)","abstract":"<p>Stop a note</p>","parent_name":"AKMIDIInstrument"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO15modulationWheelA2CmF":{"name":"modulationWheel","abstract":"<p>Modulation Control</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO13breathControlA2CmF":{"name":"breathControl","abstract":"<p>Breath Control (in MIDI Saxophones for example)</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO11footControlA2CmF":{"name":"footControl","abstract":"<p>Foot Control</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO10portamentoA2CmF":{"name":"portamento","abstract":"<p>Portamento effect</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO9dataEntryA2CmF":{"name":"dataEntry","abstract":"<p>Data Entry</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO10mainVolumeA2CmF":{"name":"mainVolume","abstract":"<p>Volume (Overall)</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO7balanceA2CmF":{"name":"balance","abstract":"<p>Balance</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO3panA2CmF":{"name":"pan","abstract":"<p>Stereo Panning</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO10expressionA2CmF":{"name":"expression","abstract":"<p>Expression Pedal</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO3lsbA2CmF":{"name":"lsb","abstract":"<p>Least Significant Byte</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO11damperOnOffA2CmF":{"name":"damperOnOff","abstract":"<p>Damper Pedal, also known as Hold or Sustain</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO15portamentoOnOffA2CmF":{"name":"portamentoOnOff","abstract":"<p>Portamento Toggle</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO14sustenutoOnOffA2CmF":{"name":"sustenutoOnOff","abstract":"<p>Sustenuto Toggle</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO14softPedalOnOffA2CmF":{"name":"softPedalOnOff","abstract":"<p>Soft Pedal Toggle</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO13dataEntryPlusA2CmF":{"name":"dataEntryPlus","abstract":"<p>Data Entry Addition</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO14dataEntryMinusA2CmF":{"name":"dataEntryMinus","abstract":"<p>Data Entry Subtraction</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO17localControlOnOffA2CmF":{"name":"localControlOnOff","abstract":"<p>Enable local control</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO11allNotesOffA2CmF":{"name":"allNotesOff","abstract":"<p>MIDI Panic</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO3cc0A2CmF":{"name":"cc0","abstract":"<p>Continuous Controller Number 0</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO3cc3A2CmF":{"name":"cc3","abstract":"<p>Continuous Controller Number 3</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO3cc9A2CmF":{"name":"cc9","abstract":"<p>Continuous Controller Number 9</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc12A2CmF":{"name":"cc12","abstract":"<p>Continuous Controller Number 12</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc13A2CmF":{"name":"cc13","abstract":"<p>Continuous Controller Number 13</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc14A2CmF":{"name":"cc14","abstract":"<p>Continuous Controller Number 14</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc15A2CmF":{"name":"cc15","abstract":"<p>Continuous Controller Number 15</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc16A2CmF":{"name":"cc16","abstract":"<p>Continuous Controller Number 16</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc17A2CmF":{"name":"cc17","abstract":"<p>Continuous Controller Number 17</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc18A2CmF":{"name":"cc18","abstract":"<p>Continuous Controller Number 18</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc19A2CmF":{"name":"cc19","abstract":"<p>Continuous Controller Number 19</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc20A2CmF":{"name":"cc20","abstract":"<p>Continuous Controller Number 20</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc21A2CmF":{"name":"cc21","abstract":"<p>Continuous Controller Number 21</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc22A2CmF":{"name":"cc22","abstract":"<p>Continuous Controller Number 22</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc23A2CmF":{"name":"cc23","abstract":"<p>Continuous Controller Number 23</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc24A2CmF":{"name":"cc24","abstract":"<p>Continuous Controller Number 24</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc25A2CmF":{"name":"cc25","abstract":"<p>Continuous Controller Number 25</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc26A2CmF":{"name":"cc26","abstract":"<p>Continuous Controller Number 26</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc27A2CmF":{"name":"cc27","abstract":"<p>Continuous Controller Number 27</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc28A2CmF":{"name":"cc28","abstract":"<p>Continuous Controller Number 28</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc29A2CmF":{"name":"cc29","abstract":"<p>Continuous Controller Number 29</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc30A2CmF":{"name":"cc30","abstract":"<p>Continuous Controller Number 30</p>","parent_name":"AKMIDIControl"},"Enums/AKMIDIControl.html#/s:8AudioKit13AKMIDIControlO4cc31A2CmF":{"name":"cc31","abstract":"<p>Continuous Controller Number 31</p>","parent_name":"AKMIDIControl"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV12internalDataSays5UInt8VGv":{"name":"internalData","abstract":"<p>Internal data</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV6statusAA12AKMIDIStatusOSgv":{"name":"status","abstract":"<p>Status</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV7commandAA19AKMIDISystemCommandOSgv":{"name":"command","abstract":"<p>System Command</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV7channels5UInt8VSgv":{"name":"channel","abstract":"<p>MIDI Channel</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV10noteNumbers5UInt8VSgv":{"name":"noteNumber","abstract":"<p>MIDI Note Number</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV5data1s5UInt8Vv":{"name":"data1","abstract":"<p>First data byte</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV5data2s5UInt8Vv":{"name":"data2","abstract":"<p>Second data byte</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventVACSC10MIDIPacketV6packet_tcfc":{"name":"init(packet:)","abstract":"<p>Initialize the MIDI Event from a MIDI Packet</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV12generateFromSayACGSays5UInt8VG13bluetoothData_tFZ":{"name":"generateFrom(bluetoothData:)","abstract":"<p>Generate array of MIDI events from Bluetooth data</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventVACs5UInt8V6noteOn_AE8velocityAE7channeltcfc":{"name":"init(noteOn:velocity:channel:)","abstract":"<p>Create note on event</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventVACs5UInt8V7noteOff_AE8velocityAE7channeltcfc":{"name":"init(noteOff:velocity:channel:)","abstract":"<p>Create note off event</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventVACs5UInt8V13programChange_AE7channeltcfc":{"name":"init(programChange:channel:)","abstract":"<p>Create program change event</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventVACs5UInt8V16controllerChange_AE5valueAE7channeltcfc":{"name":"init(controllerChange:value:channel:)","abstract":"<p>Create controller event</p>","parent_name":"AKMIDIEvent"},"Structs/AKMIDIEvent.html#/s:8AudioKit11AKMIDIEventV14midiEventsFromSayACGSPySC14MIDIPacketListVG06packetH7Pointer_tFZ":{"name":"midiEventsFrom(packetListPointer:)","abstract":"<p>Array of MIDI events from a MIDI packet list poionter</p>","parent_name":"AKMIDIEvent"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC6clients6UInt32Vv":{"name":"client","abstract":"<p>MIDI Client Reference</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC12virtualInputs6UInt32Vv":{"name":"virtualInput","abstract":"<p>Virtual MIDI Input destination</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC13virtualOutputs6UInt32Vv":{"name":"virtualOutput","abstract":"<p>Virtual MIDI output</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC9endpointss10DictionaryVySSs6UInt32VGv":{"name":"endpoints","abstract":"<p>Array of MIDI Endpoints</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDICACycfc":{"name":"init()","abstract":"<p>Initialize the AKMIDI system</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC18createVirtualPortsys5Int32V_SSSg4nametF":{"name":"createVirtualPorts(_:name:)","abstract":"<p>Create set of virtual MIDI ports</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC22createVirtualInputPortys5Int32V_SSSg4nametF":{"name":"createVirtualInputPort(_:name:)","abstract":"<p>Create a virtual MIDI input port</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC23createVirtualOutputPortys5Int32V_SSSg4nametF":{"name":"createVirtualOutputPort(_:name:)","abstract":"<p>Create a virtual MIDI output port</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC19destroyVirtualPortsyyF":{"name":"destroyVirtualPorts()","abstract":"<p>Discard all virtual ports</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC16destinationInfosSayAA12EndpointInfoVGv":{"name":"destinationInfos","abstract":"<p>Destinations</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC10inputInfosSayAA12EndpointInfoVGv":{"name":"inputInfos","abstract":"<p>Inputs</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC10inputNamesSaySSGv":{"name":"inputNames","abstract":"<p>Array of input names</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC11addListeneryAA14AKMIDIListener_pF":{"name":"addListener(_:)","abstract":"<p>Add a listener to the listeners</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC14clearListenersyyF":{"name":"clearListeners()","abstract":"<p>Remove all listeners</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC14addTransformeryAA17AKMIDITransformer_pF":{"name":"addTransformer(_:)","abstract":"<p>Add a transformer to the transformers list</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC17clearTransformersyyF":{"name":"clearTransformers()","abstract":"<p>Remove all transformers</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC9openInputySSF":{"name":"openInput(_:)","abstract":"<p>Open a MIDI Input port</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC10closeInputySSF":{"name":"closeInput(_:)","abstract":"<p>Close a MIDI Input port</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC14closeAllInputsyyF":{"name":"closeAllInputs()","abstract":"<p>Close all MIDI Input ports</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC16destinationNamesSaySSGv":{"name":"destinationNames","abstract":"<p>Array of destination names</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC10openOutputySSSgF":{"name":"openOutput(_:)","abstract":"<p>Open a MIDI Output Port</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC11sendMessageySays5UInt8VGF":{"name":"sendMessage(_:)","abstract":"<p>Send Message with data</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC14clearEndpointsyyF":{"name":"clearEndpoints()","abstract":"<p>Clear MIDI destinations</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC9sendEventyAA11AKMIDIEventVF":{"name":"sendEvent(_:)","abstract":"<p>Send Messsage from MIDI event data</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC17sendNoteOnMessageys5UInt8V10noteNumber_AF8velocityAF7channeltF":{"name":"sendNoteOnMessage(noteNumber:velocity:channel:)","abstract":"<p>Send a Note On Message</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC18sendNoteOffMessageys5UInt8V10noteNumber_AF8velocityAF7channeltF":{"name":"sendNoteOffMessage(noteNumber:velocity:channel:)","abstract":"<p>Send a Note Off Message</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html#/s:8AudioKit6AKMIDIC21sendControllerMessageys5UInt8V_AF5valueAF7channeltF":{"name":"sendControllerMessage(_:value:channel:)","abstract":"<p>Send a Continuous Controller message</p>","parent_name":"AKMIDI"},"Classes/AKMIDI.html":{"name":"AKMIDI","abstract":"<p>MIDI input and output handler</p>"},"Structs/AKMIDIEvent.html":{"name":"AKMIDIEvent","abstract":"<p>A container for the values that define a MIDI event</p>"},"Enums/AKMIDIControl.html":{"name":"AKMIDIControl","abstract":"<p>Value of byte 2 in conjunction with AKMIDIStatusControllerChange</p>"},"Classes/AKMIDIInstrument.html":{"name":"AKMIDIInstrument","abstract":"<p>A version of AKInstrument specifically targeted to instruments that"},"Protocols/AKMIDIListener.html":{"name":"AKMIDIListener","abstract":"<p>Protocol that must be adhered to if you want your class to respond to MIDI</p>"},"Classes/AKMIDINode.html":{"name":"AKMIDINode","abstract":"<p>A version of AKInstrument specifically targeted to instruments that"},"Classes/AKMIDISampler.html":{"name":"AKMIDISampler","abstract":"<p>MIDI receiving Sampler</p>"},"Enums/AKMIDIStatus.html":{"name":"AKMIDIStatus","abstract":"<p>Potential MIDI Status messages</p>"},"Enums/AKMIDISystemCommand.html":{"name":"AKMIDISystemCommand","abstract":"<p>MIDI System Command</p>"},"Extensions/MIDIPacket.html":{"name":"MIDIPacket","abstract":"<p>Allows a MIDIPacket to be iterated through with a for statement."},"Extensions/MIDIPacketList.html":{"name":"MIDIPacketList"},"Classes/AKBluetoothMIDIButton.html":{"name":"AKBluetoothMIDIButton","abstract":"<p>A button that will pull up a Bluetooth MIDI menu</p>"},"Classes/AKCallbackInstrument.html":{"name":"AKCallbackInstrument","abstract":"<p>MIDI Instrument that triggers functions on MIDI note on/off commands</p>"},"Classes/AKTuningTable.html#/s:8AudioKit13AKTuningTableC9Frequencya":{"name":"Frequency","abstract":"<p>For clarity, typealias Frequency as a Double</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(cpy)midiNoteCount":{"name":"midiNoteCount","abstract":"<p>Total number of MIDI Notes available to play</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(py)middleCNoteNumber":{"name":"middleCNoteNumber","abstract":"<p>Note number for standard reference note</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(py)middleCFrequency":{"name":"middleCFrequency","abstract":"<p>Frequency of standard reference note","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(py)middleCOctave":{"name":"middleCOctave","abstract":"<p>Octave number for standard reference note.  Can be negative","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(im)init":{"name":"init()","abstract":"<p>Initialization for standard default 12 tone equal temperament</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(im)frequencyForNoteNumber:":{"name":"frequency(forNoteNumber:)","abstract":"<p>Pull out frequency information for a given note number</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(im)setFrequency:at:":{"name":"setFrequency(_:at:)","abstract":"<p>Set frequency of a given note number</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@M@AudioKit@objc(cs)AKTuningTable(im)tuningTableFromFrequencies:":{"name":"tuningTable(fromFrequencies:)","abstract":"<p>Create the tuning using the input frequencies</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)defaultTuning":{"name":"defaultTuning()","abstract":"<p>Default tuning table is 12ET.</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)twelveToneEqualTemperament":{"name":"twelveToneEqualTemperament()","abstract":"<p>Create 12-tone equal temperament</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)thirtyOneEqualTemperament":{"name":"thirtyOneEqualTemperament()","abstract":"<p>Create 31-tone equal temperament</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)equalTemperamentWithNotesPerOctave:":{"name":"equalTemperament(notesPerOctave:)","abstract":"<p>Create an equal temperament with notesPerOctave</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)hexany::::":{"name":"hexany(_:_:_:_:)","abstract":"<p>Create a hexany from 4 frequencies (4 choose 2)</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)majorTetrany::::":{"name":"majorTetrany(_:_:_:_:)","abstract":"<p>Create a major tetrany from 4 frequencies (4 choose 1)</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)minorTetrany::::":{"name":"minorTetrany(_:_:_:_:)","abstract":"<p>Create a hexany from 4 frequencies (4 choose 3)</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)khiasmos22Indian":{"name":"khiasmos22Indian()","abstract":"<p>Set tuning to 22 Indian Scale.","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian00_17":{"name":"presetPersian17NorthIndian00_17()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian01Kalyan":{"name":"presetPersian17NorthIndian01Kalyan()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian02Bilawal":{"name":"presetPersian17NorthIndian02Bilawal()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian03Khamaj":{"name":"presetPersian17NorthIndian03Khamaj()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian04KafiOld":{"name":"presetPersian17NorthIndian04KafiOld()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian05Kafi":{"name":"presetPersian17NorthIndian05Kafi()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian06Asawari":{"name":"presetPersian17NorthIndian06Asawari()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian07Bhairavi":{"name":"presetPersian17NorthIndian07Bhairavi()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian08Marwa":{"name":"presetPersian17NorthIndian08Marwa()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian09Purvi":{"name":"presetPersian17NorthIndian09Purvi()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian10Lalit2":{"name":"presetPersian17NorthIndian10Lalit2()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian11Todi":{"name":"presetPersian17NorthIndian11Todi()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian12Lalit":{"name":"presetPersian17NorthIndian12Lalit()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian13NoName":{"name":"presetPersian17NorthIndian13NoName()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian14AnandBhairav":{"name":"presetPersian17NorthIndian14AnandBhairav()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian15Bhairav":{"name":"presetPersian17NorthIndian15Bhairav()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian16JogiyaTodi":{"name":"presetPersian17NorthIndian16JogiyaTodi()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian17Madhubanti":{"name":"presetPersian17NorthIndian17Madhubanti()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian18NatBhairav":{"name":"presetPersian17NorthIndian18NatBhairav()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian19AhirBhairav":{"name":"presetPersian17NorthIndian19AhirBhairav()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian20ChandraKanada":{"name":"presetPersian17NorthIndian20ChandraKanada()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian21BasantMukhari":{"name":"presetPersian17NorthIndian21BasantMukhari()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian22Champakali":{"name":"presetPersian17NorthIndian22Champakali()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian23Patdeep":{"name":"presetPersian17NorthIndian23Patdeep()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian24MohanKauns":{"name":"presetPersian17NorthIndian24MohanKauns()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetPersian17NorthIndian25Parameswari":{"name":"presetPersian17NorthIndian25Parameswari()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetRecurrenceRelation01":{"name":"presetRecurrenceRelation01()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetHighlandBagPipes":{"name":"presetHighlandBagPipes()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)presetDiaphonicTetrachord":{"name":"presetDiaphonicTetrachord()","abstract":"<p>From Erv Wilson.  See <a href=\"http://anaphoria.com/genus.pdf\">http://anaphoria.com/genus.pdf</a></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)momentOfSymmetryWithGenerator:level:murchana:":{"name":"momentOfSymmetry(generator:level:murchana:)","abstract":"<p>Creates a <q>Nested 2-interval pattern</q>, or <q>Moment of Symmetry</q></p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)scalaFile:":{"name":"scalaFile(_:)","abstract":"<p>Use a Scala file to write the tuning table</p>","parent_name":"AKTuningTable"},"Classes/AKTuningTable.html#/c:@CM@AudioKit@objc(cs)AKTuningTable(im)frequenciesFromScalaString:":{"name":"frequencies(fromScalaString:)","abstract":"<p>Get frequencies from a Scala string</p>","parent_name":"AKTuningTable"},"Classes/AKTester.html#/c:@M@AudioKit@objc(cs)AKTester(cpy)ComponentDescription":{"name":"ComponentDescription","abstract":"<p>Four letter unique description of the node</p>","parent_name":"AKTester"},"Classes/AKTester.html#/c:@M@AudioKit@objc(cs)AKTester(py)MD5":{"name":"MD5","abstract":"<p>Calculate the MD5</p>","parent_name":"AKTester"},"Classes/AKTester.html#/c:@M@AudioKit@objc(cs)AKTester(py)isStarted":{"name":"isStarted","abstract":"<p>Flag on whether or not the test is still in progress</p>","parent_name":"AKTester"},"Classes/AKTester.html#/c:@M@AudioKit@objc(cs)AKTester(im)init:samples:":{"name":"init(_:samples:)","abstract":"<p>Initialize this test node</p>","parent_name":"AKTester"},"Classes/AKTester.html#/c:@M@AudioKit@objc(cs)AKTester(im)start":{"name":"start()","abstract":"<p>Function to start, play, or activate the node, all do the same thing</p>","parent_name":"AKTester"},"Classes/AKTester.html#/c:@M@AudioKit@objc(cs)AKTester(im)stop":{"name":"stop()","abstract":"<p>Function to stop or bypass the node, both are equivalent</p>","parent_name":"AKTester"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypeSine":{"name":"sine","abstract":"<p>Standard sine waveform</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypeTriangle":{"name":"triangle","abstract":"<p>Standard triangle waveform</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypeSquare":{"name":"square","abstract":"<p>Standard square waveform</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypeSawtooth":{"name":"sawtooth","abstract":"<p>Standard sawtooth waveform</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypeReverseSawtooth":{"name":"reverseSawtooth","abstract":"<p>Reversed sawtooth waveform</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypePositiveSine":{"name":"positiveSine","abstract":"<p>Sine wave from 0-1</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypePositiveTriangle":{"name":"positiveTriangle","abstract":"<p>Triangle waveform from 0-1</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypePositiveSquare":{"name":"positiveSquare","abstract":"<p>Square waveform from 0-1</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypePositiveSawtooth":{"name":"positiveSawtooth","abstract":"<p>Sawtooth waveform from 0-1</p>","parent_name":"AKTableType"},"Enums/AKTableType.html#/c:@M@AudioKit@E@AKTableType@AKTableTypePositiveReverseSawtooth":{"name":"positiveReverseSawtooth","abstract":"<p>Reversed sawtooth waveform from 0-1</p>","parent_name":"AKTableType"},"Classes/AKTable.html#/c:@M@AudioKit@objc(cs)AKTable(py)phase":{"name":"phase","abstract":"<p>Phase of the table</p>","parent_name":"AKTable"},"Classes/AKTable.html#/s:s17_MutableIndexableP10startIndex0D0Qzv":{"name":"startIndex","parent_name":"AKTable"},"Classes/AKTable.html#/s:s17_MutableIndexableP8endIndex0D0Qzv":{"name":"endIndex","parent_name":"AKTable"},"Classes/AKTable.html#/s:s10CollectionP5count13IndexDistanceQzv":{"name":"count","parent_name":"AKTable"},"Classes/AKTable.html#/c:@M@AudioKit@objc(cs)AKTable(im)init:phase:count:":{"name":"init(_:phase:count:)","abstract":"<p>Initialize and set up the default table</p>","parent_name":"AKTable"},"Classes/AKTable.html#/c:@M@AudioKit@objc(cs)AKTable(im)initWithFile:":{"name":"init(file:)","abstract":"<p>Create table from audio file</p>","parent_name":"AKTable"},"Classes/AKTable.html#/c:@M@AudioKit@objc(cs)AKTable(py)phaseOffset":{"name":"phaseOffset","abstract":"<p>Offset of the phase</p>","parent_name":"AKTable"},"Classes/AKTable.html#/s:s23BidirectionalCollectionP5index5IndexQzAE6before_tF":{"name":"index(before:)","parent_name":"AKTable"},"Classes/AKTable.html#/s:s17_MutableIndexableP5index5IndexQzAE5after_tF":{"name":"index(after:)","parent_name":"AKTable"},"Classes/AKTable.html#/s:s10CollectionP5index5IndexQzAE_0C8DistanceQz8offsetBytF":{"name":"index(_:offsetBy:)","parent_name":"AKTable"},"Classes/AKTable.html#/s:s17_MutableIndexableP9formIndexy0D0Qzz5after_tF":{"name":"formIndex(after:)","parent_name":"AKTable"},"Classes/AKTable.html#/s:s10CollectionP8distance13IndexDistanceQz0C0Qz4from_AG2totF":{"name":"distance(from:to:)","parent_name":"AKTable"},"Classes/AKSettings/SessionCategory.html#/s:8AudioKit10AKSettingsC15SessionCategoryO7ambientA2EmF":{"name":"ambient","abstract":"<p>Audio silenced by silent switch and screen lock - audio is mixable</p>","parent_name":"SessionCategory"},"Classes/AKSettings/SessionCategory.html#/s:8AudioKit10AKSettingsC15SessionCategoryO11soloAmbientA2EmF":{"name":"soloAmbient","abstract":"<p>Audio is silenced by silent switch and screen lock - audio is non mixable</p>","parent_name":"SessionCategory"},"Classes/AKSettings/SessionCategory.html#/s:8AudioKit10AKSettingsC15SessionCategoryO8playbackA2EmF":{"name":"playback","abstract":"<p>Audio is not silenced by silent switch and screen lock - audio is non mixable</p>","parent_name":"SessionCategory"},"Classes/AKSettings/SessionCategory.html#/s:8AudioKit10AKSettingsC15SessionCategoryO6recordA2EmF":{"name":"record","abstract":"<p>Silences playback audio</p>","parent_name":"SessionCategory"},"Classes/AKSettings/SessionCategory.html#/s:8AudioKit10AKSettingsC15SessionCategoryO13playAndRecordA2EmF":{"name":"playAndRecord","abstract":"<p>Audio is not silenced by silent switch and screen lock - audio is non mixable.","parent_name":"SessionCategory"},"Classes/AKSettings/SessionCategory.html#/s:8AudioKit10AKSettingsC15SessionCategoryO15audioProcessingA2EmF":{"name":"audioProcessing","abstract":"<p>Disables playback and recording</p>","parent_name":"SessionCategory"},"Classes/AKSettings/SessionCategory.html#/s:8AudioKit10AKSettingsC15SessionCategoryO10multiRouteA2EmF":{"name":"multiRoute","abstract":"<p>Use to multi-route audio. May be used on input, output, or both.</p>","parent_name":"SessionCategory"},"Classes/AKSettings/SessionCategory.html#/s:s23CustomStringConvertibleP11descriptionSSv":{"name":"description","parent_name":"SessionCategory"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO8shortestA2EmF":{"name":"shortest","abstract":"<p>Shortest</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO9veryShortA2EmF":{"name":"veryShort","abstract":"<p>Very Short</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO5shortA2EmF":{"name":"short","abstract":"<p>Short</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO6mediumA2EmF":{"name":"medium","abstract":"<p>Medium</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO4longA2EmF":{"name":"long","abstract":"<p>Long</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO8veryLongA2EmF":{"name":"veryLong","abstract":"<p>Very Long</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO4hugeA2EmF":{"name":"huge","abstract":"<p>Huge</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html#/s:8AudioKit10AKSettingsC12BufferLengthO7longestA2EmF":{"name":"longest","abstract":"<p>Longest</p>","parent_name":"BufferLength"},"Classes/AKSettings/BufferLength.html":{"name":"BufferLength","abstract":"<p>Enum of available buffer lengths","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)sampleRate":{"name":"sampleRate","abstract":"<p>The sample rate in Hertz</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)numberOfChannels":{"name":"numberOfChannels","abstract":"<p>Number of audio channels: 2 for stereo, 1 for mono</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)audioInputEnabled":{"name":"audioInputEnabled","abstract":"<p>Whether we should be listening to audio input (microphone)</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)playbackWhileMuted":{"name":"playbackWhileMuted","abstract":"<p>Whether to allow audio playback to override the mute setting</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)audioFormat":{"name":"audioFormat","abstract":"<p>Global audio format AudioKit will default to</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)defaultToSpeaker":{"name":"defaultToSpeaker","abstract":"<p>Whether to output to the speaker (rather than receiver) when audio input is enabled</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)useBluetooth":{"name":"useBluetooth","abstract":"<p>Whether to use bluetooth when audio input is enabled</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)bluetoothOptions":{"name":"bluetoothOptions","abstract":"<p>Additional control over the options to use for bluetooth</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)allowAirPlay":{"name":"allowAirPlay","abstract":"<p>Whether AirPlay is enabled when audio input is enabled</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)rampTime":{"name":"rampTime","abstract":"<p>Global default rampTime value</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)notificationsEnabled":{"name":"notificationsEnabled","abstract":"<p>Allows AudioKit to send Notifications</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)bufferLength":{"name":"bufferLength","abstract":"<p>AudioKit buffer length is set using AKSettings.BufferLength","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)recordingBufferLength":{"name":"recordingBufferLength","abstract":"<p>AudioKit recording buffer length is set using AKSettings.BufferLength","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)fixTruncatedRecordings":{"name":"fixTruncatedRecordings","abstract":"<p>If set to true, Recording will stop after some delay to compensate","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)disableAVAudioSessionCategoryManagement":{"name":"disableAVAudioSessionCategoryManagement","abstract":"<p>Enable AudioKit AVAudioSession Category Management</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)enableRouteChangeHandling":{"name":"enableRouteChangeHandling","abstract":"<p>If set to false, AudioKit will not handle the AVAudioSession route change","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)enableCategoryChangeHandling":{"name":"enableCategoryChangeHandling","abstract":"<p>If set to false, AudioKit will not handle the AVAudioSession category change","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)enableLogging":{"name":"enableLogging","abstract":"<p>Turn off AudioKit logging</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@M@AudioKit@objc(cs)AKSettings(cpy)appSupportsBackgroundAudio":{"name":"appSupportsBackgroundAudio","abstract":"<p>Checks the application&rsquo;s info.plist to see if UIBackgroundModes includes <q>audio</q>.","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@CM@AudioKit@objc(cs)AKSettings(cpy)session":{"name":"session","abstract":"<p>Shortcut for AVAudioSession.sharedInstance()</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@CM@AudioKit@objc(cs)AKSettings(cm)setSessionWithCategory:options:error:":{"name":"setSession(category:options:)","abstract":"<p>Convenience method accessible from Objective-C</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@CM@AudioKit@objc(cs)AKSettings(cm)setSessionWithCategory:with:error:":{"name":"setSession(category:with:)","abstract":"<p>Set the audio session type</p>","parent_name":"AKSettings"},"Classes/AKSettings.html#/c:@CM@AudioKit@objc(cs)AKSettings(cpy)headPhonesPlugged":{"name":"headPhonesPlugged","abstract":"<p>Checks if headphones are plugged","parent_name":"AKSettings"},"Classes/AKSettings/SessionCategory.html":{"name":"SessionCategory","abstract":"<p>Enum of available AVAudioSession Categories</p>","parent_name":"AKSettings"},"Classes/AKPeriodicFunction.html#/c:@M@AudioKit@objc(cs)AKPeriodicFunction(im)initWithEvery:handler:":{"name":"init(every:handler:)","abstract":"<p>Repeat this loop at a given period with a code block</p>","parent_name":"AKPeriodicFunction"},"Classes/AKPeriodicFunction.html#/c:@M@AudioKit@objc(cs)AKPeriodicFunction(im)initWithFrequency:handler:":{"name":"init(frequency:handler:)","abstract":"<p>Repeat this loop at a given frequency with a code block</p>","parent_name":"AKPeriodicFunction"},"Classes/AKNodeRecorder.html#/c:@M@AudioKit@objc(cs)AKNodeRecorder(py)isRecording":{"name":"isRecording","abstract":"<p>True if we are recording.</p>","parent_name":"AKNodeRecorder"},"Classes/AKNodeRecorder.html#/c:@M@AudioKit@objc(cs)AKNodeRecorder(py)durationToRecord":{"name":"durationToRecord","abstract":"<p>An optional duration for the recording to auto-stop when reached</p>","parent_name":"AKNodeRecorder"},"Classes/AKNodeRecorder.html#/c:@M@AudioKit@objc(cs)AKNodeRecorder(py)recordedDuration":{"name":"recordedDuration","abstract":"<p>Duration of recording</p>","parent_name":"AKNodeRecorder"},"Classes/AKNodeRecorder.html#/c:@M@AudioKit@objc(cs)AKNodeRecorder(py)audioFile":{"name":"audioFile","abstract":"<p>return the AKAudioFile for reading</p>","parent_name":"AKNodeRecorder"},"Classes/AKNodeRecorder.html#/c:@M@AudioKit@objc(cs)AKNodeRecorder(im)initWithNode:file:error:":{"name":"init(node:file:)","abstract":"<p>Initialize the node recorder</p>","parent_name":"AKNodeRecorder"},"Classes/AKNodeRecorder.html#/c:@M@AudioKit@objc(cs)AKNodeRecorder(im)recordAndReturnError:":{"name":"record()","abstract":"<p>Start recording</p>","parent_name":"AKNodeRecorder"},"Classes/AKNodeRecorder.html#/c:@M@AudioKit@objc(cs)AKNodeRecorder(im)stop":{"name":"stop()","abstract":"<p>Stop recording</p>","parent_name":"AKNodeRecorder"},"Classes/AKNodeRecorder.html#/c:@M@AudioKit@objc(cs)AKNodeRecorder(im)resetAndReturnError:":{"name":"reset()","abstract":"<p>Reset the AKAudioFile to clear previous recordings</p>","parent_name":"AKNodeRecorder"},"Classes/AKMicrophoneTracker.html#/s:8AudioKit19AKMicrophoneTrackerC9amplitudeSdv":{"name":"amplitude","abstract":"<p>Tracked amplitude</p>","parent_name":"AKMicrophoneTracker"},"Classes/AKMicrophoneTracker.html#/s:8AudioKit19AKMicrophoneTrackerC9frequencySdv":{"name":"frequency","abstract":"<p>Tracked frquency</p>","parent_name":"AKMicrophoneTracker"},"Classes/AKMicrophoneTracker.html#/s:8AudioKit19AKMicrophoneTrackerC5startyyF":{"name":"start()","abstract":"<p>Start the analysis</p>","parent_name":"AKMicrophoneTracker"},"Classes/AKMicrophoneTracker.html#/s:8AudioKit19AKMicrophoneTrackerC4stopyyF":{"name":"stop()","abstract":"<p>Stop the analysis</p>","parent_name":"AKMicrophoneTracker"},"Classes/AKMicrophoneTracker.html#/s:8AudioKit19AKMicrophoneTrackerCACycfc":{"name":"init()","abstract":"<p>Initialize the tracker</p>","parent_name":"AKMicrophoneTracker"},"Classes/AKDevice.html#/c:@M@AudioKit@objc(cs)AKDevice(py)name":{"name":"name","abstract":"<p>The human-readable name for the device.</p>","parent_name":"AKDevice"},"Classes/AKDevice.html#/c:@M@AudioKit@objc(cs)AKDevice(py)deviceID":{"name":"deviceID","abstract":"<p>The device identifier.</p>","parent_name":"AKDevice"},"Classes/AKDevice.html#/c:@M@AudioKit@objc(cs)AKDevice(im)initWithName:deviceID:dataSource:":{"name":"init(name:deviceID:dataSource:)","abstract":"<p>Initialize the device</p>","parent_name":"AKDevice"},"Classes/AKDevice.html#/c:@M@AudioKit@objc(cs)AKDevice(py)description":{"name":"description","abstract":"<p>Printable device description</p>","parent_name":"AKDevice"},"Classes/AKCustomUgen.html#/c:@M@AudioKit@objc(cs)AKCustomUgen(py)name":{"name":"name","abstract":"<p>Name of the Ugen</p>","parent_name":"AKCustomUgen"},"Classes/AKCustomUgen.html#/c:@M@AudioKit@objc(cs)AKCustomUgen(py)argTypes":{"name":"argTypes","abstract":"<p>String describing the arugments: f for float / s for string, e.g. <q>fsf</q></p>","parent_name":"AKCustomUgen"},"Classes/AKCustomUgen.html#/c:@M@AudioKit@objc(cs)AKCustomUgen(py)userData":{"name":"userData","abstract":"<p>Custom object that may be passed in</p>","parent_name":"AKCustomUgen"},"Classes/AKCustomUgen.html#/s:8AudioKit12AKCustomUgenC15computeFunctionyAC_So13AKSporthStackCypSgztcv":{"name":"computeFunction","abstract":"<p>Callback / Closure / Function to be called</p>","parent_name":"AKCustomUgen"},"Classes/AKCustomUgen.html#/c:@M@AudioKit@objc(cs)AKCustomUgen(py)stack":{"name":"stack","abstract":"<p>The sporth stack</p>","parent_name":"AKCustomUgen"},"Classes/AKCustomUgen.html#/s:8AudioKit12AKCustomUgenCACSS4name_SS8argTypesypSg8userDatayAC_So13AKSporthStackCAFztc15computeFunctiontcfc":{"name":"init(name:argTypes:userData:computeFunction:)","abstract":"<p>Initialize the custom unit generator</p>","parent_name":"AKCustomUgen"},"Classes/AKCustomUgen.html#/c:@M@AudioKit@objc(cs)AKCustomUgen(im)duplicate":{"name":"duplicate()","abstract":"<p>Duplicate the Ugen</p>","parent_name":"AKCustomUgen"},"Classes/AKCustomUgen.html#/c:@M@AudioKit@objc(cs)AKCustomUgen(py)callComputeFunction":{"name":"callComputeFunction","abstract":"<p>Executre the compute function</p>","parent_name":"AKCustomUgen"},"Classes/AKAudioFile/ExportFormat.html#/s:8AudioKit11AKAudioFileC12ExportFormatO3wavA2EmF":{"name":"wav","abstract":"<p>Waveform Audio File Format (WAVE, or more commonly known as WAV due to its filename extension)</p>","parent_name":"ExportFormat"},"Classes/AKAudioFile/ExportFormat.html#/s:8AudioKit11AKAudioFileC12ExportFormatO3aifA2EmF":{"name":"aif","abstract":"<p>Audio Interchange File Format</p>","parent_name":"ExportFormat"},"Classes/AKAudioFile/ExportFormat.html#/s:8AudioKit11AKAudioFileC12ExportFormatO3mp4A2EmF":{"name":"mp4","abstract":"<p>MPEG-4 Part 14 Compression</p>","parent_name":"ExportFormat"},"Classes/AKAudioFile/ExportFormat.html#/s:8AudioKit11AKAudioFileC12ExportFormatO3m4aA2EmF":{"name":"m4a","abstract":"<p>MPEG 4 Audio</p>","parent_name":"ExportFormat"},"Classes/AKAudioFile/ExportFormat.html#/s:8AudioKit11AKAudioFileC12ExportFormatO3cafA2EmF":{"name":"caf","abstract":"<p>Core Audio Format</p>","parent_name":"ExportFormat"},"Classes/AKAudioFile/BaseDirectory.html#/s:8AudioKit11AKAudioFileC13BaseDirectoryO4tempA2EmF":{"name":"temp","abstract":"<p>Temporary directory</p>","parent_name":"BaseDirectory"},"Classes/AKAudioFile/BaseDirectory.html#/s:8AudioKit11AKAudioFileC13BaseDirectoryO9documentsA2EmF":{"name":"documents","abstract":"<p>Documents directory</p>","parent_name":"BaseDirectory"},"Classes/AKAudioFile/BaseDirectory.html#/s:8AudioKit11AKAudioFileC13BaseDirectoryO9resourcesA2EmF":{"name":"resources","abstract":"<p>Resources directory</p>","parent_name":"BaseDirectory"},"Classes/AKAudioFile/BaseDirectory.html#/s:8AudioKit11AKAudioFileC13BaseDirectoryO6customA2EmF":{"name":"custom","abstract":"<p>Same directory as the input file</p>","parent_name":"BaseDirectory"},"Classes/AKAudioFile/BaseDirectory.html":{"name":"BaseDirectory","abstract":"<p>Common places for files</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@M@AudioKit@objc(cs)AKAudioFile(py)avAsset":{"name":"avAsset","abstract":"<p>Returns an AVAsset from the AKAudioFile</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@M@AudioKit@objc(cs)AKAudioFile(py)floatChannelData":{"name":"floatChannelData","abstract":"<p>Returns audio data as an <code>Array</code> of <code>Float</code> Arrays.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@M@AudioKit@objc(cs)AKAudioFile(py)pcmBuffer":{"name":"pcmBuffer","abstract":"<p>returns audio data as an AVAudioPCMBuffer</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@M@AudioKit@objc(cs)AKAudioFile(py)maxLevel":{"name":"maxLevel","abstract":"<p>returns the peak level expressed in dB ( -&gt; Float).</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@M@AudioKit@objc(cs)AKAudioFile(im)initForReading:error:":{"name":"init(forReading:)","abstract":"<p>Initialize the audio file</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@M@AudioKit@objc(cs)AKAudioFile(im)initForReading:commonFormat:interleaved:error:":{"name":"init(forReading:commonFormat:interleaved:)","abstract":"<p>Initialize the audio file</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@M@AudioKit@objc(cs)AKAudioFile(im)initForWriting:settings:commonFormat:interleaved:error:":{"name":"init(forWriting:settings:commonFormat:interleaved:)","abstract":"<p>Initialize the audio file</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@M@AudioKit@objc(cs)AKAudioFile(im)initForWriting:settings:error:":{"name":"init(forWriting:settings:)","abstract":"<p>Super.init inherited from AVAudioFile superclass</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@CM@AudioKit@objc(cs)AKAudioFile(py)sampler":{"name":"sampler","abstract":"<p>Create an AKSampler loaded with the current AKAudioFile</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@CM@AudioKit@objc(cs)AKAudioFile(py)midiSampler":{"name":"midiSampler","abstract":"<p>Create an AKMIDISampler loaded with the current AKAudioFile</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@CM@AudioKit@objc(cs)AKAudioFile(py)player":{"name":"player","abstract":"<p>Create an AKAudioPlayer to play the current AKAudioFile</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC10normalizedA2C13BaseDirectoryO7baseDir_SS4nameSf11newMaxLeveltKF":{"name":"normalized(baseDir:name:newMaxLevel:)","abstract":"<p>Normalize an AKAudioFile to have a peak of newMaxLevel dB.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC8reversedA2C13BaseDirectoryO7baseDir_SS4nametKF":{"name":"reversed(baseDir:name:)","abstract":"<p>Returns an AKAudioFile with audio reversed (will playback in reverse from end to beginning).</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC10appendedByA2C4file_AC13BaseDirectoryO7baseDirSS4nametKF":{"name":"appendedBy(file:baseDir:name:)","abstract":"<p>Returns an AKAudioFile with appended audio data from another AKAudioFile.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC9extractedACs5Int64V10fromSample_AF02toH0AC13BaseDirectoryO7baseDirSS4nametKF":{"name":"extracted(fromSample:toSample:baseDir:name:)","abstract":"<p>Returns an AKAudioFile that will contain a range of samples from the current AKAudioFile</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC6silentACs5Int64V7samples_AC13BaseDirectoryO7baseDirSS4nametKFZ":{"name":"silent(samples:baseDir:name:)","abstract":"<p>Returns a silent AKAudioFile with a length set in samples.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileCACSS04readD4Name_AC13BaseDirectoryO7baseDirtKcfc":{"name":"init(readFileName:baseDir:)","abstract":"<p>Opens a file for reading.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileCA2C13BaseDirectoryO7writeIn_SSSg4names10DictionaryVySSypG8settingstKcfc":{"name":"init(writeIn:name:settings:)","abstract":"<p>Initialize file for recording / writing purpose</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileCACSaySaySfGG06createD10FromFloats_AC13BaseDirectoryO7baseDirSS4nametKcfc":{"name":"init(createFileFromFloats:baseDir:name:)","abstract":"<p>Instantiate a file from Floats Arrays.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileCACSo16AVAudioPCMBufferC04fromeF0_AC13BaseDirectoryO7baseDirSS4nametKcfc":{"name":"init(fromAVAudioPCMBuffer:baseDir:name:)","abstract":"<p>Convenience init to instantiate a file from an AVAudioPCMBuffer.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC20AsyncProcessCallbacka":{"name":"AsyncProcessCallback","abstract":"<p>typealias for AKAudioFile Async Process Completion Handler</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile/ExportFormat.html":{"name":"ExportFormat","abstract":"<p>ExportFormat enum to set target format when exporting AKAudiofiles</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@CM@AudioKit@objc(cs)AKAudioFile(cpy)queuedAsyncProcessCount":{"name":"queuedAsyncProcessCount","abstract":"<p>Returns the remaining not completed queued Async processes (Int)</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@CM@AudioKit@objc(cs)AKAudioFile(cpy)scheduledAsyncProcessesCount":{"name":"scheduledAsyncProcessesCount","abstract":"<p>Returns the total scheduled Async processes count (Int)</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/c:@CM@AudioKit@objc(cs)AKAudioFile(cpy)completedAsyncProcessesCount":{"name":"completedAsyncProcessesCount","abstract":"<p>Returns the completed Async processes count (Int)</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC23normalizeAsynchronouslyyAC13BaseDirectoryO7baseDir_SS4nameSf11newMaxLevelyACSg_So7NSErrorCSgtc17completionHandlertF":{"name":"normalizeAsynchronously(baseDir:name:newMaxLevel:completionHandler:)","abstract":"<p>Process the current AKAudioFile in background to return an","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC21reverseAsynchronouslyyAC13BaseDirectoryO7baseDir_SS4nameyACSg_So7NSErrorCSgtc17completionHandlertF":{"name":"reverseAsynchronously(baseDir:name:completionHandler:)","abstract":"<p>Process the current AKAudioFile in background to return the current AKAudioFile reversed (will play backward)</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC20appendAsynchronouslyyAC4file_AC13BaseDirectoryO7baseDirSS4nameyACSg_So7NSErrorCSgtc17completionHandlertF":{"name":"appendAsynchronously(file:baseDir:name:completionHandler:)","abstract":"<p>Process an AKAudioFile in background to return an AKAudioFile with appended audio data from another AKAudioFile.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC21extractAsynchronouslyys5Int64V10fromSample_AF02toI0AC13BaseDirectoryO7baseDirSS4nameyACSg_So7NSErrorCSgtc17completionHandlertF":{"name":"extractAsynchronously(fromSample:toSample:baseDir:name:completionHandler:)","abstract":"<p>Process the current AKAudioFile in background to return an AKAudioFile with an extracted range of audio data.</p>","parent_name":"AKAudioFile"},"Classes/AKAudioFile.html#/s:8AudioKit11AKAudioFileC20exportAsynchronouslyySS4name_AC13BaseDirectoryO7baseDirAC12ExportFormatO0eM0s5Int64V10fromSampleAM02toP0yACSg_So7NSErrorCSgtc8callbacktF":{"name":"exportAsynchronously(name:baseDir:exportFormat:fromSample:toSample:callback:)","abstract":"<p>Exports Asynchronously to a new AKAudiofile with trimming options.</p>","parent_name":"AKAudioFile"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cpy)format":{"name":"format","abstract":"<p>Format of AudioKit Nodes</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cpy)engine":{"name":"engine","abstract":"<p>Reference to the AV Audio Engine</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cpy)output":{"name":"output","abstract":"<p>An audio output operation that most applications will need to use last</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cpy)inputDevices":{"name":"inputDevices","abstract":"<p>Enumerate the list of available input devices.</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cpy)outputDevices":{"name":"outputDevices","abstract":"<p>Enumerate the list of available output devices.</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cpy)inputDevice":{"name":"inputDevice","abstract":"<p>The name of the current input device, if available.</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cpy)outputDevice":{"name":"outputDevice","abstract":"<p>The name of the current output device, if available.</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cm)setInputDevice:error:":{"name":"setInputDevice(_:)","abstract":"<p>Change the preferred input device, giving it one of the names from the list of available inputs.</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cm)setOutputDevice:error:":{"name":"setOutputDevice(_:)","abstract":"<p>Change the preferred output device, giving it one of the names from the list of available output.</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/s:8AudioKitAAC5startySayAA18AKPeriodicFunctionCG21withPeriodicFunctionsd_tFZ":{"name":"start(withPeriodicFunctions:)","abstract":"<p>Start up the audio engine with periodic functions</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cm)start":{"name":"start()","abstract":"<p>Start up the audio engine</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cm)stop":{"name":"stop()","abstract":"<p>Stop the audio engine</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cpy)tester":{"name":"tester","abstract":"<p>Testing AKNode</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cm)testWithNode:duration:afterStart:":{"name":"test(node:duration:afterStart:)","abstract":"<p>Test the output of a given node</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cm)auditionTestWithNode:duration:":{"name":"auditionTest(node:duration:)","abstract":"<p>Audition the test to hear what it sounds like</p>","parent_name":"AudioKit"},"Classes/AudioKit.html#/c:@M@AudioKit@objc(cs)AudioKit(cm)disconnectAllInputs":{"name":"disconnectAllInputs()","abstract":"<p>Disconnect all inputs</p>","parent_name":"AudioKit"},"Classes/AudioKit.html":{"name":"AudioKit","abstract":"<p>Top level AudioKit managing class</p>"},"Classes/AKAudioFile.html":{"name":"AKAudioFile","abstract":"<p>Audio file, inherits from AVAudioFile and adds functionality</p>"},"Classes/AKCustomUgen.html":{"name":"AKCustomUgen","abstract":"<p>Custom Sporth Unit Generator (Ugen)</p>"},"Classes/AKDevice.html":{"name":"AKDevice","abstract":"<p>Wrapper for audio device selection</p>"},"Classes/AKMicrophoneTracker.html":{"name":"AKMicrophoneTracker","abstract":"<p>An easy to use class to do usual microphone tracking</p>"},"Classes/AKNodeRecorder.html":{"name":"AKNodeRecorder","abstract":"<p>Simple audio recorder class</p>"},"Classes/AKPeriodicFunction.html":{"name":"AKPeriodicFunction","abstract":"<p>A class to periodically perform a callback</p>"},"Classes/AKSettings.html":{"name":"AKSettings","abstract":"<p>Global settings for AudioKit</p>"},"Classes/AKTable.html":{"name":"AKTable","abstract":"<p>A table of values accessible as a waveform or lookup mechanism</p>"},"Enums/AKTableType.html":{"name":"AKTableType","abstract":"<p>Supported default table types</p>"},"Classes/AKTester.html":{"name":"AKTester","abstract":"<p>Testing node</p>"},"Classes/AKTuningTable.html":{"name":"AKTuningTable","abstract":"<p>Tuning table stores frequencies at which to play MIDI notes</p>"},"AudioKit Core.html":{"name":"AudioKit Core"},"MIDI.html":{"name":"MIDI"},"Sequencer.html":{"name":"Sequencer"},"Nodes.html":{"name":"Nodes"},"Analysis Nodes.html":{"name":"Analysis Nodes"},"Delay Nodes.html":{"name":"Delay Nodes"},"Distortion Nodes.html":{"name":"Distortion Nodes"},"Dynamics Nodes.html":{"name":"Dynamics Nodes"},"Effects Nodes.html":{"name":"Effects Nodes"},"Envelopes.html":{"name":"Envelopes"},"Filter Nodes.html":{"name":"Filter Nodes"},"Reverb Nodes.html":{"name":"Reverb Nodes"},"Noise Generator Nodes.html":{"name":"Noise Generator Nodes"},"Oscillator Nodes.html":{"name":"Oscillator Nodes"},"Physical Models.html":{"name":"Physical Models"},"Input Node.html":{"name":"Input Node"},"Mixing Nodes.html":{"name":"Mixing Nodes"},"Playback Nodes.html":{"name":"Playback Nodes"},"Operations.html":{"name":"Operations"},"Math.html":{"name":"Math"},"Random Number Generators.html":{"name":"Random Number Generators"},"Plotting Tools.html":{"name":"Plotting Tools"},"Taps.html":{"name":"Taps"},"UI Elements.html":{"name":"UI Elements"},"Other Classes.html":{"name":"Other Classes","abstract":"<p>The following classes are available globally.</p>"},"Other Global Variables.html":{"name":"Other Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Other Enums.html":{"name":"Other Enums","abstract":"<p>The following enums are available globally.</p>"},"Other Extensions.html":{"name":"Other Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Other Functions.html":{"name":"Other Functions","abstract":"<p>The following functions are available globally.</p>"},"Other Protocols.html":{"name":"Other Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Other Structs.html":{"name":"Other Structs","abstract":"<p>The following structs are available globally.</p>"},"Other Typealiases.html":{"name":"Other Typealiases","abstract":"<p>The following typealiases are available globally.</p>"}}